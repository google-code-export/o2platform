panel.clear();         
var controls = panel.add_1x1(false);   
var sosGui = controls[1].add<SonOfStrikeGui>();                
var script = controls[0].add_Script(false);       
script.InvocationParameters.add("sosGui",(Action<string>) sosGui.executeCmd);     

sosGui.launch(@"C:\_O2_SVN\SourceCode\O2_Binaries\O2.exe");  

/*var controls = panel.add_1x1();     
controls[0].add<SonOfStrikeGui>();         
controls[1].add<CmdExeGui>();        
*/ 
//O2File:C:\O2\_XRules_Local\APIs\CmdExeAPI.cs
//O2File:C:\O2\_XRules_Local\APIs\SunOfStrikeApi.cs


--------------------------------

using O2.API.Visualization.Twitter;
using O2.API.AST.ExtensionMethods;
using O2.API.AST.Graph;
using O2.API.Visualization.ExtensionMethods;
using GraphSharp.Controls;
using O2.Script;
using O2.External.SharpDevelop.Ascx;
using O2.External.SharpDevelop.ExtensionMethods;
using O2.XRules.Database.O2Utils;
using O2.XRules.Database.ExtensionMethods;
using O2.External.IE.ExtensionMethods;
using O2.DotNetWrappers.Network;
using O2.DotNetWrappers.DotNet;
using O2.DotNetWrappers.Windows;
using O2.DotNetWrappers.ExtensionMethods;
using O2.Views.ASCX.classes.MainGUI;
using O2.Views.ASCX.CoreControls;
using O2.Kernel.ExtensionMethods;
using O2.Kernel;
using O2.Interfaces;
using System.Drawing;
using System.Windows.Forms;
using System;
public class DynamicType
{
	public string dynamicMethod(object returnData, System.Action<string> sosGui)
	{
		for(int i=0; i <5 ; i++)
		{
			sosGui(">dotNet_breakInto");   
			//sosGui(">dotNet_loadSoS");    
			sosGui(">dotNet_help");
			sosGui(">dotNet_threads");
			sosGui(">dotNet_dumpHeap_Stats");  
			sosGui(">dotNet_dumpHeap_Raw");   
		//	sosGui(">dotNet_help");
			sosGui(">go"); 
			this.sleep(4000);
		}
		//sosGui(">showHideReceivedData"); 
		   
		//sosGui(">go"); 
		//sosGui(">dotNet_breakInto"); 
		 
		return "done 7"; 
	}
}

