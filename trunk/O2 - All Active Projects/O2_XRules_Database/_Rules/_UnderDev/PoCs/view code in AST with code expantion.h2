<?xml version="1.0"?>
<H2>
  <SourceCode>//var ws = @"C:\O2\DemoData\HacmeBank_WebServicesSource\HacmeBank_v2_WS\WS_UserManagement.cs";

//var p = ws.csharpAst();
//return p.methods()[0].attributes(); 

graph.wpfInvoke(()=&gt;
{
	try
	{

	/*var code = @"C:\O2\XRulesDatabase\_Rules\_Sample_Vulnerabilities\Web_SQL_Injection.cs".fileContents();  
	var file2 = @"C:\O2\XRulesDatabase\_Rules\_Sample_Vulnerabilities\_MockClasses\HttpContext.cs"; 
	var file3 = @"C:\O2\XRulesDatabase\_Rules\_Sample_Vulnerabilities\_MockClasses\HttpRequest.cs"; 
	var file4 = @"C:\O2\XRulesDatabase\_Rules\_Sample_Vulnerabilities\_MockClasses\SqlCommand.cs";*/
	    
	//var code = @"C:\O2\DemoData\HacmeBank_WebServicesSource\HacmeBank_v2_WS\SqlServerEngine.cs";
	var code = @"C:\O2\DemoData\HacmeBank_WebServicesSource\HacmeBank_v2_WS\WS_UserManagement.cs";
	//var code = @"C:\O2\DemoData\test.cs";  
	//using O2.API.Visualization    
	var newGraph = GraphFactory.emptyGraph();    
	newGraph.edge("","");  	      
	 
	var o2AstResolver = new O2AstResolver();
	o2AstResolver.addReference("O2_Kernel.dll"); 
	o2AstResolver.addReference("System"); 
	o2AstResolver.addReference("System.Data"); 
	foreach(var file in @"C:\O2\DemoData\HacmeBank_WebServicesSource".files("*.cs",true))
	//	if (file.neq(code))
			o2AstResolver.mapSourceCode(file);	 
	//o2AstResolver.mapSourceCode(code);
	//o2AstResolver.mapSourceCode(file2);
	//o2AstResolver.mapSourceCode(file3);
	//o2AstResolver.mapSourceCode(file4); 
	 
	var graphAstVisitor = new GraphAstVisitor(o2AstResolver,code);  	

	var parser = code.csharpAst();	 	
	var methods = parser.methods(); 
	methods[0].AcceptVisitor(graphAstVisitor,new O2GraphNode(parser.CompilationUnit,parser.CompilationUnit));	
	
	
	////O2Ref:System.Data.dll 
	//graphAstVisitor.mapSourceCode(file2);
	//graphAstVisitor.mapSourceCode(file3); 
	//graphAstVisitor.mapSourceCode(file4); 	      	     
	//foreach(var file in @"C:\O2\DemoData\HacmeBank_WebServicesSource".files("*.cs",true))
	//	if (file.neq(code))
	//		graphAstVisitor.mapSourceCode(file);	 
	
/*	
	var cu = parser.CompilationUnit;
	var myProjectContent = new DefaultProjectContent(); 
	var converter = new NRefactoryASTConvertVisitor(myProjectContent);
	cu.AcceptVisitor(converter, null);
	(converter.Cu is ICompilationUnit).str().info();
	graphAstVisitor.resolver.field("cu",converter.Cu);	  
	*/  
	
	//graphAstVisitor.graphFile(code);
		
	//parser.CompilationUnit.AcceptVisitor(graphAstVisitor,new O2GraphNode(parser.CompilationUnit));
	
	/*parser = file2.csharpAst();	 	
	parser.CompilationUnit.AcceptVisitor(graphAstVisitor,new O2GraphNode(parser.CompilationUnit));
	
	parser = file3.csharpAst();	 	
	parser.CompilationUnit.AcceptVisitor(graphAstVisitor,new O2GraphNode(parser.CompilationUnit));
	
	parser = file4.csharpAst();	 	 
	parser.CompilationUnit.AcceptVisitor(graphAstVisitor,new O2GraphNode(parser.CompilationUnit));
	*/
	/*foreach(var variable in parser.methods().variables())   
	 {  
	  	var node2 = new O2GraphNode(variable.name());
		var node1 = new O2GraphNode(variable.initializer(), variable.value());
		newGraph.edge(node1, node2);
	}*/  
		
	graph.set_Graph(graphAstVisitor.Graph);
	graph.defaultLayout();
	graph.tree();
	//graph.showAllLayouts(2000);
	//graph.layout("BoundedFR");
}
catch(Exception ex) 
{
	ex.log("in local script");
}
});
return null;

//return parser.methods().names();

//using ICSharpCode.NRefactory
//using ICSharpCode.NRefactory.Ast
//using O2.External.SharpDevelop.AST
//using O2.DotNetWrappers.DotNet  
//using O2.API.AST.ExtensionMethods.CSharp
 
//using ICSharpCode.SharpDevelop.Dom
//using ICSharpCode.SharpDevelop.Dom.NRefactoryResolver  
 //O2Ref:O2_API_AST.dll
//using O2.API.AST.Graph  
//using O2.API.AST.CSharp
//using O2.API.AST.ExtensionMethods  
//O2_File:C:\_O2_SVN\SourceCode\O2 - All Active Projects\O2_APIs\O2_API_AST\CSharp\AstVisitors.cs 
//O2_File:C:\_O2_SVN\SourceCode\O2 - All Active Projects\O2_APIs\O2_API_AST\Graph\O2GraphNode.cs
//O2_File:C:\_O2_SVN\SourceCode\O2 - All Active Projects\O2_APIs\O2_API_AST\Graph\GraphAstVisitor.cs 

 </SourceCode>
  <ReferencedAssemblies />
</H2>