// This file is part of the OWASP O2 Platform (http://www.owasp.org/index.php/OWASP_O2_Platform) and is released under the Apache 2.0 License (http://www.apache.org/licenses/LICENSE-2.0)
using System;
using System.Windows.Forms;
using System.Collections.Generic;
using System.Linq;
using System.Reflection;
using System.Text;
using O2.Interfaces.O2Core;
using O2.Kernel;
using O2.Kernel.ExtensionMethods;
using O2.DotNetWrappers.ExtensionMethods;
using O2.DotNetWrappers.Windows;
using O2.DotNetWrappers.DotNet;
using O2.Views.ASCX;
using O2.Views.ASCX.ExtensionMethods;
using O2.Views.ASCX.classes.MainGUI;
using O2.Views.ASCX.Ascx.MainGUI;
using O2.External.IE.ExtensionMethods;
using O2.XRules.Database._Rules._Interfaces;

namespace O2.Script
{
    public class MediaWikiEditor : Control
    {     
    	public String FileWithSecretData {get; set;}
    	
    	public O2MediaWikiAPI WikiApi {get; set;}
    	public WordPressAPI WpApi {get; set;}
    	
    	public static MediaWikiEditor launch()
    	{    		
    		var wikiEditor = O2Gui.open<MediaWikiEditor>("O2 MediaWiki Editor",750,500);
    		wikiEditor.buildGui();
    		return wikiEditor;
    	}
    	
    	public MediaWikiEditor()
    	{
    		FileWithSecretData = @"C:\O2\_USERDATA\O2TestUsers.xml";
    	}
    	
    	public void loginToWikiAndWordPress()
    	{
    		// MediaWiki Api Object
    		WikiApi = new O2PlatformWikiAPI(); 			
			var secretData = FileWithSecretData.deserialize<SecretData>();
			var username = secretData.username("O2Platform-Wiki");
			var password = secretData.password("O2Platform-Wiki");
			WikiApi.login(username,password); 			
			
			// WordPress Api Object
			WpApi = new WordPressAPI("http://use-o2.com");
			//WpApi.login(secretData.username("O2Platform-WordPress"), secretData.password("O2Platform-WordPress"));			
    	}    					        

        public void buildGui()
        {
        	loginToWikiAndWordPress();
        	// add Controls
        	//var panel = O2Gui.open<Panel>("MediaWiki Editor", 750,500);			 
			var controls = this.add_1x2("WikiText","Preview","Live data (Wiki or WordPress)",true,500,300); 
			var wikiTextEditor = controls[0].add_RichTextBox();
			var browserPreview = controls[1].add_Browser();
			var browserCurrent = controls[2].add_Browser(); 
			
			var textBox = wikiTextEditor.insert_Above<TextBox>(50);
			var bottomPanel = textBox.insert_Below<Panel>(30);  			
			
			wikiTextEditor.insert_Below<ascx_LogViewer>(130);
			
			//Events			
			wikiTextEditor.onKeyPress((key)=> 			// add suport to paste images form Clipboard
				{
					if (key == (Keys.Control | Keys.V))		
						if (Clipboard.ContainsImage())
						{ 
							"Image in Clipboard".debug();
							O2Thread.mtaThread( 
								()=>{
										var imageUrl = WikiApi.uploadImage_FromClipboard();
										var wikiTextForImage = WikiApi.getWikiTextForImage(imageUrl);					
										wikiTextEditor.insertText(wikiTextForImage); 
									});
							return true;
						}		 			 
					return false;
				}); 
				
						
			browserPreview.silent(true);
			browserCurrent.silent(true);
						
			//default values
			textBox.set_Text("Test");			 			
			
			// add buttons	& its events	 
			
			bottomPanel.add_Button("Post To WordPress",0, 350).onClick(
				()=>{
						var pageToEdit = textBox.get_Text();																				
						var postId = WpApi.post_from_MediaWiki(WikiApi,pageToEdit);
						var postUrl = "{0}/?p={1}".format(WpApi.WordPressServer,postId);
						browserCurrent.open(postUrl);
					})
					  .append_Link("Reset network connection", ()=> System.GC.Collect());
						
			
			bottomPanel.add_Button("Load",0).onClick(
				()=>{
						O2Thread.mtaThread(()=>
						{			
							var pageToEdit =  textBox.get_Text();	
							var wikiText = WikiApi.wikiText(pageToEdit);
							//wikiTextEditor.set_Text(wikiApi.wikiText(pageToEdit));
							wikiTextEditor.set_Text(wikiText);
							browserPreview.set_Text(WikiApi.parseText(wikiText,true));
							browserCurrent.set_Text(WikiApi.html(pageToEdit));	  
						});
					}).click();
			
			
			bottomPanel.add_Button("Preview",0,100).onClick(
				()=>{
						O2Thread.mtaThread( 
								()=>{
										browserPreview.set_Text(WikiApi.parseText(wikiTextEditor.get_Text(),true));
									});
					});
					
			bottomPanel.add_Button("Save",0,200).onClick(
				()=>{
						var currentPage =  textBox.get_Text();
						// save content
						WikiApi.save(currentPage, wikiTextEditor.get_Text()); 
						 
						// reload content and show it
						var wikiText = WikiApi.wikiText(currentPage);					
						browserPreview.set_Text(WikiApi.parseText(wikiText,true));
						browserCurrent.set_Text(WikiApi.html(currentPage));	  			
					}); 
			
			wikiTextEditor.onKeyPress(Keys.Enter, 
				(code)=>{
							O2Thread.mtaThread(()=>
							{			
								browserPreview.set_Text(WikiApi.parseText(code,true));
							});
						});
			        }
        
        
    	    	    	    	    
    }
}
