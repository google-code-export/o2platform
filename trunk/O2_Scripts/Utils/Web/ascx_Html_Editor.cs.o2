// This file is part of the OWASP O2 Platform (http://www.owasp.org/index.php/OWASP_O2_Platform) and is released under the Apache 2.0 License (http://www.apache.org/licenses/LICENSE-2.0)
//O2Tag_OnlyAddReferencedAssemblies
//O2Ref:System.dll
//O2Ref:System.Core.dll
//O2Ref:System.Windows.Forms.dll
//O2Ref:O2_Kernel.dll
//O2Ref:O2_Interfaces.dll
//O2Ref:O2_DotNetWrappers.dll
//O2Ref:O2_Views_Ascx.dll
//O2Ref:O2_External_IE.dll
//O2Ref:O2_External_SharpDevelop.dll
//O2Ref:O2SharpDevelop.dll
//O2Ref:System.Drawing.dll
using System;
using System.IO;
using System.Collections.Generic;
using System.Reflection;
using System.Text;
using System.Windows.Forms;
using System.Drawing;
using O2.Kernel;
using O2.Kernel.ExtensionMethods;
using O2.Interfaces.O2Core;
using O2.DotNetWrappers.DotNet;
using O2.DotNetWrappers.Windows;
using O2.DotNetWrappers.ExtensionMethods;
using O2.Views.ASCX;
using O2.Views.ASCX.classes;
using O2.Views.ASCX.classes.MainGUI;
using O2.Views.ASCX.CoreControls;
using O2.Views.ASCX.ExtensionMethods;

using O2.External.IE;
using O2.External.IE.Wrapper;
using O2.External.IE.Interfaces;
using O2.External.IE.ExtensionMethods;

using O2.External.SharpDevelop.Ascx;
using O2.External.SharpDevelop.ExtensionMethods;
//O2Ref:Microsoft.mshtml.dll
using mshtml;


using System.Threading;

namespace O2.XRules.Database.Utils
{
    public class ascx_Html_Editor: UserControl
    {    
    	private static IO2Log log = PublicDI.log;
    	public ascx_Directory directory;
		public IO2Browser browser;
		public ascx_SourceCodeViewer htmlCode;
		public PictureBox pictureBox;
		public string currentFile = "";
		
		public string startDir = Path.Combine(PublicDI.config.O2TempDir,"_HtmlPages");

        public static void startControl()
    	{       		
    		O2Gui.open<ascx_Html_Editor>("Html Editor", 700,500);
    	}    	
    	
    	public ascx_Html_Editor()
    	{    		    	
    		Thread.CurrentThread.SetApartmentState( ApartmentState.STA);
    		buildGui();	                		
    		browser.open("http://www.google.com");
        }
    
        private void buildGui()
        {
        	//var groupBoxes = this.add_SplitContainer_2x2("Directory","WebEditor","Config","HtmlCode",true, 100,40,40);
        	var groupBoxes = this.add_1x1("WebEditor (Edit on page)","HtmlCode (see results in code)");
        	browser = groupBoxes[0].add_WebBrowserWithLocationBar();
        	htmlCode = groupBoxes[1].add_SourceCodeViewer();
        	//directory = groupBoxes[0].add_Directory(startDir);        	
        	//browser = groupBoxes[1].add_WebBrowserWithLocationBar();
        	//htmlCode = groupBoxes[3].add_SourceCodeViewer();
        	htmlCode.astDetails(false);
        	
        	// build config
        	/*groupBoxes[2].add_Link("toggle edit mode", 20 ,10,()=> setEditMode(!getEditMode()) );
        	groupBoxes[2].add_Link("refresh", 40 ,10,()=> updateHtmlPage() );
        	groupBoxes[2].add_Link("take screenshot", 60 ,10,()=> takeScreenShot() );
        	
        	pictureBox = groupBoxes[2].add_PictureBox(70,10);        	
        	pictureBox.anchor_All();
        	takeScreenShot();
        	// setup controls events
        	directory._onDirectoryDoubleClick+=selectedFileOrFolder;       	
        	*/
        	browser.onDocumentCompleted +=onDocumentCompleted;
        	//htmlCode.eDocumentDataChanged += htmlTextChanged;
        	// fine tune loaded controls behaviour
        	//directory._WatchFolder = true;
        	//directory.AllowDrop = false;
        	htmlCode.editor().colorCodeForExtension(".html");
        	
        	// remove on next code Sync
        	((O2BrowserIE)browser).AllowWebBrowserDrop  = false;	
        	        	
     	}   
    	    	  
		public Image takeScreenShot()
		{
			var image = Screenshots.getScreenshotOfDesktop();
			//var image = Screenshots.getScreenshotOfFormObjectAndItsControls(this);			
			"image:{0}".info(image.typeName());
			
        	pictureBox.BackgroundImage = image;
			return image;
		}
    	    	  
		public void onBrowserLocationChanged(IO2Browser _browser, string file)
		{
			log.info("file: {0}", file);
			loadFile(file);
		}
		
		public void loadFile(string fileToLoad)
		{
			log.info("fileToLoad: {0}", fileToLoad);
			if (fileToLoad.empty())
				return;
			var file = Path.Combine(directory.getCurrentDirectory(), fileToLoad);
			log.info("file: {0}", file);
			if (! file.extension(".html"))
				file+=".html";
			if (! file.exists())
			{
				log.info("Creating file: {0}", file);
				file.create("<html><body>web content</body></html>");
			}
			selectedFileOrFolder(file);
		}
		
		public void selectedFileOrFolder(string fileOrFolder)
		{
			if (fileOrFolder.dirExists())			// if it is a directory return
				return;			
			currentFile  = fileOrFolder;
			
			browser.open(fileOrFolder);
		}
		
		public void onDocumentCompleted(IO2HtmlPage htmlPage)
		{
			"---- onDocumentCompleted".info();
			var o2BrowserIE = (O2BrowserIE)browser;
			
			//this.info("---- Text: {0}" , o2BrowserIE.Text());
			setEditMode(true);
		}
		
		public bool getEditMode()
		{
			return browser.HtmlEditMode;
		}
		
		public void setEditMode(bool value)
		{		
			var o2BrowserIE = (O2BrowserIE)browser;
			o2BrowserIE.HtmlEditMode = value;
			if (value)						
				o2BrowserIE.onEditedHtmlChange(updateHtmlPage);				
				
			updateHtmlPage();			
		}
		
		public void updateHtmlPage()
		{
			var o2BrowserIE = (O2BrowserIE)browser;
			updateHtmlPage(o2BrowserIE.html());		
		}
		public void updateHtmlPage(string html)
		{
			
			var value = htmlCode.textEditorControl().ActiveTextAreaControl.VScrollBar.Value;
			htmlCode.textEditorControl().Document.TextContent = html;
			htmlCode.textEditorControl().ActiveTextAreaControl.VScrollBar.Value = value;
			
			
			//var pageHtml = ((O2BrowserIE)browser).DocumentText;
			//htmlCode.Parent.BackColor = System.Drawing.Color.White;
			//log.info("before: {0}", value);
			//var fileType = (currentFile.extension(".html")) ? currentFile : "AAA.html";
			//htmlCode.Visible = false;
			//htmlCode.setDocumentContents(html, fileType);
			
			//log.info("after: {0}", value);
			
			//htmlCode.Visible = true;
		/*
			var doc = (IHTMLDocument3) ((O2BrowserIE)browser).Document.DomDocument;
			if (doc == null)
				log.error("doc was null!!");
			else
			{
	            var pageHtml = doc.documentElement.outerHTML;
	            
				htmlCode.setDocumentContents(pageHtml, currentFile);
			}*/
		}
		
		/*public void htmlTextChanged(string newText)
		{
			var currentHtmlCode = ((O2BrowserIE)browser).DocumentText;
			if (currentHtmlCode != newText)
			{
				//browser.HtmlEditMode = false;
				((O2BrowserIE)browser).DocumentText = newText;
				//browser.HtmlEditMode = true;
			}
		}*/
		
		
				
    }        
}
