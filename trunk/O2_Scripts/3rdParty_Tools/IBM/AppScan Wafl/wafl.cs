//O2Ref:O2_Misc_Microsoft_MPL_Libs.dll
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.5448
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace www.ibm.com.WAFLSchema {
    using System;
    using System.Collections;
    using System.Collections.Generic;
    using System.IO;
    using System.Diagnostics;
    using System.Xml;
    using System.Xml.Schema;
    using System.Xml.Linq;
    using Xml.Schema.Linq;
    
    
    /// <summary>
    /// <para>
    /// Regular expression: (globalbeandecls, syntheticmethods, entrypoints, callreplacements)
    /// </para>
    /// </summary>
    public partial class wafl : XTypedElement, IXMetaData {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;
        
         public static explicit operator wafl(XElement xe) { return XTypedServices.ToXTypedElement<wafl>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
        
        static wafl() {
            BuildElementDictionary();
            contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("global-bean-decls", "http://www.ibm.com/WAFLSchema")), new NamedContentModelEntity(XName.Get("synthetic-methods", "http://www.ibm.com/WAFLSchema")), new NamedContentModelEntity(XName.Get("entrypoints", "http://www.ibm.com/WAFLSchema")), new NamedContentModelEntity(XName.Get("call-replacements", "http://www.ibm.com/WAFLSchema")));
        }
        
        /// <summary>
        /// <para>
        /// Regular expression: (globalbeandecls, syntheticmethods, entrypoints, callreplacements)
        /// </para>
        /// </summary>
        public wafl() {
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (globalbeandecls, syntheticmethods, entrypoints, callreplacements)
        /// </para>
        /// </summary>
        public globalbeandeclsLocalType globalbeandecls {
            get {
                XElement x = this.GetElement(XName.Get("global-bean-decls", "http://www.ibm.com/WAFLSchema"));
                return ((globalbeandeclsLocalType)(x));
            }
            set {
                this.SetElement(XName.Get("global-bean-decls", "http://www.ibm.com/WAFLSchema"), value);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (globalbeandecls, syntheticmethods, entrypoints, callreplacements)
        /// </para>
        /// </summary>
        public syntheticmethodsLocalType syntheticmethods {
            get {
                XElement x = this.GetElement(XName.Get("synthetic-methods", "http://www.ibm.com/WAFLSchema"));
                return ((syntheticmethodsLocalType)(x));
            }
            set {
                this.SetElement(XName.Get("synthetic-methods", "http://www.ibm.com/WAFLSchema"), value);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (globalbeandecls, syntheticmethods, entrypoints, callreplacements)
        /// </para>
        /// </summary>
        public entrypointsLocalType entrypoints {
            get {
                XElement x = this.GetElement(XName.Get("entrypoints", "http://www.ibm.com/WAFLSchema"));
                return ((entrypointsLocalType)(x));
            }
            set {
                this.SetElement(XName.Get("entrypoints", "http://www.ibm.com/WAFLSchema"), value);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (globalbeandecls, syntheticmethods, entrypoints, callreplacements)
        /// </para>
        /// </summary>
        public callreplacementsLocalType callreplacements {
            get {
                XElement x = this.GetElement(XName.Get("call-replacements", "http://www.ibm.com/WAFLSchema"));
                return ((callreplacementsLocalType)(x));
            }
            set {
                this.SetElement(XName.Get("call-replacements", "http://www.ibm.com/WAFLSchema"), value);
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
            get {
                return localElementDictionary;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName {
            get {
                return XName.Get("wafl", "http://www.ibm.com/WAFLSchema");
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin {
            get {
                return SchemaOrigin.Element;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager {
            get {
                return LinqToXsdTypeManager.Instance;
            }
        }
        
        public void Save(string xmlFile) {
            XTypedServices.Save(xmlFile, Untyped);
        }
        
        public void Save(System.IO.TextWriter tw) {
            XTypedServices.Save(tw, Untyped);
        }
        
        public void Save(System.Xml.XmlWriter xmlWriter) {
            XTypedServices.Save(xmlWriter, Untyped);
        }
        
        public static wafl Load(string xmlFile) {
            return XTypedServices.Load<wafl>(xmlFile);
        }
        
        public static wafl Load(System.IO.TextReader xmlFile) {
            return XTypedServices.Load<wafl>(xmlFile);
        }
        
        public static wafl Parse(string xml) {
            return XTypedServices.Parse<wafl>(xml);
        }
        
        public override XTypedElement Clone() {
            return XTypedServices.CloneXTypedElement<wafl>(this);
        }
        
        private static void BuildElementDictionary() {
            localElementDictionary.Add(XName.Get("global-bean-decls", "http://www.ibm.com/WAFLSchema"), typeof(globalbeandeclsLocalType));
            localElementDictionary.Add(XName.Get("synthetic-methods", "http://www.ibm.com/WAFLSchema"), typeof(syntheticmethodsLocalType));
            localElementDictionary.Add(XName.Get("entrypoints", "http://www.ibm.com/WAFLSchema"), typeof(entrypointsLocalType));
            localElementDictionary.Add(XName.Get("call-replacements", "http://www.ibm.com/WAFLSchema"), typeof(callreplacementsLocalType));
        }
        
        ContentModelEntity IXMetaData.GetContentModel() {
            return contentModel;
        }
        
        /// <summary>
        /// <para>
        /// Regular expression: (objectdecl+)
        /// </para>
        /// </summary>
        public partial class globalbeandeclsLocalType : XTypedElement, IXMetaData {
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            private XTypedList<objectdeclLocalType> objectdeclField;
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            private static ContentModelEntity contentModel;
            
         public static explicit operator globalbeandeclsLocalType(XElement xe) { return XTypedServices.ToXTypedElement<globalbeandeclsLocalType>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
            
            static globalbeandeclsLocalType() {
                BuildElementDictionary();
                contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("object-decl", "http://www.ibm.com/WAFLSchema")));
            }
            
            /// <summary>
            /// <para>
            /// Regular expression: (objectdecl+)
            /// </para>
            /// </summary>
            public globalbeandeclsLocalType() {
            }
            
            /// <summary>
            /// <para>
            /// Occurrence: required, repeating
            /// </para>
            /// <para>
            /// Regular expression: (objectdecl+)
            /// </para>
            /// </summary>
            public IList<www.ibm.com.WAFLSchema.wafl.globalbeandeclsLocalType.objectdeclLocalType> objectdecl {
                get {
                    if ((this.objectdeclField == null)) {
                        this.objectdeclField = new XTypedList<objectdeclLocalType>(this, LinqToXsdTypeManager.Instance, XName.Get("object-decl", "http://www.ibm.com/WAFLSchema"));
                    }
                    return this.objectdeclField;
                }
                set {
                    if ((value == null)) {
                        this.objectdeclField = null;
                    }
                    else {
                        if ((this.objectdeclField == null)) {
                            this.objectdeclField = XTypedList<objectdeclLocalType>.Initialize(this, LinqToXsdTypeManager.Instance, value, XName.Get("object-decl", "http://www.ibm.com/WAFLSchema"));
                        }
                        else {
                            XTypedServices.SetList<objectdeclLocalType>(this.objectdeclField, value);
                        }
                    }
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
                get {
                    return localElementDictionary;
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            XName IXMetaData.SchemaName {
                get {
                    return XName.Get("global-bean-decls", "http://www.ibm.com/WAFLSchema");
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            SchemaOrigin IXMetaData.TypeOrigin {
                get {
                    return SchemaOrigin.Fragment;
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            ILinqToXsdTypeManager IXMetaData.TypeManager {
                get {
                    return LinqToXsdTypeManager.Instance;
                }
            }
            
            public override XTypedElement Clone() {
                return XTypedServices.CloneXTypedElement<globalbeandeclsLocalType>(this);
            }
            
            private static void BuildElementDictionary() {
                localElementDictionary.Add(XName.Get("object-decl", "http://www.ibm.com/WAFLSchema"), typeof(objectdeclLocalType));
            }
            
            ContentModelEntity IXMetaData.GetContentModel() {
                return contentModel;
            }
            
            public partial class objectdeclLocalType : XTypedElement, IXMetaData {
                
         public static explicit operator objectdeclLocalType(XElement xe) { return XTypedServices.ToXTypedElement<objectdeclLocalType>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
                
                public objectdeclLocalType() {
                }
                
                public string TypedValue {
                    get {
                        XElement x = this.Untyped;
                        return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
                    }
                    set {
                        this.SetValue(value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
                    }
                }
                
                /// <summary>
                /// <para>
                /// Occurrence: required
                /// </para>
                /// </summary>
                public string id {
                    get {
                        XAttribute x = this.Attribute(XName.Get("id", ""));
                        return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
                    }
                    set {
                        this.SetAttribute(XName.Get("id", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
                    }
                }
                
                /// <summary>
                /// <para>
                /// Occurrence: required
                /// </para>
                /// </summary>
                public string type {
                    get {
                        XAttribute x = this.Attribute(XName.Get("type", ""));
                        return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
                    }
                    set {
                        this.SetAttribute(XName.Get("type", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
                    }
                }
                
                /// <summary>
                /// <para>
                /// Occurrence: required
                /// </para>
                /// </summary>
                public string lifespan {
                    get {
                        XAttribute x = this.Attribute(XName.Get("lifespan", ""));
                        return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
                    }
                    set {
                        this.SetAttribute(XName.Get("lifespan", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
                    }
                }
                
                [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                XName IXMetaData.SchemaName {
                    get {
                        return XName.Get("object-decl", "http://www.ibm.com/WAFLSchema");
                    }
                }
                
                [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                SchemaOrigin IXMetaData.TypeOrigin {
                    get {
                        return SchemaOrigin.Fragment;
                    }
                }
                
                [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                ILinqToXsdTypeManager IXMetaData.TypeManager {
                    get {
                        return LinqToXsdTypeManager.Instance;
                    }
                }
                
                public override XTypedElement Clone() {
                    return XTypedServices.CloneXTypedElement<objectdeclLocalType>(this);
                }
                
                ContentModelEntity IXMetaData.GetContentModel() {
                    return ContentModelEntity.Default;
                }
            }
        }
        
        /// <summary>
        /// <para>
        /// Regular expression: (syntheticmethod+)
        /// </para>
        /// </summary>
        public partial class syntheticmethodsLocalType : XTypedElement, IXMetaData {
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            private XTypedList<syntheticmethodLocalType> syntheticmethodField;
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            private static ContentModelEntity contentModel;
            
         public static explicit operator syntheticmethodsLocalType(XElement xe) { return XTypedServices.ToXTypedElement<syntheticmethodsLocalType>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
            
            static syntheticmethodsLocalType() {
                BuildElementDictionary();
                contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("synthetic-method", "http://www.ibm.com/WAFLSchema")));
            }
            
            /// <summary>
            /// <para>
            /// Regular expression: (syntheticmethod+)
            /// </para>
            /// </summary>
            public syntheticmethodsLocalType() {
            }
            
            /// <summary>
            /// <para>
            /// Occurrence: required, repeating
            /// </para>
            /// <para>
            /// Regular expression: (syntheticmethod+)
            /// </para>
            /// </summary>
            public IList<www.ibm.com.WAFLSchema.wafl.syntheticmethodsLocalType.syntheticmethodLocalType> syntheticmethod {
                get {
                    if ((this.syntheticmethodField == null)) {
                        this.syntheticmethodField = new XTypedList<syntheticmethodLocalType>(this, LinqToXsdTypeManager.Instance, XName.Get("synthetic-method", "http://www.ibm.com/WAFLSchema"));
                    }
                    return this.syntheticmethodField;
                }
                set {
                    if ((value == null)) {
                        this.syntheticmethodField = null;
                    }
                    else {
                        if ((this.syntheticmethodField == null)) {
                            this.syntheticmethodField = XTypedList<syntheticmethodLocalType>.Initialize(this, LinqToXsdTypeManager.Instance, value, XName.Get("synthetic-method", "http://www.ibm.com/WAFLSchema"));
                        }
                        else {
                            XTypedServices.SetList<syntheticmethodLocalType>(this.syntheticmethodField, value);
                        }
                    }
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
                get {
                    return localElementDictionary;
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            XName IXMetaData.SchemaName {
                get {
                    return XName.Get("synthetic-methods", "http://www.ibm.com/WAFLSchema");
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            SchemaOrigin IXMetaData.TypeOrigin {
                get {
                    return SchemaOrigin.Fragment;
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            ILinqToXsdTypeManager IXMetaData.TypeManager {
                get {
                    return LinqToXsdTypeManager.Instance;
                }
            }
            
            public override XTypedElement Clone() {
                return XTypedServices.CloneXTypedElement<syntheticmethodsLocalType>(this);
            }
            
            private static void BuildElementDictionary() {
                localElementDictionary.Add(XName.Get("synthetic-method", "http://www.ibm.com/WAFLSchema"), typeof(syntheticmethodLocalType));
            }
            
            ContentModelEntity IXMetaData.GetContentModel() {
                return contentModel;
            }
            
            /// <summary>
            /// <para>
            /// Regular expression: (localdecl?, body)
            /// </para>
            /// </summary>
            public partial class syntheticmethodLocalType : XTypedElement, IXMetaData {
                
                [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();
                
                [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                private static ContentModelEntity contentModel;
                
         public static explicit operator syntheticmethodLocalType(XElement xe) { return XTypedServices.ToXTypedElement<syntheticmethodLocalType>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
                
                static syntheticmethodLocalType() {
                    BuildElementDictionary();
                    contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("local-decl", "http://www.ibm.com/WAFLSchema")), new NamedContentModelEntity(XName.Get("body", "http://www.ibm.com/WAFLSchema")));
                }
                
                /// <summary>
                /// <para>
                /// Regular expression: (localdecl?, body)
                /// </para>
                /// </summary>
                public syntheticmethodLocalType() {
                }
                
                /// <summary>
                /// <para>
                /// Occurrence: optional
                /// </para>
                /// <para>
                /// Regular expression: (localdecl?, body)
                /// </para>
                /// </summary>
                public localdeclLocalType localdecl {
                    get {
                        XElement x = this.GetElement(XName.Get("local-decl", "http://www.ibm.com/WAFLSchema"));
                        return ((localdeclLocalType)(x));
                    }
                    set {
                        this.SetElement(XName.Get("local-decl", "http://www.ibm.com/WAFLSchema"), value);
                    }
                }
                
                /// <summary>
                /// <para>
                /// Occurrence: required
                /// </para>
                /// <para>
                /// Regular expression: (localdecl?, body)
                /// </para>
                /// </summary>
                public bodyLocalType body {
                    get {
                        XElement x = this.GetElement(XName.Get("body", "http://www.ibm.com/WAFLSchema"));
                        return ((bodyLocalType)(x));
                    }
                    set {
                        this.SetElement(XName.Get("body", "http://www.ibm.com/WAFLSchema"), value);
                    }
                }
                
                /// <summary>
                /// <para>
                /// Occurrence: required
                /// </para>
                /// </summary>
                public string sig {
                    get {
                        XAttribute x = this.Attribute(XName.Get("sig", ""));
                        return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
                    }
                    set {
                        this.SetAttribute(XName.Get("sig", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
                    }
                }
                
                [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
                    get {
                        return localElementDictionary;
                    }
                }
                
                [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                XName IXMetaData.SchemaName {
                    get {
                        return XName.Get("synthetic-method", "http://www.ibm.com/WAFLSchema");
                    }
                }
                
                [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                SchemaOrigin IXMetaData.TypeOrigin {
                    get {
                        return SchemaOrigin.Fragment;
                    }
                }
                
                [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                ILinqToXsdTypeManager IXMetaData.TypeManager {
                    get {
                        return LinqToXsdTypeManager.Instance;
                    }
                }
                
                public override XTypedElement Clone() {
                    return XTypedServices.CloneXTypedElement<syntheticmethodLocalType>(this);
                }
                
                private static void BuildElementDictionary() {
                    localElementDictionary.Add(XName.Get("local-decl", "http://www.ibm.com/WAFLSchema"), typeof(localdeclLocalType));
                    localElementDictionary.Add(XName.Get("body", "http://www.ibm.com/WAFLSchema"), typeof(bodyLocalType));
                }
                
                ContentModelEntity IXMetaData.GetContentModel() {
                    return contentModel;
                }
                
                public partial class localdeclLocalType : XTypedElement, IXMetaData {
                    
         public static explicit operator localdeclLocalType(XElement xe) { return XTypedServices.ToXTypedElement<localdeclLocalType>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
                    
                    public localdeclLocalType() {
                    }
                    
                    public string TypedValue {
                        get {
                            XElement x = this.Untyped;
                            return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
                        }
                        set {
                            this.SetValue(value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
                        }
                    }
                    
                    /// <summary>
                    /// <para>
                    /// Occurrence: required
                    /// </para>
                    /// </summary>
                    public string id {
                        get {
                            XAttribute x = this.Attribute(XName.Get("id", ""));
                            return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
                        }
                        set {
                            this.SetAttribute(XName.Get("id", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
                        }
                    }
                    
                    /// <summary>
                    /// <para>
                    /// Occurrence: required
                    /// </para>
                    /// </summary>
                    public string type {
                        get {
                            XAttribute x = this.Attribute(XName.Get("type", ""));
                            return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
                        }
                        set {
                            this.SetAttribute(XName.Get("type", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
                        }
                    }
                    
                    [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                    XName IXMetaData.SchemaName {
                        get {
                            return XName.Get("local-decl", "http://www.ibm.com/WAFLSchema");
                        }
                    }
                    
                    [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                    SchemaOrigin IXMetaData.TypeOrigin {
                        get {
                            return SchemaOrigin.Fragment;
                        }
                    }
                    
                    [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                    ILinqToXsdTypeManager IXMetaData.TypeManager {
                        get {
                            return LinqToXsdTypeManager.Instance;
                        }
                    }
                    
                    public override XTypedElement Clone() {
                        return XTypedServices.CloneXTypedElement<localdeclLocalType>(this);
                    }
                    
                    ContentModelEntity IXMetaData.GetContentModel() {
                        return ContentModelEntity.Default;
                    }
                }
                
                /// <summary>
                /// <para>
                /// Regular expression: ((call | assignment)+)
                /// </para>
                /// </summary>
                public partial class bodyLocalType : XTypedElement, IXMetaData {
                    
                    [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                    private XTypedList<callLocalType> callField;
                    
                    [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                    private XTypedList<assignmentLocalType> assignmentField;
                    
                    [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                    static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();
                    
         public static explicit operator bodyLocalType(XElement xe) { return XTypedServices.ToXTypedElement<bodyLocalType>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
                    
                    static bodyLocalType() {
                        BuildElementDictionary();
                    }
                    
                    /// <summary>
                    /// <para>
                    /// Regular expression: ((call | assignment)+)
                    /// </para>
                    /// </summary>
                    public bodyLocalType() {
                    }
                    
                    /// <summary>
                    /// <para>
                    /// Occurrence: required, choice
                    /// </para>
                    /// <para>
                    /// Setter: Appends
                    /// </para>
                    /// <para>
                    /// Regular expression: ((call | assignment)+)
                    /// </para>
                    /// </summary>
                    public IList<www.ibm.com.WAFLSchema.wafl.syntheticmethodsLocalType.syntheticmethodLocalType.bodyLocalType.callLocalType> call {
                        get {
                            if ((this.callField == null)) {
                                this.callField = new XTypedList<callLocalType>(this, LinqToXsdTypeManager.Instance, XName.Get("call", "http://www.ibm.com/WAFLSchema"));
                            }
                            return this.callField;
                        }
                        set {
                            if ((value == null)) {
                                this.callField = null;
                            }
                            else {
                                if ((this.callField == null)) {
                                    this.callField = XTypedList<callLocalType>.Initialize(this, LinqToXsdTypeManager.Instance, value, XName.Get("call", "http://www.ibm.com/WAFLSchema"));
                                }
                                else {
                                    XTypedServices.SetList<callLocalType>(this.callField, value);
                                }
                            }
                        }
                    }
                    
                    /// <summary>
                    /// <para>
                    /// Occurrence: required, choice
                    /// </para>
                    /// <para>
                    /// Setter: Appends
                    /// </para>
                    /// <para>
                    /// Regular expression: ((call | assignment)+)
                    /// </para>
                    /// </summary>
                    public IList<www.ibm.com.WAFLSchema.wafl.syntheticmethodsLocalType.syntheticmethodLocalType.bodyLocalType.assignmentLocalType> assignment {
                        get {
                            if ((this.assignmentField == null)) {
                                this.assignmentField = new XTypedList<assignmentLocalType>(this, LinqToXsdTypeManager.Instance, XName.Get("assignment", "http://www.ibm.com/WAFLSchema"));
                            }
                            return this.assignmentField;
                        }
                        set {
                            if ((value == null)) {
                                this.assignmentField = null;
                            }
                            else {
                                if ((this.assignmentField == null)) {
                                    this.assignmentField = XTypedList<assignmentLocalType>.Initialize(this, LinqToXsdTypeManager.Instance, value, XName.Get("assignment", "http://www.ibm.com/WAFLSchema"));
                                }
                                else {
                                    XTypedServices.SetList<assignmentLocalType>(this.assignmentField, value);
                                }
                            }
                        }
                    }
                    
                    [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                    Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
                        get {
                            return localElementDictionary;
                        }
                    }
                    
                    [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                    XName IXMetaData.SchemaName {
                        get {
                            return XName.Get("body", "http://www.ibm.com/WAFLSchema");
                        }
                    }
                    
                    [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                    SchemaOrigin IXMetaData.TypeOrigin {
                        get {
                            return SchemaOrigin.Fragment;
                        }
                    }
                    
                    [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                    ILinqToXsdTypeManager IXMetaData.TypeManager {
                        get {
                            return LinqToXsdTypeManager.Instance;
                        }
                    }
                    
                    public override XTypedElement Clone() {
                        return XTypedServices.CloneXTypedElement<bodyLocalType>(this);
                    }
                    
                    private static void BuildElementDictionary() {
                        localElementDictionary.Add(XName.Get("call", "http://www.ibm.com/WAFLSchema"), typeof(callLocalType));
                        localElementDictionary.Add(XName.Get("assignment", "http://www.ibm.com/WAFLSchema"), typeof(assignmentLocalType));
                    }
                    
                    ContentModelEntity IXMetaData.GetContentModel() {
                        return ContentModelEntity.Default;
                    }
                    
                    /// <summary>
                    /// <para>
                    /// Regular expression: (actualparameter+)
                    /// </para>
                    /// </summary>
                    public partial class callLocalType : XTypedElement, IXMetaData {
                        
                        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                        private XTypedList<actualparameterLocalType> actualparameterField;
                        
                        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                        static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();
                        
                        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                        private static ContentModelEntity contentModel;
                        
         public static explicit operator callLocalType(XElement xe) { return XTypedServices.ToXTypedElement<callLocalType>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
                        
                        static callLocalType() {
                            BuildElementDictionary();
                            contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("actual-parameter", "http://www.ibm.com/WAFLSchema")));
                        }
                        
                        /// <summary>
                        /// <para>
                        /// Regular expression: (actualparameter+)
                        /// </para>
                        /// </summary>
                        public callLocalType() {
                        }
                        
                        /// <summary>
                        /// <para>
                        /// Occurrence: required, repeating
                        /// </para>
                        /// <para>
                        /// Regular expression: (actualparameter+)
                        /// </para>
                        /// </summary>
                        public IList<www.ibm.com.WAFLSchema.wafl.syntheticmethodsLocalType.syntheticmethodLocalType.bodyLocalType.callLocalType.actualparameterLocalType> actualparameter {
                            get {
                                if ((this.actualparameterField == null)) {
                                    this.actualparameterField = new XTypedList<actualparameterLocalType>(this, LinqToXsdTypeManager.Instance, XName.Get("actual-parameter", "http://www.ibm.com/WAFLSchema"));
                                }
                                return this.actualparameterField;
                            }
                            set {
                                if ((value == null)) {
                                    this.actualparameterField = null;
                                }
                                else {
                                    if ((this.actualparameterField == null)) {
                                        this.actualparameterField = XTypedList<actualparameterLocalType>.Initialize(this, LinqToXsdTypeManager.Instance, value, XName.Get("actual-parameter", "http://www.ibm.com/WAFLSchema"));
                                    }
                                    else {
                                        XTypedServices.SetList<actualparameterLocalType>(this.actualparameterField, value);
                                    }
                                }
                            }
                        }
                        
                        /// <summary>
                        /// <para>
                        /// Occurrence: required
                        /// </para>
                        /// </summary>
                        public string signature {
                            get {
                                XAttribute x = this.Attribute(XName.Get("signature", ""));
                                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
                            }
                            set {
                                this.SetAttribute(XName.Get("signature", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
                            }
                        }
                        
                        /// <summary>
                        /// <para>
                        /// Occurrence: required
                        /// </para>
                        /// </summary>
                        public string filename {
                            get {
                                XAttribute x = this.Attribute(XName.Get("filename", ""));
                                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
                            }
                            set {
                                this.SetAttribute(XName.Get("filename", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
                            }
                        }
                        
                        /// <summary>
                        /// <para>
                        /// Occurrence: required
                        /// </para>
                        /// </summary>
                        public byte lineNumber {
                            get {
                                XAttribute x = this.Attribute(XName.Get("lineNumber", ""));
                                return XTypedServices.ParseValue<byte>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.UnsignedByte).Datatype);
                            }
                            set {
                                this.SetAttribute(XName.Get("lineNumber", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.UnsignedByte).Datatype);
                            }
                        }
                        
                        /// <summary>
                        /// <para>
                        /// Occurrence: required
                        /// </para>
                        /// </summary>
                        public byte columnNumber {
                            get {
                                XAttribute x = this.Attribute(XName.Get("columnNumber", ""));
                                return XTypedServices.ParseValue<byte>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.UnsignedByte).Datatype);
                            }
                            set {
                                this.SetAttribute(XName.Get("columnNumber", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.UnsignedByte).Datatype);
                            }
                        }
                        
                        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
                            get {
                                return localElementDictionary;
                            }
                        }
                        
                        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                        XName IXMetaData.SchemaName {
                            get {
                                return XName.Get("call", "http://www.ibm.com/WAFLSchema");
                            }
                        }
                        
                        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                        SchemaOrigin IXMetaData.TypeOrigin {
                            get {
                                return SchemaOrigin.Fragment;
                            }
                        }
                        
                        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                        ILinqToXsdTypeManager IXMetaData.TypeManager {
                            get {
                                return LinqToXsdTypeManager.Instance;
                            }
                        }
                        
                        public override XTypedElement Clone() {
                            return XTypedServices.CloneXTypedElement<callLocalType>(this);
                        }
                        
                        private static void BuildElementDictionary() {
                            localElementDictionary.Add(XName.Get("actual-parameter", "http://www.ibm.com/WAFLSchema"), typeof(actualparameterLocalType));
                        }
                        
                        ContentModelEntity IXMetaData.GetContentModel() {
                            return contentModel;
                        }
                        
                        /// <summary>
                        /// <para>
                        /// Regular expression: (call?, taint?, objectref?)
                        /// </para>
                        /// </summary>
                        public partial class actualparameterLocalType : XTypedElement, IXMetaData {
                            
                            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                            static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();
                            
                            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                            private static ContentModelEntity contentModel;
                            
         public static explicit operator actualparameterLocalType(XElement xe) { return XTypedServices.ToXTypedElement<actualparameterLocalType>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
                            
                            static actualparameterLocalType() {
                                BuildElementDictionary();
                                contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("call", "http://www.ibm.com/WAFLSchema")), new NamedContentModelEntity(XName.Get("taint", "http://www.ibm.com/WAFLSchema")), new NamedContentModelEntity(XName.Get("object-ref", "http://www.ibm.com/WAFLSchema")));
                            }
                            
                            /// <summary>
                            /// <para>
                            /// Regular expression: (call?, taint?, objectref?)
                            /// </para>
                            /// </summary>
                            public actualparameterLocalType() {
                            }
                            
                            /// <summary>
                            /// <para>
                            /// Occurrence: optional
                            /// </para>
                            /// <para>
                            /// Regular expression: (call?, taint?, objectref?)
                            /// </para>
                            /// </summary>
                            public callLocalType call {
                                get {
                                    XElement x = this.GetElement(XName.Get("call", "http://www.ibm.com/WAFLSchema"));
                                    return ((callLocalType)(x));
                                }
                                set {
                                    this.SetElement(XName.Get("call", "http://www.ibm.com/WAFLSchema"), value);
                                }
                            }
                            
                            /// <summary>
                            /// <para>
                            /// Occurrence: optional
                            /// </para>
                            /// <para>
                            /// Regular expression: (call?, taint?, objectref?)
                            /// </para>
                            /// </summary>
                            public taintLocalType taint {
                                get {
                                    XElement x = this.GetElement(XName.Get("taint", "http://www.ibm.com/WAFLSchema"));
                                    return ((taintLocalType)(x));
                                }
                                set {
                                    this.SetElement(XName.Get("taint", "http://www.ibm.com/WAFLSchema"), value);
                                }
                            }
                            
                            /// <summary>
                            /// <para>
                            /// Occurrence: optional
                            /// </para>
                            /// <para>
                            /// Regular expression: (call?, taint?, objectref?)
                            /// </para>
                            /// </summary>
                            public objectrefLocalType objectref {
                                get {
                                    XElement x = this.GetElement(XName.Get("object-ref", "http://www.ibm.com/WAFLSchema"));
                                    return ((objectrefLocalType)(x));
                                }
                                set {
                                    this.SetElement(XName.Get("object-ref", "http://www.ibm.com/WAFLSchema"), value);
                                }
                            }
                            
                            /// <summary>
                            /// <para>
                            /// Occurrence: required
                            /// </para>
                            /// </summary>
                            public byte pos {
                                get {
                                    XAttribute x = this.Attribute(XName.Get("pos", ""));
                                    return XTypedServices.ParseValue<byte>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.UnsignedByte).Datatype);
                                }
                                set {
                                    this.SetAttribute(XName.Get("pos", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.UnsignedByte).Datatype);
                                }
                            }
                            
                            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                            Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
                                get {
                                    return localElementDictionary;
                                }
                            }
                            
                            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                            XName IXMetaData.SchemaName {
                                get {
                                    return XName.Get("actual-parameter", "http://www.ibm.com/WAFLSchema");
                                }
                            }
                            
                            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                            SchemaOrigin IXMetaData.TypeOrigin {
                                get {
                                    return SchemaOrigin.Fragment;
                                }
                            }
                            
                            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                            ILinqToXsdTypeManager IXMetaData.TypeManager {
                                get {
                                    return LinqToXsdTypeManager.Instance;
                                }
                            }
                            
                            public override XTypedElement Clone() {
                                return XTypedServices.CloneXTypedElement<actualparameterLocalType>(this);
                            }
                            
                            private static void BuildElementDictionary() {
                                localElementDictionary.Add(XName.Get("call", "http://www.ibm.com/WAFLSchema"), typeof(callLocalType));
                                localElementDictionary.Add(XName.Get("taint", "http://www.ibm.com/WAFLSchema"), typeof(taintLocalType));
                                localElementDictionary.Add(XName.Get("object-ref", "http://www.ibm.com/WAFLSchema"), typeof(objectrefLocalType));
                            }
                            
                            ContentModelEntity IXMetaData.GetContentModel() {
                                return contentModel;
                            }
                            
                            /// <summary>
                            /// <para>
                            /// Regular expression: (actualparameter)
                            /// </para>
                            /// </summary>
                            public partial class callLocalType : XTypedElement, IXMetaData {
                                
                                [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                                static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();
                                
                                [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                                private static ContentModelEntity contentModel;
                                
         public static explicit operator callLocalType(XElement xe) { return XTypedServices.ToXTypedElement<callLocalType>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
                                
                                static callLocalType() {
                                    BuildElementDictionary();
                                    contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("actual-parameter", "http://www.ibm.com/WAFLSchema")));
                                }
                                
                                /// <summary>
                                /// <para>
                                /// Regular expression: (actualparameter)
                                /// </para>
                                /// </summary>
                                public callLocalType() {
                                }
                                
                                /// <summary>
                                /// <para>
                                /// Occurrence: required
                                /// </para>
                                /// <para>
                                /// Regular expression: (actualparameter)
                                /// </para>
                                /// </summary>
                                public actualparameterLocalType actualparameter {
                                    get {
                                        XElement x = this.GetElement(XName.Get("actual-parameter", "http://www.ibm.com/WAFLSchema"));
                                        return ((actualparameterLocalType)(x));
                                    }
                                    set {
                                        this.SetElement(XName.Get("actual-parameter", "http://www.ibm.com/WAFLSchema"), value);
                                    }
                                }
                                
                                /// <summary>
                                /// <para>
                                /// Occurrence: required
                                /// </para>
                                /// </summary>
                                public string signature {
                                    get {
                                        XAttribute x = this.Attribute(XName.Get("signature", ""));
                                        return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
                                    }
                                    set {
                                        this.SetAttribute(XName.Get("signature", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
                                    }
                                }
                                
                                [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                                Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
                                    get {
                                        return localElementDictionary;
                                    }
                                }
                                
                                [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                                XName IXMetaData.SchemaName {
                                    get {
                                        return XName.Get("call", "http://www.ibm.com/WAFLSchema");
                                    }
                                }
                                
                                [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                                SchemaOrigin IXMetaData.TypeOrigin {
                                    get {
                                        return SchemaOrigin.Fragment;
                                    }
                                }
                                
                                [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                                ILinqToXsdTypeManager IXMetaData.TypeManager {
                                    get {
                                        return LinqToXsdTypeManager.Instance;
                                    }
                                }
                                
                                public override XTypedElement Clone() {
                                    return XTypedServices.CloneXTypedElement<callLocalType>(this);
                                }
                                
                                private static void BuildElementDictionary() {
                                    localElementDictionary.Add(XName.Get("actual-parameter", "http://www.ibm.com/WAFLSchema"), typeof(actualparameterLocalType));
                                }
                                
                                ContentModelEntity IXMetaData.GetContentModel() {
                                    return contentModel;
                                }
                                
                                /// <summary>
                                /// <para>
                                /// Regular expression: (taint?, call?)
                                /// </para>
                                /// </summary>
                                public partial class actualparameterLocalType : XTypedElement, IXMetaData {
                                    
                                    [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                                    static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();
                                    
                                    [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                                    private static ContentModelEntity contentModel;
                                    
         public static explicit operator actualparameterLocalType(XElement xe) { return XTypedServices.ToXTypedElement<actualparameterLocalType>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
                                    
                                    static actualparameterLocalType() {
                                        BuildElementDictionary();
                                        contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("taint", "http://www.ibm.com/WAFLSchema")), new NamedContentModelEntity(XName.Get("call", "http://www.ibm.com/WAFLSchema")));
                                    }
                                    
                                    /// <summary>
                                    /// <para>
                                    /// Regular expression: (taint?, call?)
                                    /// </para>
                                    /// </summary>
                                    public actualparameterLocalType() {
                                    }
                                    
                                    /// <summary>
                                    /// <para>
                                    /// Occurrence: optional
                                    /// </para>
                                    /// <para>
                                    /// Regular expression: (taint?, call?)
                                    /// </para>
                                    /// </summary>
                                    public taintLocalType taint {
                                        get {
                                            XElement x = this.GetElement(XName.Get("taint", "http://www.ibm.com/WAFLSchema"));
                                            return ((taintLocalType)(x));
                                        }
                                        set {
                                            this.SetElement(XName.Get("taint", "http://www.ibm.com/WAFLSchema"), value);
                                        }
                                    }
                                    
                                    /// <summary>
                                    /// <para>
                                    /// Occurrence: optional
                                    /// </para>
                                    /// <para>
                                    /// Regular expression: (taint?, call?)
                                    /// </para>
                                    /// </summary>
                                    public callLocalType call {
                                        get {
                                            XElement x = this.GetElement(XName.Get("call", "http://www.ibm.com/WAFLSchema"));
                                            return ((callLocalType)(x));
                                        }
                                        set {
                                            this.SetElement(XName.Get("call", "http://www.ibm.com/WAFLSchema"), value);
                                        }
                                    }
                                    
                                    /// <summary>
                                    /// <para>
                                    /// Occurrence: required
                                    /// </para>
                                    /// </summary>
                                    public byte pos {
                                        get {
                                            XAttribute x = this.Attribute(XName.Get("pos", ""));
                                            return XTypedServices.ParseValue<byte>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.UnsignedByte).Datatype);
                                        }
                                        set {
                                            this.SetAttribute(XName.Get("pos", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.UnsignedByte).Datatype);
                                        }
                                    }
                                    
                                    [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                                    Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
                                        get {
                                            return localElementDictionary;
                                        }
                                    }
                                    
                                    [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                                    XName IXMetaData.SchemaName {
                                        get {
                                            return XName.Get("actual-parameter", "http://www.ibm.com/WAFLSchema");
                                        }
                                    }
                                    
                                    [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                                    SchemaOrigin IXMetaData.TypeOrigin {
                                        get {
                                            return SchemaOrigin.Fragment;
                                        }
                                    }
                                    
                                    [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                                    ILinqToXsdTypeManager IXMetaData.TypeManager {
                                        get {
                                            return LinqToXsdTypeManager.Instance;
                                        }
                                    }
                                    
                                    public override XTypedElement Clone() {
                                        return XTypedServices.CloneXTypedElement<actualparameterLocalType>(this);
                                    }
                                    
                                    private static void BuildElementDictionary() {
                                        localElementDictionary.Add(XName.Get("taint", "http://www.ibm.com/WAFLSchema"), typeof(taintLocalType));
                                        localElementDictionary.Add(XName.Get("call", "http://www.ibm.com/WAFLSchema"), typeof(callLocalType));
                                    }
                                    
                                    ContentModelEntity IXMetaData.GetContentModel() {
                                        return contentModel;
                                    }
                                    
                                    public partial class taintLocalType : XTypedElement, IXMetaData {
                                        
         public static explicit operator taintLocalType(XElement xe) { return XTypedServices.ToXTypedElement<taintLocalType>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
                                        
                                        public taintLocalType() {
                                        }
                                        
                                        /// <summary>
                                        /// <para>
                                        /// Occurrence: required
                                        /// </para>
                                        /// </summary>
                                        public string type {
                                            get {
                                                XAttribute x = this.Attribute(XName.Get("type", ""));
                                                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
                                            }
                                            set {
                                                this.SetAttribute(XName.Get("type", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
                                            }
                                        }
                                        
                                        /// <summary>
                                        /// <para>
                                        /// Occurrence: required
                                        /// </para>
                                        /// </summary>
                                        public string name {
                                            get {
                                                XAttribute x = this.Attribute(XName.Get("name", ""));
                                                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
                                            }
                                            set {
                                                this.SetAttribute(XName.Get("name", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
                                            }
                                        }
                                        
                                        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                                        XName IXMetaData.SchemaName {
                                            get {
                                                return XName.Get("taint", "http://www.ibm.com/WAFLSchema");
                                            }
                                        }
                                        
                                        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                                        SchemaOrigin IXMetaData.TypeOrigin {
                                            get {
                                                return SchemaOrigin.Fragment;
                                            }
                                        }
                                        
                                        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                                        ILinqToXsdTypeManager IXMetaData.TypeManager {
                                            get {
                                                return LinqToXsdTypeManager.Instance;
                                            }
                                        }
                                        
                                        public override XTypedElement Clone() {
                                            return XTypedServices.CloneXTypedElement<taintLocalType>(this);
                                        }
                                        
                                        ContentModelEntity IXMetaData.GetContentModel() {
                                            return ContentModelEntity.Default;
                                        }
                                    }
                                    
                                    /// <summary>
                                    /// <para>
                                    /// Regular expression: (actualparameter)
                                    /// </para>
                                    /// </summary>
                                    public partial class callLocalType : XTypedElement, IXMetaData {
                                        
                                        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                                        static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();
                                        
                                        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                                        private static ContentModelEntity contentModel;
                                        
         public static explicit operator callLocalType(XElement xe) { return XTypedServices.ToXTypedElement<callLocalType>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
                                        
                                        static callLocalType() {
                                            BuildElementDictionary();
                                            contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("actual-parameter", "http://www.ibm.com/WAFLSchema")));
                                        }
                                        
                                        /// <summary>
                                        /// <para>
                                        /// Regular expression: (actualparameter)
                                        /// </para>
                                        /// </summary>
                                        public callLocalType() {
                                        }
                                        
                                        /// <summary>
                                        /// <para>
                                        /// Occurrence: required
                                        /// </para>
                                        /// <para>
                                        /// Regular expression: (actualparameter)
                                        /// </para>
                                        /// </summary>
                                        public actualparameterLocalType actualparameter {
                                            get {
                                                XElement x = this.GetElement(XName.Get("actual-parameter", "http://www.ibm.com/WAFLSchema"));
                                                return ((actualparameterLocalType)(x));
                                            }
                                            set {
                                                this.SetElement(XName.Get("actual-parameter", "http://www.ibm.com/WAFLSchema"), value);
                                            }
                                        }
                                        
                                        /// <summary>
                                        /// <para>
                                        /// Occurrence: required
                                        /// </para>
                                        /// </summary>
                                        public string signature {
                                            get {
                                                XAttribute x = this.Attribute(XName.Get("signature", ""));
                                                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
                                            }
                                            set {
                                                this.SetAttribute(XName.Get("signature", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
                                            }
                                        }
                                        
                                        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                                        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
                                            get {
                                                return localElementDictionary;
                                            }
                                        }
                                        
                                        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                                        XName IXMetaData.SchemaName {
                                            get {
                                                return XName.Get("call", "http://www.ibm.com/WAFLSchema");
                                            }
                                        }
                                        
                                        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                                        SchemaOrigin IXMetaData.TypeOrigin {
                                            get {
                                                return SchemaOrigin.Fragment;
                                            }
                                        }
                                        
                                        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                                        ILinqToXsdTypeManager IXMetaData.TypeManager {
                                            get {
                                                return LinqToXsdTypeManager.Instance;
                                            }
                                        }
                                        
                                        public override XTypedElement Clone() {
                                            return XTypedServices.CloneXTypedElement<callLocalType>(this);
                                        }
                                        
                                        private static void BuildElementDictionary() {
                                            localElementDictionary.Add(XName.Get("actual-parameter", "http://www.ibm.com/WAFLSchema"), typeof(actualparameterLocalType));
                                        }
                                        
                                        ContentModelEntity IXMetaData.GetContentModel() {
                                            return contentModel;
                                        }
                                        
                                        /// <summary>
                                        /// <para>
                                        /// Regular expression: (taint)
                                        /// </para>
                                        /// </summary>
                                        public partial class actualparameterLocalType : XTypedElement, IXMetaData {
                                            
                                            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                                            static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();
                                            
                                            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                                            private static ContentModelEntity contentModel;
                                            
         public static explicit operator actualparameterLocalType(XElement xe) { return XTypedServices.ToXTypedElement<actualparameterLocalType>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
                                            
                                            static actualparameterLocalType() {
                                                BuildElementDictionary();
                                                contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("taint", "http://www.ibm.com/WAFLSchema")));
                                            }
                                            
                                            /// <summary>
                                            /// <para>
                                            /// Regular expression: (taint)
                                            /// </para>
                                            /// </summary>
                                            public actualparameterLocalType() {
                                            }
                                            
                                            /// <summary>
                                            /// <para>
                                            /// Occurrence: required
                                            /// </para>
                                            /// <para>
                                            /// Regular expression: (taint)
                                            /// </para>
                                            /// </summary>
                                            public taintLocalType taint {
                                                get {
                                                    XElement x = this.GetElement(XName.Get("taint", "http://www.ibm.com/WAFLSchema"));
                                                    return ((taintLocalType)(x));
                                                }
                                                set {
                                                    this.SetElement(XName.Get("taint", "http://www.ibm.com/WAFLSchema"), value);
                                                }
                                            }
                                            
                                            /// <summary>
                                            /// <para>
                                            /// Occurrence: required
                                            /// </para>
                                            /// </summary>
                                            public byte pos {
                                                get {
                                                    XAttribute x = this.Attribute(XName.Get("pos", ""));
                                                    return XTypedServices.ParseValue<byte>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.UnsignedByte).Datatype);
                                                }
                                                set {
                                                    this.SetAttribute(XName.Get("pos", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.UnsignedByte).Datatype);
                                                }
                                            }
                                            
                                            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                                            Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
                                                get {
                                                    return localElementDictionary;
                                                }
                                            }
                                            
                                            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                                            XName IXMetaData.SchemaName {
                                                get {
                                                    return XName.Get("actual-parameter", "http://www.ibm.com/WAFLSchema");
                                                }
                                            }
                                            
                                            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                                            SchemaOrigin IXMetaData.TypeOrigin {
                                                get {
                                                    return SchemaOrigin.Fragment;
                                                }
                                            }
                                            
                                            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                                            ILinqToXsdTypeManager IXMetaData.TypeManager {
                                                get {
                                                    return LinqToXsdTypeManager.Instance;
                                                }
                                            }
                                            
                                            public override XTypedElement Clone() {
                                                return XTypedServices.CloneXTypedElement<actualparameterLocalType>(this);
                                            }
                                            
                                            private static void BuildElementDictionary() {
                                                localElementDictionary.Add(XName.Get("taint", "http://www.ibm.com/WAFLSchema"), typeof(taintLocalType));
                                            }
                                            
                                            ContentModelEntity IXMetaData.GetContentModel() {
                                                return contentModel;
                                            }
                                            
                                            public partial class taintLocalType : XTypedElement, IXMetaData {
                                                
         public static explicit operator taintLocalType(XElement xe) { return XTypedServices.ToXTypedElement<taintLocalType>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
                                                
                                                public taintLocalType() {
                                                }
                                                
                                                /// <summary>
                                                /// <para>
                                                /// Occurrence: required
                                                /// </para>
                                                /// </summary>
                                                public string type {
                                                    get {
                                                        XAttribute x = this.Attribute(XName.Get("type", ""));
                                                        return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
                                                    }
                                                    set {
                                                        this.SetAttribute(XName.Get("type", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
                                                    }
                                                }
                                                
                                                /// <summary>
                                                /// <para>
                                                /// Occurrence: required
                                                /// </para>
                                                /// </summary>
                                                public string name {
                                                    get {
                                                        XAttribute x = this.Attribute(XName.Get("name", ""));
                                                        return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
                                                    }
                                                    set {
                                                        this.SetAttribute(XName.Get("name", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
                                                    }
                                                }
                                                
                                                [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                                                XName IXMetaData.SchemaName {
                                                    get {
                                                        return XName.Get("taint", "http://www.ibm.com/WAFLSchema");
                                                    }
                                                }
                                                
                                                [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                                                SchemaOrigin IXMetaData.TypeOrigin {
                                                    get {
                                                        return SchemaOrigin.Fragment;
                                                    }
                                                }
                                                
                                                [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                                                ILinqToXsdTypeManager IXMetaData.TypeManager {
                                                    get {
                                                        return LinqToXsdTypeManager.Instance;
                                                    }
                                                }
                                                
                                                public override XTypedElement Clone() {
                                                    return XTypedServices.CloneXTypedElement<taintLocalType>(this);
                                                }
                                                
                                                ContentModelEntity IXMetaData.GetContentModel() {
                                                    return ContentModelEntity.Default;
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                            
                            public partial class taintLocalType : XTypedElement, IXMetaData {
                                
         public static explicit operator taintLocalType(XElement xe) { return XTypedServices.ToXTypedElement<taintLocalType>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
                                
                                public taintLocalType() {
                                }
                                
                                /// <summary>
                                /// <para>
                                /// Occurrence: required
                                /// </para>
                                /// </summary>
                                public string type {
                                    get {
                                        XAttribute x = this.Attribute(XName.Get("type", ""));
                                        return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
                                    }
                                    set {
                                        this.SetAttribute(XName.Get("type", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
                                    }
                                }
                                
                                /// <summary>
                                /// <para>
                                /// Occurrence: required
                                /// </para>
                                /// </summary>
                                public string name {
                                    get {
                                        XAttribute x = this.Attribute(XName.Get("name", ""));
                                        return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
                                    }
                                    set {
                                        this.SetAttribute(XName.Get("name", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
                                    }
                                }
                                
                                [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                                XName IXMetaData.SchemaName {
                                    get {
                                        return XName.Get("taint", "http://www.ibm.com/WAFLSchema");
                                    }
                                }
                                
                                [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                                SchemaOrigin IXMetaData.TypeOrigin {
                                    get {
                                        return SchemaOrigin.Fragment;
                                    }
                                }
                                
                                [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                                ILinqToXsdTypeManager IXMetaData.TypeManager {
                                    get {
                                        return LinqToXsdTypeManager.Instance;
                                    }
                                }
                                
                                public override XTypedElement Clone() {
                                    return XTypedServices.CloneXTypedElement<taintLocalType>(this);
                                }
                                
                                ContentModelEntity IXMetaData.GetContentModel() {
                                    return ContentModelEntity.Default;
                                }
                            }
                            
                            /// <summary>
                            /// <para>
                            /// Regular expression: (call?, formal?, local?)
                            /// </para>
                            /// </summary>
                            public partial class objectrefLocalType : XTypedElement, IXMetaData {
                                
                                [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                                static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();
                                
                                [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                                private static ContentModelEntity contentModel;
                                
         public static explicit operator objectrefLocalType(XElement xe) { return XTypedServices.ToXTypedElement<objectrefLocalType>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
                                
                                static objectrefLocalType() {
                                    BuildElementDictionary();
                                    contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("call", "http://www.ibm.com/WAFLSchema")), new NamedContentModelEntity(XName.Get("formal", "http://www.ibm.com/WAFLSchema")), new NamedContentModelEntity(XName.Get("local", "http://www.ibm.com/WAFLSchema")));
                                }
                                
                                /// <summary>
                                /// <para>
                                /// Regular expression: (call?, formal?, local?)
                                /// </para>
                                /// </summary>
                                public objectrefLocalType() {
                                }
                                
                                /// <summary>
                                /// <para>
                                /// Occurrence: optional
                                /// </para>
                                /// <para>
                                /// Regular expression: (call?, formal?, local?)
                                /// </para>
                                /// </summary>
                                public callLocalType call {
                                    get {
                                        XElement x = this.GetElement(XName.Get("call", "http://www.ibm.com/WAFLSchema"));
                                        return ((callLocalType)(x));
                                    }
                                    set {
                                        this.SetElement(XName.Get("call", "http://www.ibm.com/WAFLSchema"), value);
                                    }
                                }
                                
                                /// <summary>
                                /// <para>
                                /// Occurrence: optional
                                /// </para>
                                /// <para>
                                /// Regular expression: (call?, formal?, local?)
                                /// </para>
                                /// </summary>
                                public formalLocalType formal {
                                    get {
                                        XElement x = this.GetElement(XName.Get("formal", "http://www.ibm.com/WAFLSchema"));
                                        return ((formalLocalType)(x));
                                    }
                                    set {
                                        this.SetElement(XName.Get("formal", "http://www.ibm.com/WAFLSchema"), value);
                                    }
                                }
                                
                                /// <summary>
                                /// <para>
                                /// Occurrence: optional
                                /// </para>
                                /// <para>
                                /// Regular expression: (call?, formal?, local?)
                                /// </para>
                                /// </summary>
                                public localLocalType local {
                                    get {
                                        XElement x = this.GetElement(XName.Get("local", "http://www.ibm.com/WAFLSchema"));
                                        return ((localLocalType)(x));
                                    }
                                    set {
                                        this.SetElement(XName.Get("local", "http://www.ibm.com/WAFLSchema"), value);
                                    }
                                }
                                
                                /// <summary>
                                /// <para>
                                /// Occurrence: required
                                /// </para>
                                /// </summary>
                                public string ap {
                                    get {
                                        XAttribute x = this.Attribute(XName.Get("ap", ""));
                                        return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
                                    }
                                    set {
                                        this.SetAttribute(XName.Get("ap", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
                                    }
                                }
                                
                                [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                                Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
                                    get {
                                        return localElementDictionary;
                                    }
                                }
                                
                                [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                                XName IXMetaData.SchemaName {
                                    get {
                                        return XName.Get("object-ref", "http://www.ibm.com/WAFLSchema");
                                    }
                                }
                                
                                [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                                SchemaOrigin IXMetaData.TypeOrigin {
                                    get {
                                        return SchemaOrigin.Fragment;
                                    }
                                }
                                
                                [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                                ILinqToXsdTypeManager IXMetaData.TypeManager {
                                    get {
                                        return LinqToXsdTypeManager.Instance;
                                    }
                                }
                                
                                public override XTypedElement Clone() {
                                    return XTypedServices.CloneXTypedElement<objectrefLocalType>(this);
                                }
                                
                                private static void BuildElementDictionary() {
                                    localElementDictionary.Add(XName.Get("call", "http://www.ibm.com/WAFLSchema"), typeof(callLocalType));
                                    localElementDictionary.Add(XName.Get("formal", "http://www.ibm.com/WAFLSchema"), typeof(formalLocalType));
                                    localElementDictionary.Add(XName.Get("local", "http://www.ibm.com/WAFLSchema"), typeof(localLocalType));
                                }
                                
                                ContentModelEntity IXMetaData.GetContentModel() {
                                    return contentModel;
                                }
                                
                                /// <summary>
                                /// <para>
                                /// Regular expression: (actualparameter)
                                /// </para>
                                /// </summary>
                                public partial class callLocalType : XTypedElement, IXMetaData {
                                    
                                    [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                                    static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();
                                    
                                    [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                                    private static ContentModelEntity contentModel;
                                    
         public static explicit operator callLocalType(XElement xe) { return XTypedServices.ToXTypedElement<callLocalType>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
                                    
                                    static callLocalType() {
                                        BuildElementDictionary();
                                        contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("actual-parameter", "http://www.ibm.com/WAFLSchema")));
                                    }
                                    
                                    /// <summary>
                                    /// <para>
                                    /// Regular expression: (actualparameter)
                                    /// </para>
                                    /// </summary>
                                    public callLocalType() {
                                    }
                                    
                                    /// <summary>
                                    /// <para>
                                    /// Occurrence: required
                                    /// </para>
                                    /// <para>
                                    /// Regular expression: (actualparameter)
                                    /// </para>
                                    /// </summary>
                                    public actualparameterLocalType actualparameter {
                                        get {
                                            XElement x = this.GetElement(XName.Get("actual-parameter", "http://www.ibm.com/WAFLSchema"));
                                            return ((actualparameterLocalType)(x));
                                        }
                                        set {
                                            this.SetElement(XName.Get("actual-parameter", "http://www.ibm.com/WAFLSchema"), value);
                                        }
                                    }
                                    
                                    /// <summary>
                                    /// <para>
                                    /// Occurrence: required
                                    /// </para>
                                    /// </summary>
                                    public string signature {
                                        get {
                                            XAttribute x = this.Attribute(XName.Get("signature", ""));
                                            return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
                                        }
                                        set {
                                            this.SetAttribute(XName.Get("signature", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
                                        }
                                    }
                                    
                                    /// <summary>
                                    /// <para>
                                    /// Occurrence: required
                                    /// </para>
                                    /// </summary>
                                    public string filename {
                                        get {
                                            XAttribute x = this.Attribute(XName.Get("filename", ""));
                                            return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
                                        }
                                        set {
                                            this.SetAttribute(XName.Get("filename", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
                                        }
                                    }
                                    
                                    /// <summary>
                                    /// <para>
                                    /// Occurrence: required
                                    /// </para>
                                    /// </summary>
                                    public byte lineNumber {
                                        get {
                                            XAttribute x = this.Attribute(XName.Get("lineNumber", ""));
                                            return XTypedServices.ParseValue<byte>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.UnsignedByte).Datatype);
                                        }
                                        set {
                                            this.SetAttribute(XName.Get("lineNumber", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.UnsignedByte).Datatype);
                                        }
                                    }
                                    
                                    /// <summary>
                                    /// <para>
                                    /// Occurrence: required
                                    /// </para>
                                    /// </summary>
                                    public byte columnNumber {
                                        get {
                                            XAttribute x = this.Attribute(XName.Get("columnNumber", ""));
                                            return XTypedServices.ParseValue<byte>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.UnsignedByte).Datatype);
                                        }
                                        set {
                                            this.SetAttribute(XName.Get("columnNumber", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.UnsignedByte).Datatype);
                                        }
                                    }
                                    
                                    [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                                    Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
                                        get {
                                            return localElementDictionary;
                                        }
                                    }
                                    
                                    [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                                    XName IXMetaData.SchemaName {
                                        get {
                                            return XName.Get("call", "http://www.ibm.com/WAFLSchema");
                                        }
                                    }
                                    
                                    [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                                    SchemaOrigin IXMetaData.TypeOrigin {
                                        get {
                                            return SchemaOrigin.Fragment;
                                        }
                                    }
                                    
                                    [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                                    ILinqToXsdTypeManager IXMetaData.TypeManager {
                                        get {
                                            return LinqToXsdTypeManager.Instance;
                                        }
                                    }
                                    
                                    public override XTypedElement Clone() {
                                        return XTypedServices.CloneXTypedElement<callLocalType>(this);
                                    }
                                    
                                    private static void BuildElementDictionary() {
                                        localElementDictionary.Add(XName.Get("actual-parameter", "http://www.ibm.com/WAFLSchema"), typeof(actualparameterLocalType));
                                    }
                                    
                                    ContentModelEntity IXMetaData.GetContentModel() {
                                        return contentModel;
                                    }
                                    
                                    /// <summary>
                                    /// <para>
                                    /// Regular expression: (objectref)
                                    /// </para>
                                    /// </summary>
                                    public partial class actualparameterLocalType : XTypedElement, IXMetaData {
                                        
                                        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                                        static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();
                                        
                                        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                                        private static ContentModelEntity contentModel;
                                        
         public static explicit operator actualparameterLocalType(XElement xe) { return XTypedServices.ToXTypedElement<actualparameterLocalType>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
                                        
                                        static actualparameterLocalType() {
                                            BuildElementDictionary();
                                            contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("object-ref", "http://www.ibm.com/WAFLSchema")));
                                        }
                                        
                                        /// <summary>
                                        /// <para>
                                        /// Regular expression: (objectref)
                                        /// </para>
                                        /// </summary>
                                        public actualparameterLocalType() {
                                        }
                                        
                                        /// <summary>
                                        /// <para>
                                        /// Occurrence: required
                                        /// </para>
                                        /// <para>
                                        /// Regular expression: (objectref)
                                        /// </para>
                                        /// </summary>
                                        public objectrefLocalType objectref {
                                            get {
                                                XElement x = this.GetElement(XName.Get("object-ref", "http://www.ibm.com/WAFLSchema"));
                                                return ((objectrefLocalType)(x));
                                            }
                                            set {
                                                this.SetElement(XName.Get("object-ref", "http://www.ibm.com/WAFLSchema"), value);
                                            }
                                        }
                                        
                                        /// <summary>
                                        /// <para>
                                        /// Occurrence: required
                                        /// </para>
                                        /// </summary>
                                        public byte pos {
                                            get {
                                                XAttribute x = this.Attribute(XName.Get("pos", ""));
                                                return XTypedServices.ParseValue<byte>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.UnsignedByte).Datatype);
                                            }
                                            set {
                                                this.SetAttribute(XName.Get("pos", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.UnsignedByte).Datatype);
                                            }
                                        }
                                        
                                        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                                        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
                                            get {
                                                return localElementDictionary;
                                            }
                                        }
                                        
                                        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                                        XName IXMetaData.SchemaName {
                                            get {
                                                return XName.Get("actual-parameter", "http://www.ibm.com/WAFLSchema");
                                            }
                                        }
                                        
                                        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                                        SchemaOrigin IXMetaData.TypeOrigin {
                                            get {
                                                return SchemaOrigin.Fragment;
                                            }
                                        }
                                        
                                        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                                        ILinqToXsdTypeManager IXMetaData.TypeManager {
                                            get {
                                                return LinqToXsdTypeManager.Instance;
                                            }
                                        }
                                        
                                        public override XTypedElement Clone() {
                                            return XTypedServices.CloneXTypedElement<actualparameterLocalType>(this);
                                        }
                                        
                                        private static void BuildElementDictionary() {
                                            localElementDictionary.Add(XName.Get("object-ref", "http://www.ibm.com/WAFLSchema"), typeof(objectrefLocalType));
                                        }
                                        
                                        ContentModelEntity IXMetaData.GetContentModel() {
                                            return contentModel;
                                        }
                                        
                                        /// <summary>
                                        /// <para>
                                        /// Regular expression: (call?, local?)
                                        /// </para>
                                        /// </summary>
                                        public partial class objectrefLocalType : XTypedElement, IXMetaData {
                                            
                                            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                                            static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();
                                            
                                            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                                            private static ContentModelEntity contentModel;
                                            
         public static explicit operator objectrefLocalType(XElement xe) { return XTypedServices.ToXTypedElement<objectrefLocalType>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
                                            
                                            static objectrefLocalType() {
                                                BuildElementDictionary();
                                                contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("call", "http://www.ibm.com/WAFLSchema")), new NamedContentModelEntity(XName.Get("local", "http://www.ibm.com/WAFLSchema")));
                                            }
                                            
                                            /// <summary>
                                            /// <para>
                                            /// Regular expression: (call?, local?)
                                            /// </para>
                                            /// </summary>
                                            public objectrefLocalType() {
                                            }
                                            
                                            /// <summary>
                                            /// <para>
                                            /// Occurrence: optional
                                            /// </para>
                                            /// <para>
                                            /// Regular expression: (call?, local?)
                                            /// </para>
                                            /// </summary>
                                            public callLocalType call {
                                                get {
                                                    XElement x = this.GetElement(XName.Get("call", "http://www.ibm.com/WAFLSchema"));
                                                    return ((callLocalType)(x));
                                                }
                                                set {
                                                    this.SetElement(XName.Get("call", "http://www.ibm.com/WAFLSchema"), value);
                                                }
                                            }
                                            
                                            /// <summary>
                                            /// <para>
                                            /// Occurrence: optional
                                            /// </para>
                                            /// <para>
                                            /// Regular expression: (call?, local?)
                                            /// </para>
                                            /// </summary>
                                            public localLocalType local {
                                                get {
                                                    XElement x = this.GetElement(XName.Get("local", "http://www.ibm.com/WAFLSchema"));
                                                    return ((localLocalType)(x));
                                                }
                                                set {
                                                    this.SetElement(XName.Get("local", "http://www.ibm.com/WAFLSchema"), value);
                                                }
                                            }
                                            
                                            /// <summary>
                                            /// <para>
                                            /// Occurrence: required
                                            /// </para>
                                            /// </summary>
                                            public string ap {
                                                get {
                                                    XAttribute x = this.Attribute(XName.Get("ap", ""));
                                                    return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
                                                }
                                                set {
                                                    this.SetAttribute(XName.Get("ap", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
                                                }
                                            }
                                            
                                            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                                            Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
                                                get {
                                                    return localElementDictionary;
                                                }
                                            }
                                            
                                            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                                            XName IXMetaData.SchemaName {
                                                get {
                                                    return XName.Get("object-ref", "http://www.ibm.com/WAFLSchema");
                                                }
                                            }
                                            
                                            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                                            SchemaOrigin IXMetaData.TypeOrigin {
                                                get {
                                                    return SchemaOrigin.Fragment;
                                                }
                                            }
                                            
                                            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                                            ILinqToXsdTypeManager IXMetaData.TypeManager {
                                                get {
                                                    return LinqToXsdTypeManager.Instance;
                                                }
                                            }
                                            
                                            public override XTypedElement Clone() {
                                                return XTypedServices.CloneXTypedElement<objectrefLocalType>(this);
                                            }
                                            
                                            private static void BuildElementDictionary() {
                                                localElementDictionary.Add(XName.Get("call", "http://www.ibm.com/WAFLSchema"), typeof(callLocalType));
                                                localElementDictionary.Add(XName.Get("local", "http://www.ibm.com/WAFLSchema"), typeof(localLocalType));
                                            }
                                            
                                            ContentModelEntity IXMetaData.GetContentModel() {
                                                return contentModel;
                                            }
                                            
                                            /// <summary>
                                            /// <para>
                                            /// Regular expression: (actualparameter)
                                            /// </para>
                                            /// </summary>
                                            public partial class callLocalType : XTypedElement, IXMetaData {
                                                
                                                [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                                                static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();
                                                
                                                [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                                                private static ContentModelEntity contentModel;
                                                
         public static explicit operator callLocalType(XElement xe) { return XTypedServices.ToXTypedElement<callLocalType>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
                                                
                                                static callLocalType() {
                                                    BuildElementDictionary();
                                                    contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("actual-parameter", "http://www.ibm.com/WAFLSchema")));
                                                }
                                                
                                                /// <summary>
                                                /// <para>
                                                /// Regular expression: (actualparameter)
                                                /// </para>
                                                /// </summary>
                                                public callLocalType() {
                                                }
                                                
                                                /// <summary>
                                                /// <para>
                                                /// Occurrence: required
                                                /// </para>
                                                /// <para>
                                                /// Regular expression: (actualparameter)
                                                /// </para>
                                                /// </summary>
                                                public actualparameterLocalType actualparameter {
                                                    get {
                                                        XElement x = this.GetElement(XName.Get("actual-parameter", "http://www.ibm.com/WAFLSchema"));
                                                        return ((actualparameterLocalType)(x));
                                                    }
                                                    set {
                                                        this.SetElement(XName.Get("actual-parameter", "http://www.ibm.com/WAFLSchema"), value);
                                                    }
                                                }
                                                
                                                /// <summary>
                                                /// <para>
                                                /// Occurrence: required
                                                /// </para>
                                                /// </summary>
                                                public string signature {
                                                    get {
                                                        XAttribute x = this.Attribute(XName.Get("signature", ""));
                                                        return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
                                                    }
                                                    set {
                                                        this.SetAttribute(XName.Get("signature", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
                                                    }
                                                }
                                                
                                                /// <summary>
                                                /// <para>
                                                /// Occurrence: required
                                                /// </para>
                                                /// </summary>
                                                public string filename {
                                                    get {
                                                        XAttribute x = this.Attribute(XName.Get("filename", ""));
                                                        return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
                                                    }
                                                    set {
                                                        this.SetAttribute(XName.Get("filename", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
                                                    }
                                                }
                                                
                                                /// <summary>
                                                /// <para>
                                                /// Occurrence: required
                                                /// </para>
                                                /// </summary>
                                                public byte lineNumber {
                                                    get {
                                                        XAttribute x = this.Attribute(XName.Get("lineNumber", ""));
                                                        return XTypedServices.ParseValue<byte>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.UnsignedByte).Datatype);
                                                    }
                                                    set {
                                                        this.SetAttribute(XName.Get("lineNumber", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.UnsignedByte).Datatype);
                                                    }
                                                }
                                                
                                                /// <summary>
                                                /// <para>
                                                /// Occurrence: required
                                                /// </para>
                                                /// </summary>
                                                public byte columnNumber {
                                                    get {
                                                        XAttribute x = this.Attribute(XName.Get("columnNumber", ""));
                                                        return XTypedServices.ParseValue<byte>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.UnsignedByte).Datatype);
                                                    }
                                                    set {
                                                        this.SetAttribute(XName.Get("columnNumber", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.UnsignedByte).Datatype);
                                                    }
                                                }
                                                
                                                [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                                                Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
                                                    get {
                                                        return localElementDictionary;
                                                    }
                                                }
                                                
                                                [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                                                XName IXMetaData.SchemaName {
                                                    get {
                                                        return XName.Get("call", "http://www.ibm.com/WAFLSchema");
                                                    }
                                                }
                                                
                                                [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                                                SchemaOrigin IXMetaData.TypeOrigin {
                                                    get {
                                                        return SchemaOrigin.Fragment;
                                                    }
                                                }
                                                
                                                [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                                                ILinqToXsdTypeManager IXMetaData.TypeManager {
                                                    get {
                                                        return LinqToXsdTypeManager.Instance;
                                                    }
                                                }
                                                
                                                public override XTypedElement Clone() {
                                                    return XTypedServices.CloneXTypedElement<callLocalType>(this);
                                                }
                                                
                                                private static void BuildElementDictionary() {
                                                    localElementDictionary.Add(XName.Get("actual-parameter", "http://www.ibm.com/WAFLSchema"), typeof(actualparameterLocalType));
                                                }
                                                
                                                ContentModelEntity IXMetaData.GetContentModel() {
                                                    return contentModel;
                                                }
                                                
                                                /// <summary>
                                                /// <para>
                                                /// Regular expression: (objectref)
                                                /// </para>
                                                /// </summary>
                                                public partial class actualparameterLocalType : XTypedElement, IXMetaData {
                                                    
                                                    [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                                                    static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();
                                                    
                                                    [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                                                    private static ContentModelEntity contentModel;
                                                    
         public static explicit operator actualparameterLocalType(XElement xe) { return XTypedServices.ToXTypedElement<actualparameterLocalType>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
                                                    
                                                    static actualparameterLocalType() {
                                                        BuildElementDictionary();
                                                        contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("object-ref", "http://www.ibm.com/WAFLSchema")));
                                                    }
                                                    
                                                    /// <summary>
                                                    /// <para>
                                                    /// Regular expression: (objectref)
                                                    /// </para>
                                                    /// </summary>
                                                    public actualparameterLocalType() {
                                                    }
                                                    
                                                    /// <summary>
                                                    /// <para>
                                                    /// Occurrence: required
                                                    /// </para>
                                                    /// <para>
                                                    /// Regular expression: (objectref)
                                                    /// </para>
                                                    /// </summary>
                                                    public objectrefLocalType objectref {
                                                        get {
                                                            XElement x = this.GetElement(XName.Get("object-ref", "http://www.ibm.com/WAFLSchema"));
                                                            return ((objectrefLocalType)(x));
                                                        }
                                                        set {
                                                            this.SetElement(XName.Get("object-ref", "http://www.ibm.com/WAFLSchema"), value);
                                                        }
                                                    }
                                                    
                                                    /// <summary>
                                                    /// <para>
                                                    /// Occurrence: required
                                                    /// </para>
                                                    /// </summary>
                                                    public byte pos {
                                                        get {
                                                            XAttribute x = this.Attribute(XName.Get("pos", ""));
                                                            return XTypedServices.ParseValue<byte>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.UnsignedByte).Datatype);
                                                        }
                                                        set {
                                                            this.SetAttribute(XName.Get("pos", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.UnsignedByte).Datatype);
                                                        }
                                                    }
                                                    
                                                    [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                                                    Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
                                                        get {
                                                            return localElementDictionary;
                                                        }
                                                    }
                                                    
                                                    [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                                                    XName IXMetaData.SchemaName {
                                                        get {
                                                            return XName.Get("actual-parameter", "http://www.ibm.com/WAFLSchema");
                                                        }
                                                    }
                                                    
                                                    [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                                                    SchemaOrigin IXMetaData.TypeOrigin {
                                                        get {
                                                            return SchemaOrigin.Fragment;
                                                        }
                                                    }
                                                    
                                                    [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                                                    ILinqToXsdTypeManager IXMetaData.TypeManager {
                                                        get {
                                                            return LinqToXsdTypeManager.Instance;
                                                        }
                                                    }
                                                    
                                                    public override XTypedElement Clone() {
                                                        return XTypedServices.CloneXTypedElement<actualparameterLocalType>(this);
                                                    }
                                                    
                                                    private static void BuildElementDictionary() {
                                                        localElementDictionary.Add(XName.Get("object-ref", "http://www.ibm.com/WAFLSchema"), typeof(objectrefLocalType));
                                                    }
                                                    
                                                    ContentModelEntity IXMetaData.GetContentModel() {
                                                        return contentModel;
                                                    }
                                                    
                                                    /// <summary>
                                                    /// <para>
                                                    /// Regular expression: (local)
                                                    /// </para>
                                                    /// </summary>
                                                    public partial class objectrefLocalType : XTypedElement, IXMetaData {
                                                        
                                                        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                                                        static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();
                                                        
                                                        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                                                        private static ContentModelEntity contentModel;
                                                        
         public static explicit operator objectrefLocalType(XElement xe) { return XTypedServices.ToXTypedElement<objectrefLocalType>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
                                                        
                                                        static objectrefLocalType() {
                                                            BuildElementDictionary();
                                                            contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("local", "http://www.ibm.com/WAFLSchema")));
                                                        }
                                                        
                                                        /// <summary>
                                                        /// <para>
                                                        /// Regular expression: (local)
                                                        /// </para>
                                                        /// </summary>
                                                        public objectrefLocalType() {
                                                        }
                                                        
                                                        /// <summary>
                                                        /// <para>
                                                        /// Occurrence: required
                                                        /// </para>
                                                        /// <para>
                                                        /// Regular expression: (local)
                                                        /// </para>
                                                        /// </summary>
                                                        public localLocalType local {
                                                            get {
                                                                XElement x = this.GetElement(XName.Get("local", "http://www.ibm.com/WAFLSchema"));
                                                                return ((localLocalType)(x));
                                                            }
                                                            set {
                                                                this.SetElement(XName.Get("local", "http://www.ibm.com/WAFLSchema"), value);
                                                            }
                                                        }
                                                        
                                                        /// <summary>
                                                        /// <para>
                                                        /// Occurrence: required
                                                        /// </para>
                                                        /// </summary>
                                                        public string ap {
                                                            get {
                                                                XAttribute x = this.Attribute(XName.Get("ap", ""));
                                                                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
                                                            }
                                                            set {
                                                                this.SetAttribute(XName.Get("ap", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
                                                            }
                                                        }
                                                        
                                                        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                                                        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
                                                            get {
                                                                return localElementDictionary;
                                                            }
                                                        }
                                                        
                                                        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                                                        XName IXMetaData.SchemaName {
                                                            get {
                                                                return XName.Get("object-ref", "http://www.ibm.com/WAFLSchema");
                                                            }
                                                        }
                                                        
                                                        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                                                        SchemaOrigin IXMetaData.TypeOrigin {
                                                            get {
                                                                return SchemaOrigin.Fragment;
                                                            }
                                                        }
                                                        
                                                        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                                                        ILinqToXsdTypeManager IXMetaData.TypeManager {
                                                            get {
                                                                return LinqToXsdTypeManager.Instance;
                                                            }
                                                        }
                                                        
                                                        public override XTypedElement Clone() {
                                                            return XTypedServices.CloneXTypedElement<objectrefLocalType>(this);
                                                        }
                                                        
                                                        private static void BuildElementDictionary() {
                                                            localElementDictionary.Add(XName.Get("local", "http://www.ibm.com/WAFLSchema"), typeof(localLocalType));
                                                        }
                                                        
                                                        ContentModelEntity IXMetaData.GetContentModel() {
                                                            return contentModel;
                                                        }
                                                        
                                                        public partial class localLocalType : XTypedElement, IXMetaData {
                                                            
         public static explicit operator localLocalType(XElement xe) { return XTypedServices.ToXTypedElement<localLocalType>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
                                                            
                                                            public localLocalType() {
                                                            }
                                                            
                                                            /// <summary>
                                                            /// <para>
                                                            /// Occurrence: required
                                                            /// </para>
                                                            /// </summary>
                                                            public string id {
                                                                get {
                                                                    XAttribute x = this.Attribute(XName.Get("id", ""));
                                                                    return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
                                                                }
                                                                set {
                                                                    this.SetAttribute(XName.Get("id", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
                                                                }
                                                            }
                                                            
                                                            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                                                            XName IXMetaData.SchemaName {
                                                                get {
                                                                    return XName.Get("local", "http://www.ibm.com/WAFLSchema");
                                                                }
                                                            }
                                                            
                                                            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                                                            SchemaOrigin IXMetaData.TypeOrigin {
                                                                get {
                                                                    return SchemaOrigin.Fragment;
                                                                }
                                                            }
                                                            
                                                            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                                                            ILinqToXsdTypeManager IXMetaData.TypeManager {
                                                                get {
                                                                    return LinqToXsdTypeManager.Instance;
                                                                }
                                                            }
                                                            
                                                            public override XTypedElement Clone() {
                                                                return XTypedServices.CloneXTypedElement<localLocalType>(this);
                                                            }
                                                            
                                                            ContentModelEntity IXMetaData.GetContentModel() {
                                                                return ContentModelEntity.Default;
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                            
                                            public partial class localLocalType : XTypedElement, IXMetaData {
                                                
         public static explicit operator localLocalType(XElement xe) { return XTypedServices.ToXTypedElement<localLocalType>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
                                                
                                                public localLocalType() {
                                                }
                                                
                                                /// <summary>
                                                /// <para>
                                                /// Occurrence: required
                                                /// </para>
                                                /// </summary>
                                                public string id {
                                                    get {
                                                        XAttribute x = this.Attribute(XName.Get("id", ""));
                                                        return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
                                                    }
                                                    set {
                                                        this.SetAttribute(XName.Get("id", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
                                                    }
                                                }
                                                
                                                [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                                                XName IXMetaData.SchemaName {
                                                    get {
                                                        return XName.Get("local", "http://www.ibm.com/WAFLSchema");
                                                    }
                                                }
                                                
                                                [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                                                SchemaOrigin IXMetaData.TypeOrigin {
                                                    get {
                                                        return SchemaOrigin.Fragment;
                                                    }
                                                }
                                                
                                                [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                                                ILinqToXsdTypeManager IXMetaData.TypeManager {
                                                    get {
                                                        return LinqToXsdTypeManager.Instance;
                                                    }
                                                }
                                                
                                                public override XTypedElement Clone() {
                                                    return XTypedServices.CloneXTypedElement<localLocalType>(this);
                                                }
                                                
                                                ContentModelEntity IXMetaData.GetContentModel() {
                                                    return ContentModelEntity.Default;
                                                }
                                            }
                                        }
                                    }
                                }
                                
                                public partial class formalLocalType : XTypedElement, IXMetaData {
                                    
         public static explicit operator formalLocalType(XElement xe) { return XTypedServices.ToXTypedElement<formalLocalType>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
                                    
                                    public formalLocalType() {
                                    }
                                    
                                    /// <summary>
                                    /// <para>
                                    /// Occurrence: required
                                    /// </para>
                                    /// </summary>
                                    public byte pos {
                                        get {
                                            XAttribute x = this.Attribute(XName.Get("pos", ""));
                                            return XTypedServices.ParseValue<byte>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.UnsignedByte).Datatype);
                                        }
                                        set {
                                            this.SetAttribute(XName.Get("pos", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.UnsignedByte).Datatype);
                                        }
                                    }
                                    
                                    [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                                    XName IXMetaData.SchemaName {
                                        get {
                                            return XName.Get("formal", "http://www.ibm.com/WAFLSchema");
                                        }
                                    }
                                    
                                    [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                                    SchemaOrigin IXMetaData.TypeOrigin {
                                        get {
                                            return SchemaOrigin.Fragment;
                                        }
                                    }
                                    
                                    [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                                    ILinqToXsdTypeManager IXMetaData.TypeManager {
                                        get {
                                            return LinqToXsdTypeManager.Instance;
                                        }
                                    }
                                    
                                    public override XTypedElement Clone() {
                                        return XTypedServices.CloneXTypedElement<formalLocalType>(this);
                                    }
                                    
                                    ContentModelEntity IXMetaData.GetContentModel() {
                                        return ContentModelEntity.Default;
                                    }
                                }
                                
                                public partial class localLocalType : XTypedElement, IXMetaData {
                                    
         public static explicit operator localLocalType(XElement xe) { return XTypedServices.ToXTypedElement<localLocalType>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
                                    
                                    public localLocalType() {
                                    }
                                    
                                    /// <summary>
                                    /// <para>
                                    /// Occurrence: required
                                    /// </para>
                                    /// </summary>
                                    public string id {
                                        get {
                                            XAttribute x = this.Attribute(XName.Get("id", ""));
                                            return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
                                        }
                                        set {
                                            this.SetAttribute(XName.Get("id", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
                                        }
                                    }
                                    
                                    [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                                    XName IXMetaData.SchemaName {
                                        get {
                                            return XName.Get("local", "http://www.ibm.com/WAFLSchema");
                                        }
                                    }
                                    
                                    [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                                    SchemaOrigin IXMetaData.TypeOrigin {
                                        get {
                                            return SchemaOrigin.Fragment;
                                        }
                                    }
                                    
                                    [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                                    ILinqToXsdTypeManager IXMetaData.TypeManager {
                                        get {
                                            return LinqToXsdTypeManager.Instance;
                                        }
                                    }
                                    
                                    public override XTypedElement Clone() {
                                        return XTypedServices.CloneXTypedElement<localLocalType>(this);
                                    }
                                    
                                    ContentModelEntity IXMetaData.GetContentModel() {
                                        return ContentModelEntity.Default;
                                    }
                                }
                            }
                        }
                    }
                    
                    /// <summary>
                    /// <para>
                    /// Regular expression: (lvalue, rvalue)
                    /// </para>
                    /// </summary>
                    public partial class assignmentLocalType : XTypedElement, IXMetaData {
                        
                        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                        static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();
                        
                        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                        private static ContentModelEntity contentModel;
                        
         public static explicit operator assignmentLocalType(XElement xe) { return XTypedServices.ToXTypedElement<assignmentLocalType>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
                        
                        static assignmentLocalType() {
                            BuildElementDictionary();
                            contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("l-value", "http://www.ibm.com/WAFLSchema")), new NamedContentModelEntity(XName.Get("r-value", "http://www.ibm.com/WAFLSchema")));
                        }
                        
                        /// <summary>
                        /// <para>
                        /// Regular expression: (lvalue, rvalue)
                        /// </para>
                        /// </summary>
                        public assignmentLocalType() {
                        }
                        
                        /// <summary>
                        /// <para>
                        /// Occurrence: required
                        /// </para>
                        /// <para>
                        /// Regular expression: (lvalue, rvalue)
                        /// </para>
                        /// </summary>
                        public lvalueLocalType lvalue {
                            get {
                                XElement x = this.GetElement(XName.Get("l-value", "http://www.ibm.com/WAFLSchema"));
                                return ((lvalueLocalType)(x));
                            }
                            set {
                                this.SetElement(XName.Get("l-value", "http://www.ibm.com/WAFLSchema"), value);
                            }
                        }
                        
                        /// <summary>
                        /// <para>
                        /// Occurrence: required
                        /// </para>
                        /// <para>
                        /// Regular expression: (lvalue, rvalue)
                        /// </para>
                        /// </summary>
                        public rvalueLocalType rvalue {
                            get {
                                XElement x = this.GetElement(XName.Get("r-value", "http://www.ibm.com/WAFLSchema"));
                                return ((rvalueLocalType)(x));
                            }
                            set {
                                this.SetElement(XName.Get("r-value", "http://www.ibm.com/WAFLSchema"), value);
                            }
                        }
                        
                        /// <summary>
                        /// <para>
                        /// Occurrence: required
                        /// </para>
                        /// </summary>
                        public string filename {
                            get {
                                XAttribute x = this.Attribute(XName.Get("filename", ""));
                                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
                            }
                            set {
                                this.SetAttribute(XName.Get("filename", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
                            }
                        }
                        
                        /// <summary>
                        /// <para>
                        /// Occurrence: required
                        /// </para>
                        /// </summary>
                        public byte lineNumber {
                            get {
                                XAttribute x = this.Attribute(XName.Get("lineNumber", ""));
                                return XTypedServices.ParseValue<byte>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.UnsignedByte).Datatype);
                            }
                            set {
                                this.SetAttribute(XName.Get("lineNumber", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.UnsignedByte).Datatype);
                            }
                        }
                        
                        /// <summary>
                        /// <para>
                        /// Occurrence: required
                        /// </para>
                        /// </summary>
                        public byte columnNumber {
                            get {
                                XAttribute x = this.Attribute(XName.Get("columnNumber", ""));
                                return XTypedServices.ParseValue<byte>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.UnsignedByte).Datatype);
                            }
                            set {
                                this.SetAttribute(XName.Get("columnNumber", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.UnsignedByte).Datatype);
                            }
                        }
                        
                        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
                            get {
                                return localElementDictionary;
                            }
                        }
                        
                        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                        XName IXMetaData.SchemaName {
                            get {
                                return XName.Get("assignment", "http://www.ibm.com/WAFLSchema");
                            }
                        }
                        
                        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                        SchemaOrigin IXMetaData.TypeOrigin {
                            get {
                                return SchemaOrigin.Fragment;
                            }
                        }
                        
                        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                        ILinqToXsdTypeManager IXMetaData.TypeManager {
                            get {
                                return LinqToXsdTypeManager.Instance;
                            }
                        }
                        
                        public override XTypedElement Clone() {
                            return XTypedServices.CloneXTypedElement<assignmentLocalType>(this);
                        }
                        
                        private static void BuildElementDictionary() {
                            localElementDictionary.Add(XName.Get("l-value", "http://www.ibm.com/WAFLSchema"), typeof(lvalueLocalType));
                            localElementDictionary.Add(XName.Get("r-value", "http://www.ibm.com/WAFLSchema"), typeof(rvalueLocalType));
                        }
                        
                        ContentModelEntity IXMetaData.GetContentModel() {
                            return contentModel;
                        }
                        
                        /// <summary>
                        /// <para>
                        /// Regular expression: (objectref)
                        /// </para>
                        /// </summary>
                        public partial class lvalueLocalType : XTypedElement, IXMetaData {
                            
                            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                            static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();
                            
                            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                            private static ContentModelEntity contentModel;
                            
         public static explicit operator lvalueLocalType(XElement xe) { return XTypedServices.ToXTypedElement<lvalueLocalType>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
                            
                            static lvalueLocalType() {
                                BuildElementDictionary();
                                contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("object-ref", "http://www.ibm.com/WAFLSchema")));
                            }
                            
                            /// <summary>
                            /// <para>
                            /// Regular expression: (objectref)
                            /// </para>
                            /// </summary>
                            public lvalueLocalType() {
                            }
                            
                            /// <summary>
                            /// <para>
                            /// Occurrence: required
                            /// </para>
                            /// <para>
                            /// Regular expression: (objectref)
                            /// </para>
                            /// </summary>
                            public objectrefLocalType objectref {
                                get {
                                    XElement x = this.GetElement(XName.Get("object-ref", "http://www.ibm.com/WAFLSchema"));
                                    return ((objectrefLocalType)(x));
                                }
                                set {
                                    this.SetElement(XName.Get("object-ref", "http://www.ibm.com/WAFLSchema"), value);
                                }
                            }
                            
                            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                            Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
                                get {
                                    return localElementDictionary;
                                }
                            }
                            
                            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                            XName IXMetaData.SchemaName {
                                get {
                                    return XName.Get("l-value", "http://www.ibm.com/WAFLSchema");
                                }
                            }
                            
                            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                            SchemaOrigin IXMetaData.TypeOrigin {
                                get {
                                    return SchemaOrigin.Fragment;
                                }
                            }
                            
                            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                            ILinqToXsdTypeManager IXMetaData.TypeManager {
                                get {
                                    return LinqToXsdTypeManager.Instance;
                                }
                            }
                            
                            public override XTypedElement Clone() {
                                return XTypedServices.CloneXTypedElement<lvalueLocalType>(this);
                            }
                            
                            private static void BuildElementDictionary() {
                                localElementDictionary.Add(XName.Get("object-ref", "http://www.ibm.com/WAFLSchema"), typeof(objectrefLocalType));
                            }
                            
                            ContentModelEntity IXMetaData.GetContentModel() {
                                return contentModel;
                            }
                            
                            /// <summary>
                            /// <para>
                            /// Regular expression: (local?, global?)
                            /// </para>
                            /// </summary>
                            public partial class objectrefLocalType : XTypedElement, IXMetaData {
                                
                                [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                                static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();
                                
                                [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                                private static ContentModelEntity contentModel;
                                
         public static explicit operator objectrefLocalType(XElement xe) { return XTypedServices.ToXTypedElement<objectrefLocalType>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
                                
                                static objectrefLocalType() {
                                    BuildElementDictionary();
                                    contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("local", "http://www.ibm.com/WAFLSchema")), new NamedContentModelEntity(XName.Get("global", "http://www.ibm.com/WAFLSchema")));
                                }
                                
                                /// <summary>
                                /// <para>
                                /// Regular expression: (local?, global?)
                                /// </para>
                                /// </summary>
                                public objectrefLocalType() {
                                }
                                
                                /// <summary>
                                /// <para>
                                /// Occurrence: optional
                                /// </para>
                                /// <para>
                                /// Regular expression: (local?, global?)
                                /// </para>
                                /// </summary>
                                public localLocalType local {
                                    get {
                                        XElement x = this.GetElement(XName.Get("local", "http://www.ibm.com/WAFLSchema"));
                                        return ((localLocalType)(x));
                                    }
                                    set {
                                        this.SetElement(XName.Get("local", "http://www.ibm.com/WAFLSchema"), value);
                                    }
                                }
                                
                                /// <summary>
                                /// <para>
                                /// Occurrence: optional
                                /// </para>
                                /// <para>
                                /// Regular expression: (local?, global?)
                                /// </para>
                                /// </summary>
                                public globalLocalType global {
                                    get {
                                        XElement x = this.GetElement(XName.Get("global", "http://www.ibm.com/WAFLSchema"));
                                        return ((globalLocalType)(x));
                                    }
                                    set {
                                        this.SetElement(XName.Get("global", "http://www.ibm.com/WAFLSchema"), value);
                                    }
                                }
                                
                                /// <summary>
                                /// <para>
                                /// Occurrence: required
                                /// </para>
                                /// </summary>
                                public string ap {
                                    get {
                                        XAttribute x = this.Attribute(XName.Get("ap", ""));
                                        return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
                                    }
                                    set {
                                        this.SetAttribute(XName.Get("ap", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
                                    }
                                }
                                
                                [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                                Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
                                    get {
                                        return localElementDictionary;
                                    }
                                }
                                
                                [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                                XName IXMetaData.SchemaName {
                                    get {
                                        return XName.Get("object-ref", "http://www.ibm.com/WAFLSchema");
                                    }
                                }
                                
                                [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                                SchemaOrigin IXMetaData.TypeOrigin {
                                    get {
                                        return SchemaOrigin.Fragment;
                                    }
                                }
                                
                                [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                                ILinqToXsdTypeManager IXMetaData.TypeManager {
                                    get {
                                        return LinqToXsdTypeManager.Instance;
                                    }
                                }
                                
                                public override XTypedElement Clone() {
                                    return XTypedServices.CloneXTypedElement<objectrefLocalType>(this);
                                }
                                
                                private static void BuildElementDictionary() {
                                    localElementDictionary.Add(XName.Get("local", "http://www.ibm.com/WAFLSchema"), typeof(localLocalType));
                                    localElementDictionary.Add(XName.Get("global", "http://www.ibm.com/WAFLSchema"), typeof(globalLocalType));
                                }
                                
                                ContentModelEntity IXMetaData.GetContentModel() {
                                    return contentModel;
                                }
                                
                                public partial class localLocalType : XTypedElement, IXMetaData {
                                    
         public static explicit operator localLocalType(XElement xe) { return XTypedServices.ToXTypedElement<localLocalType>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
                                    
                                    public localLocalType() {
                                    }
                                    
                                    /// <summary>
                                    /// <para>
                                    /// Occurrence: required
                                    /// </para>
                                    /// </summary>
                                    public string id {
                                        get {
                                            XAttribute x = this.Attribute(XName.Get("id", ""));
                                            return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
                                        }
                                        set {
                                            this.SetAttribute(XName.Get("id", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
                                        }
                                    }
                                    
                                    [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                                    XName IXMetaData.SchemaName {
                                        get {
                                            return XName.Get("local", "http://www.ibm.com/WAFLSchema");
                                        }
                                    }
                                    
                                    [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                                    SchemaOrigin IXMetaData.TypeOrigin {
                                        get {
                                            return SchemaOrigin.Fragment;
                                        }
                                    }
                                    
                                    [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                                    ILinqToXsdTypeManager IXMetaData.TypeManager {
                                        get {
                                            return LinqToXsdTypeManager.Instance;
                                        }
                                    }
                                    
                                    public override XTypedElement Clone() {
                                        return XTypedServices.CloneXTypedElement<localLocalType>(this);
                                    }
                                    
                                    ContentModelEntity IXMetaData.GetContentModel() {
                                        return ContentModelEntity.Default;
                                    }
                                }
                                
                                public partial class globalLocalType : XTypedElement, IXMetaData {
                                    
         public static explicit operator globalLocalType(XElement xe) { return XTypedServices.ToXTypedElement<globalLocalType>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
                                    
                                    public globalLocalType() {
                                    }
                                    
                                    /// <summary>
                                    /// <para>
                                    /// Occurrence: required
                                    /// </para>
                                    /// </summary>
                                    public string id {
                                        get {
                                            XAttribute x = this.Attribute(XName.Get("id", ""));
                                            return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
                                        }
                                        set {
                                            this.SetAttribute(XName.Get("id", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
                                        }
                                    }
                                    
                                    [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                                    XName IXMetaData.SchemaName {
                                        get {
                                            return XName.Get("global", "http://www.ibm.com/WAFLSchema");
                                        }
                                    }
                                    
                                    [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                                    SchemaOrigin IXMetaData.TypeOrigin {
                                        get {
                                            return SchemaOrigin.Fragment;
                                        }
                                    }
                                    
                                    [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                                    ILinqToXsdTypeManager IXMetaData.TypeManager {
                                        get {
                                            return LinqToXsdTypeManager.Instance;
                                        }
                                    }
                                    
                                    public override XTypedElement Clone() {
                                        return XTypedServices.CloneXTypedElement<globalLocalType>(this);
                                    }
                                    
                                    ContentModelEntity IXMetaData.GetContentModel() {
                                        return ContentModelEntity.Default;
                                    }
                                }
                            }
                        }
                        
                        /// <summary>
                        /// <para>
                        /// Regular expression: (call?, objectref?)
                        /// </para>
                        /// </summary>
                        public partial class rvalueLocalType : XTypedElement, IXMetaData {
                            
                            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                            static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();
                            
                            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                            private static ContentModelEntity contentModel;
                            
         public static explicit operator rvalueLocalType(XElement xe) { return XTypedServices.ToXTypedElement<rvalueLocalType>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
                            
                            static rvalueLocalType() {
                                BuildElementDictionary();
                                contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("call", "http://www.ibm.com/WAFLSchema")), new NamedContentModelEntity(XName.Get("object-ref", "http://www.ibm.com/WAFLSchema")));
                            }
                            
                            /// <summary>
                            /// <para>
                            /// Regular expression: (call?, objectref?)
                            /// </para>
                            /// </summary>
                            public rvalueLocalType() {
                            }
                            
                            /// <summary>
                            /// <para>
                            /// Occurrence: optional
                            /// </para>
                            /// <para>
                            /// Regular expression: (call?, objectref?)
                            /// </para>
                            /// </summary>
                            public callLocalType call {
                                get {
                                    XElement x = this.GetElement(XName.Get("call", "http://www.ibm.com/WAFLSchema"));
                                    return ((callLocalType)(x));
                                }
                                set {
                                    this.SetElement(XName.Get("call", "http://www.ibm.com/WAFLSchema"), value);
                                }
                            }
                            
                            /// <summary>
                            /// <para>
                            /// Occurrence: optional
                            /// </para>
                            /// <para>
                            /// Regular expression: (call?, objectref?)
                            /// </para>
                            /// </summary>
                            public objectrefLocalType objectref {
                                get {
                                    XElement x = this.GetElement(XName.Get("object-ref", "http://www.ibm.com/WAFLSchema"));
                                    return ((objectrefLocalType)(x));
                                }
                                set {
                                    this.SetElement(XName.Get("object-ref", "http://www.ibm.com/WAFLSchema"), value);
                                }
                            }
                            
                            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                            Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
                                get {
                                    return localElementDictionary;
                                }
                            }
                            
                            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                            XName IXMetaData.SchemaName {
                                get {
                                    return XName.Get("r-value", "http://www.ibm.com/WAFLSchema");
                                }
                            }
                            
                            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                            SchemaOrigin IXMetaData.TypeOrigin {
                                get {
                                    return SchemaOrigin.Fragment;
                                }
                            }
                            
                            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                            ILinqToXsdTypeManager IXMetaData.TypeManager {
                                get {
                                    return LinqToXsdTypeManager.Instance;
                                }
                            }
                            
                            public override XTypedElement Clone() {
                                return XTypedServices.CloneXTypedElement<rvalueLocalType>(this);
                            }
                            
                            private static void BuildElementDictionary() {
                                localElementDictionary.Add(XName.Get("call", "http://www.ibm.com/WAFLSchema"), typeof(callLocalType));
                                localElementDictionary.Add(XName.Get("object-ref", "http://www.ibm.com/WAFLSchema"), typeof(objectrefLocalType));
                            }
                            
                            ContentModelEntity IXMetaData.GetContentModel() {
                                return contentModel;
                            }
                            
                            /// <summary>
                            /// <para>
                            /// Regular expression: (actualparameter)
                            /// </para>
                            /// </summary>
                            public partial class callLocalType : XTypedElement, IXMetaData {
                                
                                [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                                static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();
                                
                                [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                                private static ContentModelEntity contentModel;
                                
         public static explicit operator callLocalType(XElement xe) { return XTypedServices.ToXTypedElement<callLocalType>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
                                
                                static callLocalType() {
                                    BuildElementDictionary();
                                    contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("actual-parameter", "http://www.ibm.com/WAFLSchema")));
                                }
                                
                                /// <summary>
                                /// <para>
                                /// Regular expression: (actualparameter)
                                /// </para>
                                /// </summary>
                                public callLocalType() {
                                }
                                
                                /// <summary>
                                /// <para>
                                /// Occurrence: required
                                /// </para>
                                /// <para>
                                /// Regular expression: (actualparameter)
                                /// </para>
                                /// </summary>
                                public actualparameterLocalType actualparameter {
                                    get {
                                        XElement x = this.GetElement(XName.Get("actual-parameter", "http://www.ibm.com/WAFLSchema"));
                                        return ((actualparameterLocalType)(x));
                                    }
                                    set {
                                        this.SetElement(XName.Get("actual-parameter", "http://www.ibm.com/WAFLSchema"), value);
                                    }
                                }
                                
                                /// <summary>
                                /// <para>
                                /// Occurrence: required
                                /// </para>
                                /// </summary>
                                public string signature {
                                    get {
                                        XAttribute x = this.Attribute(XName.Get("signature", ""));
                                        return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
                                    }
                                    set {
                                        this.SetAttribute(XName.Get("signature", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
                                    }
                                }
                                
                                /// <summary>
                                /// <para>
                                /// Occurrence: required
                                /// </para>
                                /// </summary>
                                public string filename {
                                    get {
                                        XAttribute x = this.Attribute(XName.Get("filename", ""));
                                        return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
                                    }
                                    set {
                                        this.SetAttribute(XName.Get("filename", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
                                    }
                                }
                                
                                /// <summary>
                                /// <para>
                                /// Occurrence: required
                                /// </para>
                                /// </summary>
                                public byte lineNumber {
                                    get {
                                        XAttribute x = this.Attribute(XName.Get("lineNumber", ""));
                                        return XTypedServices.ParseValue<byte>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.UnsignedByte).Datatype);
                                    }
                                    set {
                                        this.SetAttribute(XName.Get("lineNumber", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.UnsignedByte).Datatype);
                                    }
                                }
                                
                                /// <summary>
                                /// <para>
                                /// Occurrence: required
                                /// </para>
                                /// </summary>
                                public byte columnNumber {
                                    get {
                                        XAttribute x = this.Attribute(XName.Get("columnNumber", ""));
                                        return XTypedServices.ParseValue<byte>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.UnsignedByte).Datatype);
                                    }
                                    set {
                                        this.SetAttribute(XName.Get("columnNumber", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.UnsignedByte).Datatype);
                                    }
                                }
                                
                                [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                                Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
                                    get {
                                        return localElementDictionary;
                                    }
                                }
                                
                                [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                                XName IXMetaData.SchemaName {
                                    get {
                                        return XName.Get("call", "http://www.ibm.com/WAFLSchema");
                                    }
                                }
                                
                                [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                                SchemaOrigin IXMetaData.TypeOrigin {
                                    get {
                                        return SchemaOrigin.Fragment;
                                    }
                                }
                                
                                [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                                ILinqToXsdTypeManager IXMetaData.TypeManager {
                                    get {
                                        return LinqToXsdTypeManager.Instance;
                                    }
                                }
                                
                                public override XTypedElement Clone() {
                                    return XTypedServices.CloneXTypedElement<callLocalType>(this);
                                }
                                
                                private static void BuildElementDictionary() {
                                    localElementDictionary.Add(XName.Get("actual-parameter", "http://www.ibm.com/WAFLSchema"), typeof(actualparameterLocalType));
                                }
                                
                                ContentModelEntity IXMetaData.GetContentModel() {
                                    return contentModel;
                                }
                                
                                /// <summary>
                                /// <para>
                                /// Regular expression: (formal)
                                /// </para>
                                /// </summary>
                                public partial class actualparameterLocalType : XTypedElement, IXMetaData {
                                    
                                    [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                                    static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();
                                    
                                    [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                                    private static ContentModelEntity contentModel;
                                    
         public static explicit operator actualparameterLocalType(XElement xe) { return XTypedServices.ToXTypedElement<actualparameterLocalType>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
                                    
                                    static actualparameterLocalType() {
                                        BuildElementDictionary();
                                        contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("formal", "http://www.ibm.com/WAFLSchema")));
                                    }
                                    
                                    /// <summary>
                                    /// <para>
                                    /// Regular expression: (formal)
                                    /// </para>
                                    /// </summary>
                                    public actualparameterLocalType() {
                                    }
                                    
                                    /// <summary>
                                    /// <para>
                                    /// Occurrence: required
                                    /// </para>
                                    /// <para>
                                    /// Regular expression: (formal)
                                    /// </para>
                                    /// </summary>
                                    public formalLocalType formal {
                                        get {
                                            XElement x = this.GetElement(XName.Get("formal", "http://www.ibm.com/WAFLSchema"));
                                            return ((formalLocalType)(x));
                                        }
                                        set {
                                            this.SetElement(XName.Get("formal", "http://www.ibm.com/WAFLSchema"), value);
                                        }
                                    }
                                    
                                    /// <summary>
                                    /// <para>
                                    /// Occurrence: required
                                    /// </para>
                                    /// </summary>
                                    public byte pos {
                                        get {
                                            XAttribute x = this.Attribute(XName.Get("pos", ""));
                                            return XTypedServices.ParseValue<byte>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.UnsignedByte).Datatype);
                                        }
                                        set {
                                            this.SetAttribute(XName.Get("pos", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.UnsignedByte).Datatype);
                                        }
                                    }
                                    
                                    [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                                    Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
                                        get {
                                            return localElementDictionary;
                                        }
                                    }
                                    
                                    [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                                    XName IXMetaData.SchemaName {
                                        get {
                                            return XName.Get("actual-parameter", "http://www.ibm.com/WAFLSchema");
                                        }
                                    }
                                    
                                    [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                                    SchemaOrigin IXMetaData.TypeOrigin {
                                        get {
                                            return SchemaOrigin.Fragment;
                                        }
                                    }
                                    
                                    [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                                    ILinqToXsdTypeManager IXMetaData.TypeManager {
                                        get {
                                            return LinqToXsdTypeManager.Instance;
                                        }
                                    }
                                    
                                    public override XTypedElement Clone() {
                                        return XTypedServices.CloneXTypedElement<actualparameterLocalType>(this);
                                    }
                                    
                                    private static void BuildElementDictionary() {
                                        localElementDictionary.Add(XName.Get("formal", "http://www.ibm.com/WAFLSchema"), typeof(formalLocalType));
                                    }
                                    
                                    ContentModelEntity IXMetaData.GetContentModel() {
                                        return contentModel;
                                    }
                                    
                                    public partial class formalLocalType : XTypedElement, IXMetaData {
                                        
         public static explicit operator formalLocalType(XElement xe) { return XTypedServices.ToXTypedElement<formalLocalType>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
                                        
                                        public formalLocalType() {
                                        }
                                        
                                        /// <summary>
                                        /// <para>
                                        /// Occurrence: required
                                        /// </para>
                                        /// </summary>
                                        public byte pos {
                                            get {
                                                XAttribute x = this.Attribute(XName.Get("pos", ""));
                                                return XTypedServices.ParseValue<byte>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.UnsignedByte).Datatype);
                                            }
                                            set {
                                                this.SetAttribute(XName.Get("pos", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.UnsignedByte).Datatype);
                                            }
                                        }
                                        
                                        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                                        XName IXMetaData.SchemaName {
                                            get {
                                                return XName.Get("formal", "http://www.ibm.com/WAFLSchema");
                                            }
                                        }
                                        
                                        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                                        SchemaOrigin IXMetaData.TypeOrigin {
                                            get {
                                                return SchemaOrigin.Fragment;
                                            }
                                        }
                                        
                                        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                                        ILinqToXsdTypeManager IXMetaData.TypeManager {
                                            get {
                                                return LinqToXsdTypeManager.Instance;
                                            }
                                        }
                                        
                                        public override XTypedElement Clone() {
                                            return XTypedServices.CloneXTypedElement<formalLocalType>(this);
                                        }
                                        
                                        ContentModelEntity IXMetaData.GetContentModel() {
                                            return ContentModelEntity.Default;
                                        }
                                    }
                                }
                            }
                            
                            /// <summary>
                            /// <para>
                            /// Regular expression: (local)
                            /// </para>
                            /// </summary>
                            public partial class objectrefLocalType : XTypedElement, IXMetaData {
                                
                                [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                                static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();
                                
                                [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                                private static ContentModelEntity contentModel;
                                
         public static explicit operator objectrefLocalType(XElement xe) { return XTypedServices.ToXTypedElement<objectrefLocalType>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
                                
                                static objectrefLocalType() {
                                    BuildElementDictionary();
                                    contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("local", "http://www.ibm.com/WAFLSchema")));
                                }
                                
                                /// <summary>
                                /// <para>
                                /// Regular expression: (local)
                                /// </para>
                                /// </summary>
                                public objectrefLocalType() {
                                }
                                
                                /// <summary>
                                /// <para>
                                /// Occurrence: required
                                /// </para>
                                /// <para>
                                /// Regular expression: (local)
                                /// </para>
                                /// </summary>
                                public localLocalType local {
                                    get {
                                        XElement x = this.GetElement(XName.Get("local", "http://www.ibm.com/WAFLSchema"));
                                        return ((localLocalType)(x));
                                    }
                                    set {
                                        this.SetElement(XName.Get("local", "http://www.ibm.com/WAFLSchema"), value);
                                    }
                                }
                                
                                /// <summary>
                                /// <para>
                                /// Occurrence: required
                                /// </para>
                                /// </summary>
                                public string ap {
                                    get {
                                        XAttribute x = this.Attribute(XName.Get("ap", ""));
                                        return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
                                    }
                                    set {
                                        this.SetAttribute(XName.Get("ap", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
                                    }
                                }
                                
                                [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                                Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
                                    get {
                                        return localElementDictionary;
                                    }
                                }
                                
                                [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                                XName IXMetaData.SchemaName {
                                    get {
                                        return XName.Get("object-ref", "http://www.ibm.com/WAFLSchema");
                                    }
                                }
                                
                                [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                                SchemaOrigin IXMetaData.TypeOrigin {
                                    get {
                                        return SchemaOrigin.Fragment;
                                    }
                                }
                                
                                [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                                ILinqToXsdTypeManager IXMetaData.TypeManager {
                                    get {
                                        return LinqToXsdTypeManager.Instance;
                                    }
                                }
                                
                                public override XTypedElement Clone() {
                                    return XTypedServices.CloneXTypedElement<objectrefLocalType>(this);
                                }
                                
                                private static void BuildElementDictionary() {
                                    localElementDictionary.Add(XName.Get("local", "http://www.ibm.com/WAFLSchema"), typeof(localLocalType));
                                }
                                
                                ContentModelEntity IXMetaData.GetContentModel() {
                                    return contentModel;
                                }
                                
                                public partial class localLocalType : XTypedElement, IXMetaData {
                                    
         public static explicit operator localLocalType(XElement xe) { return XTypedServices.ToXTypedElement<localLocalType>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
                                    
                                    public localLocalType() {
                                    }
                                    
                                    /// <summary>
                                    /// <para>
                                    /// Occurrence: required
                                    /// </para>
                                    /// </summary>
                                    public string id {
                                        get {
                                            XAttribute x = this.Attribute(XName.Get("id", ""));
                                            return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
                                        }
                                        set {
                                            this.SetAttribute(XName.Get("id", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
                                        }
                                    }
                                    
                                    [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                                    XName IXMetaData.SchemaName {
                                        get {
                                            return XName.Get("local", "http://www.ibm.com/WAFLSchema");
                                        }
                                    }
                                    
                                    [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                                    SchemaOrigin IXMetaData.TypeOrigin {
                                        get {
                                            return SchemaOrigin.Fragment;
                                        }
                                    }
                                    
                                    [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                                    ILinqToXsdTypeManager IXMetaData.TypeManager {
                                        get {
                                            return LinqToXsdTypeManager.Instance;
                                        }
                                    }
                                    
                                    public override XTypedElement Clone() {
                                        return XTypedServices.CloneXTypedElement<localLocalType>(this);
                                    }
                                    
                                    ContentModelEntity IXMetaData.GetContentModel() {
                                        return ContentModelEntity.Default;
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
        
        /// <summary>
        /// <para>
        /// Regular expression: (entrypoint+)
        /// </para>
        /// </summary>
        public partial class entrypointsLocalType : XTypedElement, IXMetaData {
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            private XTypedList<entrypointLocalType> entrypointField;
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            private static ContentModelEntity contentModel;
            
         public static explicit operator entrypointsLocalType(XElement xe) { return XTypedServices.ToXTypedElement<entrypointsLocalType>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
            
            static entrypointsLocalType() {
                BuildElementDictionary();
                contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("entrypoint", "http://www.ibm.com/WAFLSchema")));
            }
            
            /// <summary>
            /// <para>
            /// Regular expression: (entrypoint+)
            /// </para>
            /// </summary>
            public entrypointsLocalType() {
            }
            
            /// <summary>
            /// <para>
            /// Occurrence: required, repeating
            /// </para>
            /// <para>
            /// Regular expression: (entrypoint+)
            /// </para>
            /// </summary>
            public IList<www.ibm.com.WAFLSchema.wafl.entrypointsLocalType.entrypointLocalType> entrypoint {
                get {
                    if ((this.entrypointField == null)) {
                        this.entrypointField = new XTypedList<entrypointLocalType>(this, LinqToXsdTypeManager.Instance, XName.Get("entrypoint", "http://www.ibm.com/WAFLSchema"));
                    }
                    return this.entrypointField;
                }
                set {
                    if ((value == null)) {
                        this.entrypointField = null;
                    }
                    else {
                        if ((this.entrypointField == null)) {
                            this.entrypointField = XTypedList<entrypointLocalType>.Initialize(this, LinqToXsdTypeManager.Instance, value, XName.Get("entrypoint", "http://www.ibm.com/WAFLSchema"));
                        }
                        else {
                            XTypedServices.SetList<entrypointLocalType>(this.entrypointField, value);
                        }
                    }
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
                get {
                    return localElementDictionary;
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            XName IXMetaData.SchemaName {
                get {
                    return XName.Get("entrypoints", "http://www.ibm.com/WAFLSchema");
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            SchemaOrigin IXMetaData.TypeOrigin {
                get {
                    return SchemaOrigin.Fragment;
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            ILinqToXsdTypeManager IXMetaData.TypeManager {
                get {
                    return LinqToXsdTypeManager.Instance;
                }
            }
            
            public override XTypedElement Clone() {
                return XTypedServices.CloneXTypedElement<entrypointsLocalType>(this);
            }
            
            private static void BuildElementDictionary() {
                localElementDictionary.Add(XName.Get("entrypoint", "http://www.ibm.com/WAFLSchema"), typeof(entrypointLocalType));
            }
            
            ContentModelEntity IXMetaData.GetContentModel() {
                return contentModel;
            }
            
            /// <summary>
            /// <para>
            /// Regular expression: (url)?
            /// </para>
            /// </summary>
            public partial class entrypointLocalType : XTypedElement, IXMetaData {
                
                [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();
                
                [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                private static ContentModelEntity contentModel;
                
         public static explicit operator entrypointLocalType(XElement xe) { return XTypedServices.ToXTypedElement<entrypointLocalType>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
                
                static entrypointLocalType() {
                    BuildElementDictionary();
                    contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("url", "http://www.ibm.com/WAFLSchema")));
                }
                
                /// <summary>
                /// <para>
                /// Regular expression: (url)?
                /// </para>
                /// </summary>
                public entrypointLocalType() {
                }
                
                /// <summary>
                /// <para>
                /// Occurrence: required
                /// </para>
                /// <para>
                /// Regular expression: (url)?
                /// </para>
                /// </summary>
                public string url {
                    get {
                        XElement x = this.GetElement(XName.Get("url", "http://www.ibm.com/WAFLSchema"));
                        return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
                    }
                    set {
                        this.SetElement(XName.Get("url", "http://www.ibm.com/WAFLSchema"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
                    }
                }
                
                /// <summary>
                /// <para>
                /// Occurrence: required
                /// </para>
                /// </summary>
                public string sig {
                    get {
                        XAttribute x = this.Attribute(XName.Get("sig", ""));
                        return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
                    }
                    set {
                        this.SetAttribute(XName.Get("sig", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
                    }
                }
                
                [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
                    get {
                        return localElementDictionary;
                    }
                }
                
                [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                XName IXMetaData.SchemaName {
                    get {
                        return XName.Get("entrypoint", "http://www.ibm.com/WAFLSchema");
                    }
                }
                
                [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                SchemaOrigin IXMetaData.TypeOrigin {
                    get {
                        return SchemaOrigin.Fragment;
                    }
                }
                
                [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                ILinqToXsdTypeManager IXMetaData.TypeManager {
                    get {
                        return LinqToXsdTypeManager.Instance;
                    }
                }
                
                public override XTypedElement Clone() {
                    return XTypedServices.CloneXTypedElement<entrypointLocalType>(this);
                }
                
                private static void BuildElementDictionary() {
                    localElementDictionary.Add(XName.Get("url", "http://www.ibm.com/WAFLSchema"), typeof(string));
                }
                
                ContentModelEntity IXMetaData.GetContentModel() {
                    return contentModel;
                }
            }
        }
        
        /// <summary>
        /// <para>
        /// Regular expression: (replacecall+)
        /// </para>
        /// </summary>
        public partial class callreplacementsLocalType : XTypedElement, IXMetaData {
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            private XTypedList<replacecallLocalType> replacecallField;
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            private static ContentModelEntity contentModel;
            
         public static explicit operator callreplacementsLocalType(XElement xe) { return XTypedServices.ToXTypedElement<callreplacementsLocalType>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
            
            static callreplacementsLocalType() {
                BuildElementDictionary();
                contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("replace-call", "http://www.ibm.com/WAFLSchema")));
            }
            
            /// <summary>
            /// <para>
            /// Regular expression: (replacecall+)
            /// </para>
            /// </summary>
            public callreplacementsLocalType() {
            }
            
            /// <summary>
            /// <para>
            /// Occurrence: required, repeating
            /// </para>
            /// <para>
            /// Regular expression: (replacecall+)
            /// </para>
            /// </summary>
            public IList<www.ibm.com.WAFLSchema.wafl.callreplacementsLocalType.replacecallLocalType> replacecall {
                get {
                    if ((this.replacecallField == null)) {
                        this.replacecallField = new XTypedList<replacecallLocalType>(this, LinqToXsdTypeManager.Instance, XName.Get("replace-call", "http://www.ibm.com/WAFLSchema"));
                    }
                    return this.replacecallField;
                }
                set {
                    if ((value == null)) {
                        this.replacecallField = null;
                    }
                    else {
                        if ((this.replacecallField == null)) {
                            this.replacecallField = XTypedList<replacecallLocalType>.Initialize(this, LinqToXsdTypeManager.Instance, value, XName.Get("replace-call", "http://www.ibm.com/WAFLSchema"));
                        }
                        else {
                            XTypedServices.SetList<replacecallLocalType>(this.replacecallField, value);
                        }
                    }
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
                get {
                    return localElementDictionary;
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            XName IXMetaData.SchemaName {
                get {
                    return XName.Get("call-replacements", "http://www.ibm.com/WAFLSchema");
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            SchemaOrigin IXMetaData.TypeOrigin {
                get {
                    return SchemaOrigin.Fragment;
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            ILinqToXsdTypeManager IXMetaData.TypeManager {
                get {
                    return LinqToXsdTypeManager.Instance;
                }
            }
            
            public override XTypedElement Clone() {
                return XTypedServices.CloneXTypedElement<callreplacementsLocalType>(this);
            }
            
            private static void BuildElementDictionary() {
                localElementDictionary.Add(XName.Get("replace-call", "http://www.ibm.com/WAFLSchema"), typeof(replacecallLocalType));
            }
            
            ContentModelEntity IXMetaData.GetContentModel() {
                return contentModel;
            }
            
            /// <summary>
            /// <para>
            /// Regular expression: (callsiteinfo, replacement)
            /// </para>
            /// </summary>
            public partial class replacecallLocalType : XTypedElement, IXMetaData {
                
                [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();
                
                [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                private static ContentModelEntity contentModel;
                
         public static explicit operator replacecallLocalType(XElement xe) { return XTypedServices.ToXTypedElement<replacecallLocalType>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
                
                static replacecallLocalType() {
                    BuildElementDictionary();
                    contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("call-site-info", "http://www.ibm.com/WAFLSchema")), new NamedContentModelEntity(XName.Get("replacement", "http://www.ibm.com/WAFLSchema")));
                }
                
                /// <summary>
                /// <para>
                /// Regular expression: (callsiteinfo, replacement)
                /// </para>
                /// </summary>
                public replacecallLocalType() {
                }
                
                /// <summary>
                /// <para>
                /// Occurrence: required
                /// </para>
                /// <para>
                /// Regular expression: (callsiteinfo, replacement)
                /// </para>
                /// </summary>
                public callsiteinfoLocalType callsiteinfo {
                    get {
                        XElement x = this.GetElement(XName.Get("call-site-info", "http://www.ibm.com/WAFLSchema"));
                        return ((callsiteinfoLocalType)(x));
                    }
                    set {
                        this.SetElement(XName.Get("call-site-info", "http://www.ibm.com/WAFLSchema"), value);
                    }
                }
                
                /// <summary>
                /// <para>
                /// Occurrence: required
                /// </para>
                /// <para>
                /// Regular expression: (callsiteinfo, replacement)
                /// </para>
                /// </summary>
                public replacementLocalType replacement {
                    get {
                        XElement x = this.GetElement(XName.Get("replacement", "http://www.ibm.com/WAFLSchema"));
                        return ((replacementLocalType)(x));
                    }
                    set {
                        this.SetElement(XName.Get("replacement", "http://www.ibm.com/WAFLSchema"), value);
                    }
                }
                
                [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
                    get {
                        return localElementDictionary;
                    }
                }
                
                [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                XName IXMetaData.SchemaName {
                    get {
                        return XName.Get("replace-call", "http://www.ibm.com/WAFLSchema");
                    }
                }
                
                [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                SchemaOrigin IXMetaData.TypeOrigin {
                    get {
                        return SchemaOrigin.Fragment;
                    }
                }
                
                [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                ILinqToXsdTypeManager IXMetaData.TypeManager {
                    get {
                        return LinqToXsdTypeManager.Instance;
                    }
                }
                
                public override XTypedElement Clone() {
                    return XTypedServices.CloneXTypedElement<replacecallLocalType>(this);
                }
                
                private static void BuildElementDictionary() {
                    localElementDictionary.Add(XName.Get("call-site-info", "http://www.ibm.com/WAFLSchema"), typeof(callsiteinfoLocalType));
                    localElementDictionary.Add(XName.Get("replacement", "http://www.ibm.com/WAFLSchema"), typeof(replacementLocalType));
                }
                
                ContentModelEntity IXMetaData.GetContentModel() {
                    return contentModel;
                }
                
                public partial class callsiteinfoLocalType : XTypedElement, IXMetaData {
                    
         public static explicit operator callsiteinfoLocalType(XElement xe) { return XTypedServices.ToXTypedElement<callsiteinfoLocalType>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
                    
                    public callsiteinfoLocalType() {
                    }
                    
                    /// <summary>
                    /// <para>
                    /// Occurrence: required
                    /// </para>
                    /// </summary>
                    public string caller {
                        get {
                            XAttribute x = this.Attribute(XName.Get("caller", ""));
                            return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
                        }
                        set {
                            this.SetAttribute(XName.Get("caller", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
                        }
                    }
                    
                    /// <summary>
                    /// <para>
                    /// Occurrence: required
                    /// </para>
                    /// </summary>
                    public string callsig {
                        get {
                            XAttribute x = this.Attribute(XName.Get("call-sig", ""));
                            return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
                        }
                        set {
                            this.SetAttribute(XName.Get("call-sig", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
                        }
                    }
                    
                    /// <summary>
                    /// <para>
                    /// Occurrence: required
                    /// </para>
                    /// </summary>
                    public byte bytecodeIndex {
                        get {
                            XAttribute x = this.Attribute(XName.Get("bytecodeIndex", ""));
                            return XTypedServices.ParseValue<byte>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.UnsignedByte).Datatype);
                        }
                        set {
                            this.SetAttribute(XName.Get("bytecodeIndex", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.UnsignedByte).Datatype);
                        }
                    }
                    
                    /// <summary>
                    /// <para>
                    /// Occurrence: required
                    /// </para>
                    /// </summary>
                    public byte srcLineNum {
                        get {
                            XAttribute x = this.Attribute(XName.Get("srcLineNum", ""));
                            return XTypedServices.ParseValue<byte>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.UnsignedByte).Datatype);
                        }
                        set {
                            this.SetAttribute(XName.Get("srcLineNum", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.UnsignedByte).Datatype);
                        }
                    }
                    
                    [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                    XName IXMetaData.SchemaName {
                        get {
                            return XName.Get("call-site-info", "http://www.ibm.com/WAFLSchema");
                        }
                    }
                    
                    [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                    SchemaOrigin IXMetaData.TypeOrigin {
                        get {
                            return SchemaOrigin.Fragment;
                        }
                    }
                    
                    [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                    ILinqToXsdTypeManager IXMetaData.TypeManager {
                        get {
                            return LinqToXsdTypeManager.Instance;
                        }
                    }
                    
                    public override XTypedElement Clone() {
                        return XTypedServices.CloneXTypedElement<callsiteinfoLocalType>(this);
                    }
                    
                    ContentModelEntity IXMetaData.GetContentModel() {
                        return ContentModelEntity.Default;
                    }
                }
                
                /// <summary>
                /// <para>
                /// Regular expression: (assignment)
                /// </para>
                /// </summary>
                public partial class replacementLocalType : XTypedElement, IXMetaData {
                    
                    [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                    static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();
                    
                    [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                    private static ContentModelEntity contentModel;
                    
         public static explicit operator replacementLocalType(XElement xe) { return XTypedServices.ToXTypedElement<replacementLocalType>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
                    
                    static replacementLocalType() {
                        BuildElementDictionary();
                        contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("assignment", "http://www.ibm.com/WAFLSchema")));
                    }
                    
                    /// <summary>
                    /// <para>
                    /// Regular expression: (assignment)
                    /// </para>
                    /// </summary>
                    public replacementLocalType() {
                    }
                    
                    /// <summary>
                    /// <para>
                    /// Occurrence: required
                    /// </para>
                    /// <para>
                    /// Regular expression: (assignment)
                    /// </para>
                    /// </summary>
                    public assignmentLocalType assignment {
                        get {
                            XElement x = this.GetElement(XName.Get("assignment", "http://www.ibm.com/WAFLSchema"));
                            return ((assignmentLocalType)(x));
                        }
                        set {
                            this.SetElement(XName.Get("assignment", "http://www.ibm.com/WAFLSchema"), value);
                        }
                    }
                    
                    [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                    Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
                        get {
                            return localElementDictionary;
                        }
                    }
                    
                    [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                    XName IXMetaData.SchemaName {
                        get {
                            return XName.Get("replacement", "http://www.ibm.com/WAFLSchema");
                        }
                    }
                    
                    [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                    SchemaOrigin IXMetaData.TypeOrigin {
                        get {
                            return SchemaOrigin.Fragment;
                        }
                    }
                    
                    [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                    ILinqToXsdTypeManager IXMetaData.TypeManager {
                        get {
                            return LinqToXsdTypeManager.Instance;
                        }
                    }
                    
                    public override XTypedElement Clone() {
                        return XTypedServices.CloneXTypedElement<replacementLocalType>(this);
                    }
                    
                    private static void BuildElementDictionary() {
                        localElementDictionary.Add(XName.Get("assignment", "http://www.ibm.com/WAFLSchema"), typeof(assignmentLocalType));
                    }
                    
                    ContentModelEntity IXMetaData.GetContentModel() {
                        return contentModel;
                    }
                    
                    /// <summary>
                    /// <para>
                    /// Regular expression: (lvalue, rvalue)
                    /// </para>
                    /// </summary>
                    public partial class assignmentLocalType : XTypedElement, IXMetaData {
                        
                        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                        static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();
                        
                        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                        private static ContentModelEntity contentModel;
                        
         public static explicit operator assignmentLocalType(XElement xe) { return XTypedServices.ToXTypedElement<assignmentLocalType>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
                        
                        static assignmentLocalType() {
                            BuildElementDictionary();
                            contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("l-value", "http://www.ibm.com/WAFLSchema")), new NamedContentModelEntity(XName.Get("r-value", "http://www.ibm.com/WAFLSchema")));
                        }
                        
                        /// <summary>
                        /// <para>
                        /// Regular expression: (lvalue, rvalue)
                        /// </para>
                        /// </summary>
                        public assignmentLocalType() {
                        }
                        
                        /// <summary>
                        /// <para>
                        /// Occurrence: required
                        /// </para>
                        /// <para>
                        /// Regular expression: (lvalue, rvalue)
                        /// </para>
                        /// </summary>
                        public lvalueLocalType lvalue {
                            get {
                                XElement x = this.GetElement(XName.Get("l-value", "http://www.ibm.com/WAFLSchema"));
                                return ((lvalueLocalType)(x));
                            }
                            set {
                                this.SetElement(XName.Get("l-value", "http://www.ibm.com/WAFLSchema"), value);
                            }
                        }
                        
                        /// <summary>
                        /// <para>
                        /// Occurrence: required
                        /// </para>
                        /// <para>
                        /// Regular expression: (lvalue, rvalue)
                        /// </para>
                        /// </summary>
                        public rvalueLocalType rvalue {
                            get {
                                XElement x = this.GetElement(XName.Get("r-value", "http://www.ibm.com/WAFLSchema"));
                                return ((rvalueLocalType)(x));
                            }
                            set {
                                this.SetElement(XName.Get("r-value", "http://www.ibm.com/WAFLSchema"), value);
                            }
                        }
                        
                        /// <summary>
                        /// <para>
                        /// Occurrence: required
                        /// </para>
                        /// </summary>
                        public string filename {
                            get {
                                XAttribute x = this.Attribute(XName.Get("filename", ""));
                                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
                            }
                            set {
                                this.SetAttribute(XName.Get("filename", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
                            }
                        }
                        
                        /// <summary>
                        /// <para>
                        /// Occurrence: required
                        /// </para>
                        /// </summary>
                        public byte lineNumber {
                            get {
                                XAttribute x = this.Attribute(XName.Get("lineNumber", ""));
                                return XTypedServices.ParseValue<byte>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.UnsignedByte).Datatype);
                            }
                            set {
                                this.SetAttribute(XName.Get("lineNumber", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.UnsignedByte).Datatype);
                            }
                        }
                        
                        /// <summary>
                        /// <para>
                        /// Occurrence: required
                        /// </para>
                        /// </summary>
                        public byte columnNumber {
                            get {
                                XAttribute x = this.Attribute(XName.Get("columnNumber", ""));
                                return XTypedServices.ParseValue<byte>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.UnsignedByte).Datatype);
                            }
                            set {
                                this.SetAttribute(XName.Get("columnNumber", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.UnsignedByte).Datatype);
                            }
                        }
                        
                        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
                            get {
                                return localElementDictionary;
                            }
                        }
                        
                        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                        XName IXMetaData.SchemaName {
                            get {
                                return XName.Get("assignment", "http://www.ibm.com/WAFLSchema");
                            }
                        }
                        
                        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                        SchemaOrigin IXMetaData.TypeOrigin {
                            get {
                                return SchemaOrigin.Fragment;
                            }
                        }
                        
                        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                        ILinqToXsdTypeManager IXMetaData.TypeManager {
                            get {
                                return LinqToXsdTypeManager.Instance;
                            }
                        }
                        
                        public override XTypedElement Clone() {
                            return XTypedServices.CloneXTypedElement<assignmentLocalType>(this);
                        }
                        
                        private static void BuildElementDictionary() {
                            localElementDictionary.Add(XName.Get("l-value", "http://www.ibm.com/WAFLSchema"), typeof(lvalueLocalType));
                            localElementDictionary.Add(XName.Get("r-value", "http://www.ibm.com/WAFLSchema"), typeof(rvalueLocalType));
                        }
                        
                        ContentModelEntity IXMetaData.GetContentModel() {
                            return contentModel;
                        }
                        
                        /// <summary>
                        /// <para>
                        /// Regular expression: (objectref)
                        /// </para>
                        /// </summary>
                        public partial class lvalueLocalType : XTypedElement, IXMetaData {
                            
                            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                            static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();
                            
                            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                            private static ContentModelEntity contentModel;
                            
         public static explicit operator lvalueLocalType(XElement xe) { return XTypedServices.ToXTypedElement<lvalueLocalType>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
                            
                            static lvalueLocalType() {
                                BuildElementDictionary();
                                contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("object-ref", "http://www.ibm.com/WAFLSchema")));
                            }
                            
                            /// <summary>
                            /// <para>
                            /// Regular expression: (objectref)
                            /// </para>
                            /// </summary>
                            public lvalueLocalType() {
                            }
                            
                            /// <summary>
                            /// <para>
                            /// Occurrence: required
                            /// </para>
                            /// <para>
                            /// Regular expression: (objectref)
                            /// </para>
                            /// </summary>
                            public objectrefLocalType objectref {
                                get {
                                    XElement x = this.GetElement(XName.Get("object-ref", "http://www.ibm.com/WAFLSchema"));
                                    return ((objectrefLocalType)(x));
                                }
                                set {
                                    this.SetElement(XName.Get("object-ref", "http://www.ibm.com/WAFLSchema"), value);
                                }
                            }
                            
                            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                            Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
                                get {
                                    return localElementDictionary;
                                }
                            }
                            
                            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                            XName IXMetaData.SchemaName {
                                get {
                                    return XName.Get("l-value", "http://www.ibm.com/WAFLSchema");
                                }
                            }
                            
                            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                            SchemaOrigin IXMetaData.TypeOrigin {
                                get {
                                    return SchemaOrigin.Fragment;
                                }
                            }
                            
                            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                            ILinqToXsdTypeManager IXMetaData.TypeManager {
                                get {
                                    return LinqToXsdTypeManager.Instance;
                                }
                            }
                            
                            public override XTypedElement Clone() {
                                return XTypedServices.CloneXTypedElement<lvalueLocalType>(this);
                            }
                            
                            private static void BuildElementDictionary() {
                                localElementDictionary.Add(XName.Get("object-ref", "http://www.ibm.com/WAFLSchema"), typeof(objectrefLocalType));
                            }
                            
                            ContentModelEntity IXMetaData.GetContentModel() {
                                return contentModel;
                            }
                            
                            /// <summary>
                            /// <para>
                            /// Regular expression: (global)
                            /// </para>
                            /// </summary>
                            public partial class objectrefLocalType : XTypedElement, IXMetaData {
                                
                                [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                                static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();
                                
                                [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                                private static ContentModelEntity contentModel;
                                
         public static explicit operator objectrefLocalType(XElement xe) { return XTypedServices.ToXTypedElement<objectrefLocalType>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
                                
                                static objectrefLocalType() {
                                    BuildElementDictionary();
                                    contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("global", "http://www.ibm.com/WAFLSchema")));
                                }
                                
                                /// <summary>
                                /// <para>
                                /// Regular expression: (global)
                                /// </para>
                                /// </summary>
                                public objectrefLocalType() {
                                }
                                
                                /// <summary>
                                /// <para>
                                /// Occurrence: required
                                /// </para>
                                /// <para>
                                /// Regular expression: (global)
                                /// </para>
                                /// </summary>
                                public globalLocalType global {
                                    get {
                                        XElement x = this.GetElement(XName.Get("global", "http://www.ibm.com/WAFLSchema"));
                                        return ((globalLocalType)(x));
                                    }
                                    set {
                                        this.SetElement(XName.Get("global", "http://www.ibm.com/WAFLSchema"), value);
                                    }
                                }
                                
                                /// <summary>
                                /// <para>
                                /// Occurrence: required
                                /// </para>
                                /// </summary>
                                public string ap {
                                    get {
                                        XAttribute x = this.Attribute(XName.Get("ap", ""));
                                        return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
                                    }
                                    set {
                                        this.SetAttribute(XName.Get("ap", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
                                    }
                                }
                                
                                [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                                Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
                                    get {
                                        return localElementDictionary;
                                    }
                                }
                                
                                [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                                XName IXMetaData.SchemaName {
                                    get {
                                        return XName.Get("object-ref", "http://www.ibm.com/WAFLSchema");
                                    }
                                }
                                
                                [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                                SchemaOrigin IXMetaData.TypeOrigin {
                                    get {
                                        return SchemaOrigin.Fragment;
                                    }
                                }
                                
                                [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                                ILinqToXsdTypeManager IXMetaData.TypeManager {
                                    get {
                                        return LinqToXsdTypeManager.Instance;
                                    }
                                }
                                
                                public override XTypedElement Clone() {
                                    return XTypedServices.CloneXTypedElement<objectrefLocalType>(this);
                                }
                                
                                private static void BuildElementDictionary() {
                                    localElementDictionary.Add(XName.Get("global", "http://www.ibm.com/WAFLSchema"), typeof(globalLocalType));
                                }
                                
                                ContentModelEntity IXMetaData.GetContentModel() {
                                    return contentModel;
                                }
                                
                                public partial class globalLocalType : XTypedElement, IXMetaData {
                                    
         public static explicit operator globalLocalType(XElement xe) { return XTypedServices.ToXTypedElement<globalLocalType>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
                                    
                                    public globalLocalType() {
                                    }
                                    
                                    /// <summary>
                                    /// <para>
                                    /// Occurrence: required
                                    /// </para>
                                    /// </summary>
                                    public string id {
                                        get {
                                            XAttribute x = this.Attribute(XName.Get("id", ""));
                                            return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
                                        }
                                        set {
                                            this.SetAttribute(XName.Get("id", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
                                        }
                                    }
                                    
                                    [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                                    XName IXMetaData.SchemaName {
                                        get {
                                            return XName.Get("global", "http://www.ibm.com/WAFLSchema");
                                        }
                                    }
                                    
                                    [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                                    SchemaOrigin IXMetaData.TypeOrigin {
                                        get {
                                            return SchemaOrigin.Fragment;
                                        }
                                    }
                                    
                                    [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                                    ILinqToXsdTypeManager IXMetaData.TypeManager {
                                        get {
                                            return LinqToXsdTypeManager.Instance;
                                        }
                                    }
                                    
                                    public override XTypedElement Clone() {
                                        return XTypedServices.CloneXTypedElement<globalLocalType>(this);
                                    }
                                    
                                    ContentModelEntity IXMetaData.GetContentModel() {
                                        return ContentModelEntity.Default;
                                    }
                                }
                            }
                        }
                        
                        /// <summary>
                        /// <para>
                        /// Regular expression: (argtoorigcall)
                        /// </para>
                        /// </summary>
                        public partial class rvalueLocalType : XTypedElement, IXMetaData {
                            
                            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                            static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();
                            
                            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                            private static ContentModelEntity contentModel;
                            
         public static explicit operator rvalueLocalType(XElement xe) { return XTypedServices.ToXTypedElement<rvalueLocalType>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
                            
                            static rvalueLocalType() {
                                BuildElementDictionary();
                                contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("arg-to-orig-call", "http://www.ibm.com/WAFLSchema")));
                            }
                            
                            /// <summary>
                            /// <para>
                            /// Regular expression: (argtoorigcall)
                            /// </para>
                            /// </summary>
                            public rvalueLocalType() {
                            }
                            
                            /// <summary>
                            /// <para>
                            /// Occurrence: required
                            /// </para>
                            /// <para>
                            /// Regular expression: (argtoorigcall)
                            /// </para>
                            /// </summary>
                            public argtoorigcallLocalType argtoorigcall {
                                get {
                                    XElement x = this.GetElement(XName.Get("arg-to-orig-call", "http://www.ibm.com/WAFLSchema"));
                                    return ((argtoorigcallLocalType)(x));
                                }
                                set {
                                    this.SetElement(XName.Get("arg-to-orig-call", "http://www.ibm.com/WAFLSchema"), value);
                                }
                            }
                            
                            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                            Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
                                get {
                                    return localElementDictionary;
                                }
                            }
                            
                            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                            XName IXMetaData.SchemaName {
                                get {
                                    return XName.Get("r-value", "http://www.ibm.com/WAFLSchema");
                                }
                            }
                            
                            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                            SchemaOrigin IXMetaData.TypeOrigin {
                                get {
                                    return SchemaOrigin.Fragment;
                                }
                            }
                            
                            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                            ILinqToXsdTypeManager IXMetaData.TypeManager {
                                get {
                                    return LinqToXsdTypeManager.Instance;
                                }
                            }
                            
                            public override XTypedElement Clone() {
                                return XTypedServices.CloneXTypedElement<rvalueLocalType>(this);
                            }
                            
                            private static void BuildElementDictionary() {
                                localElementDictionary.Add(XName.Get("arg-to-orig-call", "http://www.ibm.com/WAFLSchema"), typeof(argtoorigcallLocalType));
                            }
                            
                            ContentModelEntity IXMetaData.GetContentModel() {
                                return contentModel;
                            }
                            
                            public partial class argtoorigcallLocalType : XTypedElement, IXMetaData {
                                
         public static explicit operator argtoorigcallLocalType(XElement xe) { return XTypedServices.ToXTypedElement<argtoorigcallLocalType>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
                                
                                public argtoorigcallLocalType() {
                                }
                                
                                /// <summary>
                                /// <para>
                                /// Occurrence: required
                                /// </para>
                                /// </summary>
                                public byte pos {
                                    get {
                                        XAttribute x = this.Attribute(XName.Get("pos", ""));
                                        return XTypedServices.ParseValue<byte>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.UnsignedByte).Datatype);
                                    }
                                    set {
                                        this.SetAttribute(XName.Get("pos", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.UnsignedByte).Datatype);
                                    }
                                }
                                
                                [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                                XName IXMetaData.SchemaName {
                                    get {
                                        return XName.Get("arg-to-orig-call", "http://www.ibm.com/WAFLSchema");
                                    }
                                }
                                
                                [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                                SchemaOrigin IXMetaData.TypeOrigin {
                                    get {
                                        return SchemaOrigin.Fragment;
                                    }
                                }
                                
                                [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                                ILinqToXsdTypeManager IXMetaData.TypeManager {
                                    get {
                                        return LinqToXsdTypeManager.Instance;
                                    }
                                }
                                
                                public override XTypedElement Clone() {
                                    return XTypedServices.CloneXTypedElement<argtoorigcallLocalType>(this);
                                }
                                
                                ContentModelEntity IXMetaData.GetContentModel() {
                                    return ContentModelEntity.Default;
                                }
                            }
                        }
                    }
                }
            }
        }
    }
    
    public class LinqToXsdTypeManager : ILinqToXsdTypeManager {
        
        static Dictionary<XName, System.Type> elementDictionary = new Dictionary<XName, System.Type>();
        
        private static XmlSchemaSet schemaSet;
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static LinqToXsdTypeManager typeManagerSingleton = new LinqToXsdTypeManager();
        
        static LinqToXsdTypeManager() {
            BuildElementDictionary();
        }
        
        XmlSchemaSet ILinqToXsdTypeManager.Schemas {
            get {
                if ((schemaSet == null)) {
                    XmlSchemaSet tempSet = new XmlSchemaSet();
                    System.Threading.Interlocked.CompareExchange(ref schemaSet, tempSet, null);
                }
                return schemaSet;
            }
            set {
                schemaSet = value;
            }
        }
        
        Dictionary<XName, System.Type> ILinqToXsdTypeManager.GlobalTypeDictionary {
            get {
                return XTypedServices.EmptyDictionary;
            }
        }
        
        Dictionary<XName, System.Type> ILinqToXsdTypeManager.GlobalElementDictionary {
            get {
                return elementDictionary;
            }
        }
        
        Dictionary<System.Type, System.Type> ILinqToXsdTypeManager.RootContentTypeMapping {
            get {
                return XTypedServices.EmptyTypeMappingDictionary;
            }
        }
        
        public static LinqToXsdTypeManager Instance {
            get {
                return typeManagerSingleton;
            }
        }
        
        private static void BuildElementDictionary() {
            elementDictionary.Add(XName.Get("wafl", "http://www.ibm.com/WAFLSchema"), typeof(global::www.ibm.com.WAFLSchema.wafl));
        }
        
        protected internal static void AddSchemas(XmlSchemaSet schemas) {
            schemas.Add(schemaSet);
        }
        
        public static System.Type GetRootType() {
            return elementDictionary[XName.Get("wafl", "http://www.ibm.com/WAFLSchema")];
        }
    }
    
    public partial class XRootNamespace {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private XDocument doc;
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private XTypedElement rootObject;
        

    public wafl wafl {  get {return rootObject as wafl; } }
        
        private XRootNamespace() {
        }
        
        public XRootNamespace(wafl root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XDocument XDocument {
            get {
                return doc;
            }
        }
        
        public static XRootNamespace Load(string xmlFile) {
            XRootNamespace root = new XRootNamespace();
            root.doc = XDocument.Load(xmlFile);
            XTypedElement typedRoot = XTypedServices.ToXTypedElement(root.doc.Root, LinqToXsdTypeManager.Instance);
            if ((typedRoot == null)) {
                throw new LinqToXsdException("Invalid root element in xml document.");
            }
            root.rootObject = typedRoot;
            return root;
        }
        
        public static XRootNamespace Load(string xmlFile, LoadOptions options) {
            XRootNamespace root = new XRootNamespace();
            root.doc = XDocument.Load(xmlFile, options);
            XTypedElement typedRoot = XTypedServices.ToXTypedElement(root.doc.Root, LinqToXsdTypeManager.Instance);
            if ((typedRoot == null)) {
                throw new LinqToXsdException("Invalid root element in xml document.");
            }
            root.rootObject = typedRoot;
            return root;
        }
        
        public static XRootNamespace Load(TextReader textReader) {
            XRootNamespace root = new XRootNamespace();
            root.doc = XDocument.Load(textReader);
            XTypedElement typedRoot = XTypedServices.ToXTypedElement(root.doc.Root, LinqToXsdTypeManager.Instance);
            if ((typedRoot == null)) {
                throw new LinqToXsdException("Invalid root element in xml document.");
            }
            root.rootObject = typedRoot;
            return root;
        }
        
        public static XRootNamespace Load(TextReader textReader, LoadOptions options) {
            XRootNamespace root = new XRootNamespace();
            root.doc = XDocument.Load(textReader, options);
            XTypedElement typedRoot = XTypedServices.ToXTypedElement(root.doc.Root, LinqToXsdTypeManager.Instance);
            if ((typedRoot == null)) {
                throw new LinqToXsdException("Invalid root element in xml document.");
            }
            root.rootObject = typedRoot;
            return root;
        }
        
        public static XRootNamespace Load(XmlReader xmlReader) {
            XRootNamespace root = new XRootNamespace();
            root.doc = XDocument.Load(xmlReader);
            XTypedElement typedRoot = XTypedServices.ToXTypedElement(root.doc.Root, LinqToXsdTypeManager.Instance);
            if ((typedRoot == null)) {
                throw new LinqToXsdException("Invalid root element in xml document.");
            }
            root.rootObject = typedRoot;
            return root;
        }
        
        public static XRootNamespace Parse(string text) {
            XRootNamespace root = new XRootNamespace();
            root.doc = XDocument.Parse(text);
            XTypedElement typedRoot = XTypedServices.ToXTypedElement(root.doc.Root, LinqToXsdTypeManager.Instance);
            if ((typedRoot == null)) {
                throw new LinqToXsdException("Invalid root element in xml document.");
            }
            root.rootObject = typedRoot;
            return root;
        }
        
        public static XRootNamespace Parse(string text, LoadOptions options) {
            XRootNamespace root = new XRootNamespace();
            root.doc = XDocument.Parse(text, options);
            XTypedElement typedRoot = XTypedServices.ToXTypedElement(root.doc.Root, LinqToXsdTypeManager.Instance);
            if ((typedRoot == null)) {
                throw new LinqToXsdException("Invalid root element in xml document.");
            }
            root.rootObject = typedRoot;
            return root;
        }
        
        public virtual void Save(string fileName) {
            doc.Save(fileName);
        }
        
        public virtual void Save(TextWriter textWriter) {
            doc.Save(textWriter);
        }
        
        public virtual void Save(XmlWriter writer) {
            doc.Save(writer);
        }
        
        public virtual void Save(TextWriter textWriter, SaveOptions options) {
            doc.Save(textWriter, options);
        }
        
        public virtual void Save(string fileName, SaveOptions options) {
            doc.Save(fileName, options);
        }
    }
    
    public partial class XRoot {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private XDocument doc;
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private XTypedElement rootObject;
        

    public global::www.ibm.com.WAFLSchema.wafl wafl {  get {return rootObject as global::www.ibm.com.WAFLSchema.wafl; } }
        
        private XRoot() {
        }
        
        public XRoot(global::www.ibm.com.WAFLSchema.wafl root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XDocument XDocument {
            get {
                return doc;
            }
        }
        
        public static XRoot Load(string xmlFile) {
            XRoot root = new XRoot();
            root.doc = XDocument.Load(xmlFile);
            XTypedElement typedRoot = XTypedServices.ToXTypedElement(root.doc.Root, LinqToXsdTypeManager.Instance);
            if ((typedRoot == null)) {
                throw new LinqToXsdException("Invalid root element in xml document.");
            }
            root.rootObject = typedRoot;
            return root;
        }
        
        public static XRoot Load(string xmlFile, LoadOptions options) {
            XRoot root = new XRoot();
            root.doc = XDocument.Load(xmlFile, options);
            XTypedElement typedRoot = XTypedServices.ToXTypedElement(root.doc.Root, LinqToXsdTypeManager.Instance);
            if ((typedRoot == null)) {
                throw new LinqToXsdException("Invalid root element in xml document.");
            }
            root.rootObject = typedRoot;
            return root;
        }
        
        public static XRoot Load(TextReader textReader) {
            XRoot root = new XRoot();
            root.doc = XDocument.Load(textReader);
            XTypedElement typedRoot = XTypedServices.ToXTypedElement(root.doc.Root, LinqToXsdTypeManager.Instance);
            if ((typedRoot == null)) {
                throw new LinqToXsdException("Invalid root element in xml document.");
            }
            root.rootObject = typedRoot;
            return root;
        }
        
        public static XRoot Load(TextReader textReader, LoadOptions options) {
            XRoot root = new XRoot();
            root.doc = XDocument.Load(textReader, options);
            XTypedElement typedRoot = XTypedServices.ToXTypedElement(root.doc.Root, LinqToXsdTypeManager.Instance);
            if ((typedRoot == null)) {
                throw new LinqToXsdException("Invalid root element in xml document.");
            }
            root.rootObject = typedRoot;
            return root;
        }
        
        public static XRoot Load(XmlReader xmlReader) {
            XRoot root = new XRoot();
            root.doc = XDocument.Load(xmlReader);
            XTypedElement typedRoot = XTypedServices.ToXTypedElement(root.doc.Root, LinqToXsdTypeManager.Instance);
            if ((typedRoot == null)) {
                throw new LinqToXsdException("Invalid root element in xml document.");
            }
            root.rootObject = typedRoot;
            return root;
        }
        
        public static XRoot Parse(string text) {
            XRoot root = new XRoot();
            root.doc = XDocument.Parse(text);
            XTypedElement typedRoot = XTypedServices.ToXTypedElement(root.doc.Root, LinqToXsdTypeManager.Instance);
            if ((typedRoot == null)) {
                throw new LinqToXsdException("Invalid root element in xml document.");
            }
            root.rootObject = typedRoot;
            return root;
        }
        
        public static XRoot Parse(string text, LoadOptions options) {
            XRoot root = new XRoot();
            root.doc = XDocument.Parse(text, options);
            XTypedElement typedRoot = XTypedServices.ToXTypedElement(root.doc.Root, LinqToXsdTypeManager.Instance);
            if ((typedRoot == null)) {
                throw new LinqToXsdException("Invalid root element in xml document.");
            }
            root.rootObject = typedRoot;
            return root;
        }
        
        public virtual void Save(string fileName) {
            doc.Save(fileName);
        }
        
        public virtual void Save(TextWriter textWriter) {
            doc.Save(textWriter);
        }
        
        public virtual void Save(XmlWriter writer) {
            doc.Save(writer);
        }
        
        public virtual void Save(TextWriter textWriter, SaveOptions options) {
            doc.Save(textWriter, options);
        }
        
        public virtual void Save(string fileName, SaveOptions options) {
            doc.Save(fileName, options);
        }
    }
}
