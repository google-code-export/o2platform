//O2Ref:O2_Misc_Microsoft_MPL_Libs.dll
//Changelog
//     - replaced all byte and ushort with uint and XmlTypeCode.UnsignedInt
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.5446
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace xmlns.www.fortifysoftware.com.schema.fvdl {
    using System;
    using System.Collections;
    using System.Collections.Generic;
    using System.IO;
    using System.Diagnostics;
    using System.Xml;
    using System.Xml.Schema;
    using System.Xml.Linq;
    using Xml.Schema.Linq;
    
    
    /// <summary>
    /// <para>
    /// Regular expression: (CreatedTS, Build, Vulnerabilities, DataflowPool, ContextPool, UnifiedNodePool, UnifiedTracePool, Description+, Snippets, ProgramData, EngineData)
    /// </para>
    /// </summary>
    public partial class FVDL : XTypedElement, IXMetaData {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private XTypedList<DescriptionLocalType> DescriptionField;
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;
        
         public static explicit operator FVDL(XElement xe) { return XTypedServices.ToXTypedElement<FVDL>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
        
        static FVDL() {
            BuildElementDictionary();
            contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("CreatedTS", "xmlns://www.fortifysoftware.com/schema/fvdl")), new NamedContentModelEntity(XName.Get("Build", "xmlns://www.fortifysoftware.com/schema/fvdl")), new NamedContentModelEntity(XName.Get("Vulnerabilities", "xmlns://www.fortifysoftware.com/schema/fvdl")), new NamedContentModelEntity(XName.Get("DataflowPool", "xmlns://www.fortifysoftware.com/schema/fvdl")), new NamedContentModelEntity(XName.Get("ContextPool", "xmlns://www.fortifysoftware.com/schema/fvdl")), new NamedContentModelEntity(XName.Get("UnifiedNodePool", "xmlns://www.fortifysoftware.com/schema/fvdl")), new NamedContentModelEntity(XName.Get("UnifiedTracePool", "xmlns://www.fortifysoftware.com/schema/fvdl")), new NamedContentModelEntity(XName.Get("Description", "xmlns://www.fortifysoftware.com/schema/fvdl")), new NamedContentModelEntity(XName.Get("Snippets", "xmlns://www.fortifysoftware.com/schema/fvdl")), new NamedContentModelEntity(XName.Get("ProgramData", "xmlns://www.fortifysoftware.com/schema/fvdl")), new NamedContentModelEntity(XName.Get("EngineData", "xmlns://www.fortifysoftware.com/schema/fvdl")));
        }
        
        /// <summary>
        /// <para>
        /// Regular expression: (CreatedTS, Build, Vulnerabilities, DataflowPool, ContextPool, UnifiedNodePool, UnifiedTracePool, Description+, Snippets, ProgramData, EngineData)
        /// </para>
        /// </summary>
        public FVDL() {
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (CreatedTS, Build, Vulnerabilities, DataflowPool, ContextPool, UnifiedNodePool, UnifiedTracePool, Description+, Snippets, ProgramData, EngineData)
        /// </para>
        /// </summary>
        public CreatedTSLocalType CreatedTS {
            get {
                XElement x = this.GetElement(XName.Get("CreatedTS", "xmlns://www.fortifysoftware.com/schema/fvdl"));
                return ((CreatedTSLocalType)(x));
            }
            set {
                this.SetElement(XName.Get("CreatedTS", "xmlns://www.fortifysoftware.com/schema/fvdl"), value);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (CreatedTS, Build, Vulnerabilities, DataflowPool, ContextPool, UnifiedNodePool, UnifiedTracePool, Description+, Snippets, ProgramData, EngineData)
        /// </para>
        /// </summary>
        public BuildLocalType Build {
            get {
                XElement x = this.GetElement(XName.Get("Build", "xmlns://www.fortifysoftware.com/schema/fvdl"));
                return ((BuildLocalType)(x));
            }
            set {
                this.SetElement(XName.Get("Build", "xmlns://www.fortifysoftware.com/schema/fvdl"), value);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (CreatedTS, Build, Vulnerabilities, DataflowPool, ContextPool, UnifiedNodePool, UnifiedTracePool, Description+, Snippets, ProgramData, EngineData)
        /// </para>
        /// </summary>
        public VulnerabilitiesLocalType Vulnerabilities {
            get {
                XElement x = this.GetElement(XName.Get("Vulnerabilities", "xmlns://www.fortifysoftware.com/schema/fvdl"));
                return ((VulnerabilitiesLocalType)(x));
            }
            set {
                this.SetElement(XName.Get("Vulnerabilities", "xmlns://www.fortifysoftware.com/schema/fvdl"), value);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (CreatedTS, Build, Vulnerabilities, DataflowPool, ContextPool, UnifiedNodePool, UnifiedTracePool, Description+, Snippets, ProgramData, EngineData)
        /// </para>
        /// </summary>
        public XTypedElement DataflowPool {
            get {
                XElement x = this.GetElement(XName.Get("DataflowPool", "xmlns://www.fortifysoftware.com/schema/fvdl"));
                return ((XTypedElement)(x));
            }
            set {
                this.SetElement(XName.Get("DataflowPool", "xmlns://www.fortifysoftware.com/schema/fvdl"), value);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (CreatedTS, Build, Vulnerabilities, DataflowPool, ContextPool, UnifiedNodePool, UnifiedTracePool, Description+, Snippets, ProgramData, EngineData)
        /// </para>
        /// </summary>
        public ContextPoolLocalType ContextPool {
            get {
                XElement x = this.GetElement(XName.Get("ContextPool", "xmlns://www.fortifysoftware.com/schema/fvdl"));
                return ((ContextPoolLocalType)(x));
            }
            set {
                this.SetElement(XName.Get("ContextPool", "xmlns://www.fortifysoftware.com/schema/fvdl"), value);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (CreatedTS, Build, Vulnerabilities, DataflowPool, ContextPool, UnifiedNodePool, UnifiedTracePool, Description+, Snippets, ProgramData, EngineData)
        /// </para>
        /// </summary>
        public UnifiedNodePoolLocalType UnifiedNodePool {
            get {
                XElement x = this.GetElement(XName.Get("UnifiedNodePool", "xmlns://www.fortifysoftware.com/schema/fvdl"));
                return ((UnifiedNodePoolLocalType)(x));
            }
            set {
                this.SetElement(XName.Get("UnifiedNodePool", "xmlns://www.fortifysoftware.com/schema/fvdl"), value);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (CreatedTS, Build, Vulnerabilities, DataflowPool, ContextPool, UnifiedNodePool, UnifiedTracePool, Description+, Snippets, ProgramData, EngineData)
        /// </para>
        /// </summary>
        public UnifiedTracePoolLocalType UnifiedTracePool {
            get {
                XElement x = this.GetElement(XName.Get("UnifiedTracePool", "xmlns://www.fortifysoftware.com/schema/fvdl"));
                return ((UnifiedTracePoolLocalType)(x));
            }
            set {
                this.SetElement(XName.Get("UnifiedTracePool", "xmlns://www.fortifysoftware.com/schema/fvdl"), value);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required, repeating
        /// </para>
        /// <para>
        /// Regular expression: (CreatedTS, Build, Vulnerabilities, DataflowPool, ContextPool, UnifiedNodePool, UnifiedTracePool, Description+, Snippets, ProgramData, EngineData)
        /// </para>
        /// </summary>
        public IList<xmlns.www.fortifysoftware.com.schema.fvdl.FVDL.DescriptionLocalType> Description {
            get {
                if ((this.DescriptionField == null)) {
                    this.DescriptionField = new XTypedList<DescriptionLocalType>(this, LinqToXsdTypeManager.Instance, XName.Get("Description", "xmlns://www.fortifysoftware.com/schema/fvdl"));
                }
                return this.DescriptionField;
            }
            set {
                if ((value == null)) {
                    this.DescriptionField = null;
                }
                else {
                    if ((this.DescriptionField == null)) {
                        this.DescriptionField = XTypedList<DescriptionLocalType>.Initialize(this, LinqToXsdTypeManager.Instance, value, XName.Get("Description", "xmlns://www.fortifysoftware.com/schema/fvdl"));
                    }
                    else {
                        XTypedServices.SetList<DescriptionLocalType>(this.DescriptionField, value);
                    }
                }
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (CreatedTS, Build, Vulnerabilities, DataflowPool, ContextPool, UnifiedNodePool, UnifiedTracePool, Description+, Snippets, ProgramData, EngineData)
        /// </para>
        /// </summary>
        public SnippetsLocalType Snippets {
            get {
                XElement x = this.GetElement(XName.Get("Snippets", "xmlns://www.fortifysoftware.com/schema/fvdl"));
                return ((SnippetsLocalType)(x));
            }
            set {
                this.SetElement(XName.Get("Snippets", "xmlns://www.fortifysoftware.com/schema/fvdl"), value);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (CreatedTS, Build, Vulnerabilities, DataflowPool, ContextPool, UnifiedNodePool, UnifiedTracePool, Description+, Snippets, ProgramData, EngineData)
        /// </para>
        /// </summary>
        public ProgramDataLocalType ProgramData {
            get {
                XElement x = this.GetElement(XName.Get("ProgramData", "xmlns://www.fortifysoftware.com/schema/fvdl"));
                return ((ProgramDataLocalType)(x));
            }
            set {
                this.SetElement(XName.Get("ProgramData", "xmlns://www.fortifysoftware.com/schema/fvdl"), value);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (CreatedTS, Build, Vulnerabilities, DataflowPool, ContextPool, UnifiedNodePool, UnifiedTracePool, Description+, Snippets, ProgramData, EngineData)
        /// </para>
        /// </summary>
        public EngineDataLocalType EngineData {
            get {
                XElement x = this.GetElement(XName.Get("EngineData", "xmlns://www.fortifysoftware.com/schema/fvdl"));
                return ((EngineDataLocalType)(x));
            }
            set {
                this.SetElement(XName.Get("EngineData", "xmlns://www.fortifysoftware.com/schema/fvdl"), value);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// </summary>
        public decimal version {
            get {
                XAttribute x = this.Attribute(XName.Get("version", ""));
                return XTypedServices.ParseValue<decimal>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Decimal).Datatype);
            }
            set {
                this.SetAttribute(XName.Get("version", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Decimal).Datatype);
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
            get {
                return localElementDictionary;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName {
            get {
                return XName.Get("FVDL", "xmlns://www.fortifysoftware.com/schema/fvdl");
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin {
            get {
                return SchemaOrigin.Element;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager {
            get {
                return LinqToXsdTypeManager.Instance;
            }
        }
        
        public void Save(string xmlFile) {
            XTypedServices.Save(xmlFile, Untyped);
        }
        
        public void Save(System.IO.TextWriter tw) {
            XTypedServices.Save(tw, Untyped);
        }
        
        public void Save(System.Xml.XmlWriter xmlWriter) {
            XTypedServices.Save(xmlWriter, Untyped);
        }
        
        public static FVDL Load(string xmlFile) {
            return XTypedServices.Load<FVDL>(xmlFile);
        }
        
        public static FVDL Load(System.IO.TextReader xmlFile) {
            return XTypedServices.Load<FVDL>(xmlFile);
        }
        
        public static FVDL Parse(string xml) {
            return XTypedServices.Parse<FVDL>(xml);
        }
        
        public override XTypedElement Clone() {
            return XTypedServices.CloneXTypedElement<FVDL>(this);
        }
        
        private static void BuildElementDictionary() {
            localElementDictionary.Add(XName.Get("CreatedTS", "xmlns://www.fortifysoftware.com/schema/fvdl"), typeof(CreatedTSLocalType));
            localElementDictionary.Add(XName.Get("Build", "xmlns://www.fortifysoftware.com/schema/fvdl"), typeof(BuildLocalType));
            localElementDictionary.Add(XName.Get("Vulnerabilities", "xmlns://www.fortifysoftware.com/schema/fvdl"), typeof(VulnerabilitiesLocalType));
            localElementDictionary.Add(XName.Get("DataflowPool", "xmlns://www.fortifysoftware.com/schema/fvdl"), typeof(XTypedElement));
            localElementDictionary.Add(XName.Get("ContextPool", "xmlns://www.fortifysoftware.com/schema/fvdl"), typeof(ContextPoolLocalType));
            localElementDictionary.Add(XName.Get("UnifiedNodePool", "xmlns://www.fortifysoftware.com/schema/fvdl"), typeof(UnifiedNodePoolLocalType));
            localElementDictionary.Add(XName.Get("UnifiedTracePool", "xmlns://www.fortifysoftware.com/schema/fvdl"), typeof(UnifiedTracePoolLocalType));
            localElementDictionary.Add(XName.Get("Description", "xmlns://www.fortifysoftware.com/schema/fvdl"), typeof(DescriptionLocalType));
            localElementDictionary.Add(XName.Get("Snippets", "xmlns://www.fortifysoftware.com/schema/fvdl"), typeof(SnippetsLocalType));
            localElementDictionary.Add(XName.Get("ProgramData", "xmlns://www.fortifysoftware.com/schema/fvdl"), typeof(ProgramDataLocalType));
            localElementDictionary.Add(XName.Get("EngineData", "xmlns://www.fortifysoftware.com/schema/fvdl"), typeof(EngineDataLocalType));
        }
        
        ContentModelEntity IXMetaData.GetContentModel() {
            return contentModel;
        }
        
        public partial class CreatedTSLocalType : XTypedElement, IXMetaData {
            
         public static explicit operator CreatedTSLocalType(XElement xe) { return XTypedServices.ToXTypedElement<CreatedTSLocalType>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
            
            public CreatedTSLocalType() {
            }
            
            /// <summary>
            /// <para>
            /// Occurrence: required
            /// </para>
            /// </summary>
            public System.DateTime date {
                get {
                    XAttribute x = this.Attribute(XName.Get("date", ""));
                    return XTypedServices.ParseValue<System.DateTime>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Date).Datatype);
                }
                set {
                    this.SetAttribute(XName.Get("date", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Date).Datatype);
                }
            }
            
            /// <summary>
            /// <para>
            /// Occurrence: required
            /// </para>
            /// </summary>
            public System.DateTime time {
                get {
                    XAttribute x = this.Attribute(XName.Get("time", ""));
                    return XTypedServices.ParseValue<System.DateTime>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Time).Datatype);
                }
                set {
                    this.SetAttribute(XName.Get("time", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Time).Datatype);
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            XName IXMetaData.SchemaName {
                get {
                    return XName.Get("CreatedTS", "xmlns://www.fortifysoftware.com/schema/fvdl");
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            SchemaOrigin IXMetaData.TypeOrigin {
                get {
                    return SchemaOrigin.Fragment;
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            ILinqToXsdTypeManager IXMetaData.TypeManager {
                get {
                    return LinqToXsdTypeManager.Instance;
                }
            }
            
            public override XTypedElement Clone() {
                return XTypedServices.CloneXTypedElement<CreatedTSLocalType>(this);
            }
            
            ContentModelEntity IXMetaData.GetContentModel() {
                return ContentModelEntity.Default;
            }
        }
        
        /// <summary>
        /// <para>
        /// Regular expression: (BuildID, NumberFiles, LOC, SourceBasePath, SourceFiles, ScanTime)
        /// </para>
        /// </summary>
        public partial class BuildLocalType : XTypedElement, IXMetaData {
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            private static ContentModelEntity contentModel;
            
         public static explicit operator BuildLocalType(XElement xe) { return XTypedServices.ToXTypedElement<BuildLocalType>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
            
            static BuildLocalType() {
                BuildElementDictionary();
                contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("BuildID", "xmlns://www.fortifysoftware.com/schema/fvdl")), new NamedContentModelEntity(XName.Get("NumberFiles", "xmlns://www.fortifysoftware.com/schema/fvdl")), new NamedContentModelEntity(XName.Get("LOC", "xmlns://www.fortifysoftware.com/schema/fvdl")), new NamedContentModelEntity(XName.Get("SourceBasePath", "xmlns://www.fortifysoftware.com/schema/fvdl")), new NamedContentModelEntity(XName.Get("SourceFiles", "xmlns://www.fortifysoftware.com/schema/fvdl")), new NamedContentModelEntity(XName.Get("ScanTime", "xmlns://www.fortifysoftware.com/schema/fvdl")));
            }
            
            /// <summary>
            /// <para>
            /// Regular expression: (BuildID, NumberFiles, LOC, SourceBasePath, SourceFiles, ScanTime)
            /// </para>
            /// </summary>
            public BuildLocalType() {
            }
            
            /// <summary>
            /// <para>
            /// Occurrence: required
            /// </para>
            /// <para>
            /// Regular expression: (BuildID, NumberFiles, LOC, SourceBasePath, SourceFiles, ScanTime)
            /// </para>
            /// </summary>
            public string BuildID {
                get {
                    XElement x = this.GetElement(XName.Get("BuildID", "xmlns://www.fortifysoftware.com/schema/fvdl"));
                    return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
                }
                set {
                    this.SetElement(XName.Get("BuildID", "xmlns://www.fortifysoftware.com/schema/fvdl"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
                }
            }
            
            /// <summary>
            /// <para>
            /// Occurrence: required
            /// </para>
            /// <para>
            /// Regular expression: (BuildID, NumberFiles, LOC, SourceBasePath, SourceFiles, ScanTime)
            /// </para>
            /// </summary>
            public uint NumberFiles {
                get {
                    XElement x = this.GetElement(XName.Get("NumberFiles", "xmlns://www.fortifysoftware.com/schema/fvdl"));
                    return XTypedServices.ParseValue<uint>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.UnsignedInt).Datatype);
                }
                set {
                    this.SetElement(XName.Get("NumberFiles", "xmlns://www.fortifysoftware.com/schema/fvdl"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.UnsignedInt).Datatype);
                }
            }
            
            /// <summary>
            /// <para>
            /// Occurrence: required
            /// </para>
            /// <para>
            /// Regular expression: (BuildID, NumberFiles, LOC, SourceBasePath, SourceFiles, ScanTime)
            /// </para>
            /// </summary>
            public uint LOC {
                get {
                    XElement x = this.GetElement(XName.Get("LOC", "xmlns://www.fortifysoftware.com/schema/fvdl"));
                    return XTypedServices.ParseValue<uint>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.UnsignedInt).Datatype);
                }
                set {
                    this.SetElement(XName.Get("LOC", "xmlns://www.fortifysoftware.com/schema/fvdl"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.UnsignedInt).Datatype);
                }
            }
            
            /// <summary>
            /// <para>
            /// Occurrence: required
            /// </para>
            /// <para>
            /// Regular expression: (BuildID, NumberFiles, LOC, SourceBasePath, SourceFiles, ScanTime)
            /// </para>
            /// </summary>
            public string SourceBasePath {
                get {
                    XElement x = this.GetElement(XName.Get("SourceBasePath", "xmlns://www.fortifysoftware.com/schema/fvdl"));
                    return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
                }
                set {
                    this.SetElement(XName.Get("SourceBasePath", "xmlns://www.fortifysoftware.com/schema/fvdl"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
                }
            }
            
            /// <summary>
            /// <para>
            /// Occurrence: required
            /// </para>
            /// <para>
            /// Regular expression: (BuildID, NumberFiles, LOC, SourceBasePath, SourceFiles, ScanTime)
            /// </para>
            /// </summary>
            public SourceFilesLocalType SourceFiles {
                get {
                    XElement x = this.GetElement(XName.Get("SourceFiles", "xmlns://www.fortifysoftware.com/schema/fvdl"));
                    return ((SourceFilesLocalType)(x));
                }
                set {
                    this.SetElement(XName.Get("SourceFiles", "xmlns://www.fortifysoftware.com/schema/fvdl"), value);
                }
            }
            
            /// <summary>
            /// <para>
            /// Occurrence: required
            /// </para>
            /// <para>
            /// Regular expression: (BuildID, NumberFiles, LOC, SourceBasePath, SourceFiles, ScanTime)
            /// </para>
            /// </summary>
            public ScanTimeLocalType ScanTime {
                get {
                    XElement x = this.GetElement(XName.Get("ScanTime", "xmlns://www.fortifysoftware.com/schema/fvdl"));
                    return ((ScanTimeLocalType)(x));
                }
                set {
                    this.SetElement(XName.Get("ScanTime", "xmlns://www.fortifysoftware.com/schema/fvdl"), value);
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
                get {
                    return localElementDictionary;
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            XName IXMetaData.SchemaName {
                get {
                    return XName.Get("Build", "xmlns://www.fortifysoftware.com/schema/fvdl");
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            SchemaOrigin IXMetaData.TypeOrigin {
                get {
                    return SchemaOrigin.Fragment;
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            ILinqToXsdTypeManager IXMetaData.TypeManager {
                get {
                    return LinqToXsdTypeManager.Instance;
                }
            }
            
            public override XTypedElement Clone() {
                return XTypedServices.CloneXTypedElement<BuildLocalType>(this);
            }
            
            private static void BuildElementDictionary() {
                localElementDictionary.Add(XName.Get("BuildID", "xmlns://www.fortifysoftware.com/schema/fvdl"), typeof(string));
                localElementDictionary.Add(XName.Get("NumberFiles", "xmlns://www.fortifysoftware.com/schema/fvdl"), typeof(uint));
                localElementDictionary.Add(XName.Get("LOC", "xmlns://www.fortifysoftware.com/schema/fvdl"), typeof(uint));
                localElementDictionary.Add(XName.Get("SourceBasePath", "xmlns://www.fortifysoftware.com/schema/fvdl"), typeof(string));
                localElementDictionary.Add(XName.Get("SourceFiles", "xmlns://www.fortifysoftware.com/schema/fvdl"), typeof(SourceFilesLocalType));
                localElementDictionary.Add(XName.Get("ScanTime", "xmlns://www.fortifysoftware.com/schema/fvdl"), typeof(ScanTimeLocalType));
            }
            
            ContentModelEntity IXMetaData.GetContentModel() {
                return contentModel;
            }
            
            /// <summary>
            /// <para>
            /// Regular expression: (File+)
            /// </para>
            /// </summary>
            public partial class SourceFilesLocalType : XTypedElement, IXMetaData {
                
                [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                private XTypedList<FileLocalType> FileField;
                
                [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();
                
                [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                private static ContentModelEntity contentModel;
                
         public static explicit operator SourceFilesLocalType(XElement xe) { return XTypedServices.ToXTypedElement<SourceFilesLocalType>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
                
                static SourceFilesLocalType() {
                    BuildElementDictionary();
                    contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("File", "xmlns://www.fortifysoftware.com/schema/fvdl")));
                }
                
                /// <summary>
                /// <para>
                /// Regular expression: (File+)
                /// </para>
                /// </summary>
                public SourceFilesLocalType() {
                }
                
                /// <summary>
                /// <para>
                /// Occurrence: required, repeating
                /// </para>
                /// <para>
                /// Regular expression: (File+)
                /// </para>
                /// </summary>
                public IList<xmlns.www.fortifysoftware.com.schema.fvdl.FVDL.BuildLocalType.SourceFilesLocalType.FileLocalType> File {
                    get {
                        if ((this.FileField == null)) {
                            this.FileField = new XTypedList<FileLocalType>(this, LinqToXsdTypeManager.Instance, XName.Get("File", "xmlns://www.fortifysoftware.com/schema/fvdl"));
                        }
                        return this.FileField;
                    }
                    set {
                        if ((value == null)) {
                            this.FileField = null;
                        }
                        else {
                            if ((this.FileField == null)) {
                                this.FileField = XTypedList<FileLocalType>.Initialize(this, LinqToXsdTypeManager.Instance, value, XName.Get("File", "xmlns://www.fortifysoftware.com/schema/fvdl"));
                            }
                            else {
                                XTypedServices.SetList<FileLocalType>(this.FileField, value);
                            }
                        }
                    }
                }
                
                [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
                    get {
                        return localElementDictionary;
                    }
                }
                
                [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                XName IXMetaData.SchemaName {
                    get {
                        return XName.Get("SourceFiles", "xmlns://www.fortifysoftware.com/schema/fvdl");
                    }
                }
                
                [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                SchemaOrigin IXMetaData.TypeOrigin {
                    get {
                        return SchemaOrigin.Fragment;
                    }
                }
                
                [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                ILinqToXsdTypeManager IXMetaData.TypeManager {
                    get {
                        return LinqToXsdTypeManager.Instance;
                    }
                }
                
                public override XTypedElement Clone() {
                    return XTypedServices.CloneXTypedElement<SourceFilesLocalType>(this);
                }
                
                private static void BuildElementDictionary() {
                    localElementDictionary.Add(XName.Get("File", "xmlns://www.fortifysoftware.com/schema/fvdl"), typeof(FileLocalType));
                }
                
                ContentModelEntity IXMetaData.GetContentModel() {
                    return contentModel;
                }
                
                public partial class FileLocalType : XTypedElement, IXMetaData {
                    
         public static explicit operator FileLocalType(XElement xe) { return XTypedServices.ToXTypedElement<FileLocalType>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
                    
                    public FileLocalType() {
                    }
                    
                    public string TypedValue {
                        get {
                            XElement x = this.Untyped;
                            return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
                        }
                        set {
                            this.SetValue(value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
                        }
                    }
                    
                    /// <summary>
                    /// <para>
                    /// Occurrence: required
                    /// </para>
                    /// </summary>
                    public uint size {
                        get {
                            XAttribute x = this.Attribute(XName.Get("size", ""));
                            return XTypedServices.ParseValue<uint>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.UnsignedInt).Datatype);
                        }
                        set {
                            this.SetAttribute(XName.Get("size", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.UnsignedInt).Datatype);
                        }
                    }
                    
                    /// <summary>
                    /// <para>
                    /// Occurrence: required
                    /// </para>
                    /// </summary>
                    public ulong timestamp {
                        get {
                            XAttribute x = this.Attribute(XName.Get("timestamp", ""));
                            return XTypedServices.ParseValue<ulong>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.UnsignedInt).Datatype);
                        }
                        set {
                            this.SetAttribute(XName.Get("timestamp", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.UnsignedInt).Datatype);
                        }
                    }
                    
                    /// <summary>
                    /// <para>
                    /// Occurrence: required
                    /// </para>
                    /// </summary>
                    public uint loc {
                        get {
                            XAttribute x = this.Attribute(XName.Get("loc", ""));
                            return XTypedServices.ParseValue<uint>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.UnsignedInt).Datatype);
                        }
                        set {
                            this.SetAttribute(XName.Get("loc", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.UnsignedInt).Datatype);
                        }
                    }
                    
                    /// <summary>
                    /// <para>
                    /// Occurrence: required
                    /// </para>
                    /// </summary>
                    public string type {
                        get {
                            XAttribute x = this.Attribute(XName.Get("type", ""));
                            return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
                        }
                        set {
                            this.SetAttribute(XName.Get("type", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
                        }
                    }
                    
                    [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                    XName IXMetaData.SchemaName {
                        get {
                            return XName.Get("File", "xmlns://www.fortifysoftware.com/schema/fvdl");
                        }
                    }
                    
                    [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                    SchemaOrigin IXMetaData.TypeOrigin {
                        get {
                            return SchemaOrigin.Fragment;
                        }
                    }
                    
                    [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                    ILinqToXsdTypeManager IXMetaData.TypeManager {
                        get {
                            return LinqToXsdTypeManager.Instance;
                        }
                    }
                    
                    public override XTypedElement Clone() {
                        return XTypedServices.CloneXTypedElement<FileLocalType>(this);
                    }
                    
                    ContentModelEntity IXMetaData.GetContentModel() {
                        return ContentModelEntity.Default;
                    }
                }
            }
            
            public partial class ScanTimeLocalType : XTypedElement, IXMetaData {
                
         public static explicit operator ScanTimeLocalType(XElement xe) { return XTypedServices.ToXTypedElement<ScanTimeLocalType>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
                
                public ScanTimeLocalType() {
                }
                
                /// <summary>
                /// <para>
                /// Occurrence: required
                /// </para>
                /// </summary>
                public uint value {
                    get {
                        XAttribute x = this.Attribute(XName.Get("value", ""));
                        return XTypedServices.ParseValue<uint>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.UnsignedInt).Datatype);
                    }
                    set {
                        this.SetAttribute(XName.Get("value", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.UnsignedInt).Datatype);
                    }
                }
                
                [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                XName IXMetaData.SchemaName {
                    get {
                        return XName.Get("ScanTime", "xmlns://www.fortifysoftware.com/schema/fvdl");
                    }
                }
                
                [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                SchemaOrigin IXMetaData.TypeOrigin {
                    get {
                        return SchemaOrigin.Fragment;
                    }
                }
                
                [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                ILinqToXsdTypeManager IXMetaData.TypeManager {
                    get {
                        return LinqToXsdTypeManager.Instance;
                    }
                }
                
                public override XTypedElement Clone() {
                    return XTypedServices.CloneXTypedElement<ScanTimeLocalType>(this);
                }
                
                ContentModelEntity IXMetaData.GetContentModel() {
                    return ContentModelEntity.Default;
                }
            }
        }
        
        /// <summary>
        /// <para>
        /// Regular expression: (Vulnerability+)
        /// </para>
        /// </summary>
        public partial class VulnerabilitiesLocalType : XTypedElement, IXMetaData {
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            private XTypedList<VulnerabilityLocalType> VulnerabilityField;
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            private static ContentModelEntity contentModel;
            
         public static explicit operator VulnerabilitiesLocalType(XElement xe) { return XTypedServices.ToXTypedElement<VulnerabilitiesLocalType>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
            
            static VulnerabilitiesLocalType() {
                BuildElementDictionary();
                contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("Vulnerability", "xmlns://www.fortifysoftware.com/schema/fvdl")));
            }
            
            /// <summary>
            /// <para>
            /// Regular expression: (Vulnerability+)
            /// </para>
            /// </summary>
            public VulnerabilitiesLocalType() {
            }
            
            /// <summary>
            /// <para>
            /// Occurrence: required, repeating
            /// </para>
            /// <para>
            /// Regular expression: (Vulnerability+)
            /// </para>
            /// </summary>
            public IList<xmlns.www.fortifysoftware.com.schema.fvdl.FVDL.VulnerabilitiesLocalType.VulnerabilityLocalType> Vulnerability {
                get {
                    if ((this.VulnerabilityField == null)) {
                        this.VulnerabilityField = new XTypedList<VulnerabilityLocalType>(this, LinqToXsdTypeManager.Instance, XName.Get("Vulnerability", "xmlns://www.fortifysoftware.com/schema/fvdl"));
                    }
                    return this.VulnerabilityField;
                }
                set {
                    if ((value == null)) {
                        this.VulnerabilityField = null;
                    }
                    else {
                        if ((this.VulnerabilityField == null)) {
                            this.VulnerabilityField = XTypedList<VulnerabilityLocalType>.Initialize(this, LinqToXsdTypeManager.Instance, value, XName.Get("Vulnerability", "xmlns://www.fortifysoftware.com/schema/fvdl"));
                        }
                        else {
                            XTypedServices.SetList<VulnerabilityLocalType>(this.VulnerabilityField, value);
                        }
                    }
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
                get {
                    return localElementDictionary;
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            XName IXMetaData.SchemaName {
                get {
                    return XName.Get("Vulnerabilities", "xmlns://www.fortifysoftware.com/schema/fvdl");
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            SchemaOrigin IXMetaData.TypeOrigin {
                get {
                    return SchemaOrigin.Fragment;
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            ILinqToXsdTypeManager IXMetaData.TypeManager {
                get {
                    return LinqToXsdTypeManager.Instance;
                }
            }
            
            public override XTypedElement Clone() {
                return XTypedServices.CloneXTypedElement<VulnerabilitiesLocalType>(this);
            }
            
            private static void BuildElementDictionary() {
                localElementDictionary.Add(XName.Get("Vulnerability", "xmlns://www.fortifysoftware.com/schema/fvdl"), typeof(VulnerabilityLocalType));
            }
            
            ContentModelEntity IXMetaData.GetContentModel() {
                return contentModel;
            }
            
            /// <summary>
            /// <para>
            /// Regular expression: (ClassInfo, InstanceInfo, AnalysisInfo)
            /// </para>
            /// </summary>
            public partial class VulnerabilityLocalType : XTypedElement, IXMetaData {
                
                [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();
                
                [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                private static ContentModelEntity contentModel;
                
         public static explicit operator VulnerabilityLocalType(XElement xe) { return XTypedServices.ToXTypedElement<VulnerabilityLocalType>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
                
                static VulnerabilityLocalType() {
                    BuildElementDictionary();
                    contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("ClassInfo", "xmlns://www.fortifysoftware.com/schema/fvdl")), new NamedContentModelEntity(XName.Get("InstanceInfo", "xmlns://www.fortifysoftware.com/schema/fvdl")), new NamedContentModelEntity(XName.Get("AnalysisInfo", "xmlns://www.fortifysoftware.com/schema/fvdl")));
                }
                
                /// <summary>
                /// <para>
                /// Regular expression: (ClassInfo, InstanceInfo, AnalysisInfo)
                /// </para>
                /// </summary>
                public VulnerabilityLocalType() {
                }
                
                /// <summary>
                /// <para>
                /// Occurrence: required
                /// </para>
                /// <para>
                /// Regular expression: (ClassInfo, InstanceInfo, AnalysisInfo)
                /// </para>
                /// </summary>
                public ClassInfoLocalType ClassInfo {
                    get {
                        XElement x = this.GetElement(XName.Get("ClassInfo", "xmlns://www.fortifysoftware.com/schema/fvdl"));
                        return ((ClassInfoLocalType)(x));
                    }
                    set {
                        this.SetElement(XName.Get("ClassInfo", "xmlns://www.fortifysoftware.com/schema/fvdl"), value);
                    }
                }
                
                /// <summary>
                /// <para>
                /// Occurrence: required
                /// </para>
                /// <para>
                /// Regular expression: (ClassInfo, InstanceInfo, AnalysisInfo)
                /// </para>
                /// </summary>
                public InstanceInfoLocalType InstanceInfo {
                    get {
                        XElement x = this.GetElement(XName.Get("InstanceInfo", "xmlns://www.fortifysoftware.com/schema/fvdl"));
                        return ((InstanceInfoLocalType)(x));
                    }
                    set {
                        this.SetElement(XName.Get("InstanceInfo", "xmlns://www.fortifysoftware.com/schema/fvdl"), value);
                    }
                }
                
                /// <summary>
                /// <para>
                /// Occurrence: required
                /// </para>
                /// <para>
                /// Regular expression: (ClassInfo, InstanceInfo, AnalysisInfo)
                /// </para>
                /// </summary>
                public AnalysisInfoLocalType AnalysisInfo {
                    get {
                        XElement x = this.GetElement(XName.Get("AnalysisInfo", "xmlns://www.fortifysoftware.com/schema/fvdl"));
                        return ((AnalysisInfoLocalType)(x));
                    }
                    set {
                        this.SetElement(XName.Get("AnalysisInfo", "xmlns://www.fortifysoftware.com/schema/fvdl"), value);
                    }
                }
                
                [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
                    get {
                        return localElementDictionary;
                    }
                }
                
                [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                XName IXMetaData.SchemaName {
                    get {
                        return XName.Get("Vulnerability", "xmlns://www.fortifysoftware.com/schema/fvdl");
                    }
                }
                
                [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                SchemaOrigin IXMetaData.TypeOrigin {
                    get {
                        return SchemaOrigin.Fragment;
                    }
                }
                
                [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                ILinqToXsdTypeManager IXMetaData.TypeManager {
                    get {
                        return LinqToXsdTypeManager.Instance;
                    }
                }
                
                public override XTypedElement Clone() {
                    return XTypedServices.CloneXTypedElement<VulnerabilityLocalType>(this);
                }
                
                private static void BuildElementDictionary() {
                    localElementDictionary.Add(XName.Get("ClassInfo", "xmlns://www.fortifysoftware.com/schema/fvdl"), typeof(ClassInfoLocalType));
                    localElementDictionary.Add(XName.Get("InstanceInfo", "xmlns://www.fortifysoftware.com/schema/fvdl"), typeof(InstanceInfoLocalType));
                    localElementDictionary.Add(XName.Get("AnalysisInfo", "xmlns://www.fortifysoftware.com/schema/fvdl"), typeof(AnalysisInfoLocalType));
                }
                
                ContentModelEntity IXMetaData.GetContentModel() {
                    return contentModel;
                }
                
                /// <summary>
                /// <para>
                /// Regular expression: (ClassID, Kingdom, Type, Subtype?, AnalyzerName, DefaultSeverity)
                /// </para>
                /// </summary>
                public partial class ClassInfoLocalType : XTypedElement, IXMetaData {
                    
                    [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                    static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();
                    
                    [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                    private static ContentModelEntity contentModel;
                    
         public static explicit operator ClassInfoLocalType(XElement xe) { return XTypedServices.ToXTypedElement<ClassInfoLocalType>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
                    
                    static ClassInfoLocalType() {
                        BuildElementDictionary();
                        contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("ClassID", "xmlns://www.fortifysoftware.com/schema/fvdl")), new NamedContentModelEntity(XName.Get("Kingdom", "xmlns://www.fortifysoftware.com/schema/fvdl")), new NamedContentModelEntity(XName.Get("Type", "xmlns://www.fortifysoftware.com/schema/fvdl")), new NamedContentModelEntity(XName.Get("Subtype", "xmlns://www.fortifysoftware.com/schema/fvdl")), new NamedContentModelEntity(XName.Get("AnalyzerName", "xmlns://www.fortifysoftware.com/schema/fvdl")), new NamedContentModelEntity(XName.Get("DefaultSeverity", "xmlns://www.fortifysoftware.com/schema/fvdl")));
                    }
                    
                    /// <summary>
                    /// <para>
                    /// Regular expression: (ClassID, Kingdom, Type, Subtype?, AnalyzerName, DefaultSeverity)
                    /// </para>
                    /// </summary>
                    public ClassInfoLocalType() {
                    }
                    
                    /// <summary>
                    /// <para>
                    /// Occurrence: required
                    /// </para>
                    /// <para>
                    /// Regular expression: (ClassID, Kingdom, Type, Subtype?, AnalyzerName, DefaultSeverity)
                    /// </para>
                    /// </summary>
                    public string ClassID {
                        get {
                            XElement x = this.GetElement(XName.Get("ClassID", "xmlns://www.fortifysoftware.com/schema/fvdl"));
                            return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
                        }
                        set {
                            this.SetElement(XName.Get("ClassID", "xmlns://www.fortifysoftware.com/schema/fvdl"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
                        }
                    }
                    
                    /// <summary>
                    /// <para>
                    /// Occurrence: required
                    /// </para>
                    /// <para>
                    /// Regular expression: (ClassID, Kingdom, Type, Subtype?, AnalyzerName, DefaultSeverity)
                    /// </para>
                    /// </summary>
                    public string Kingdom {
                        get {
                            XElement x = this.GetElement(XName.Get("Kingdom", "xmlns://www.fortifysoftware.com/schema/fvdl"));
                            return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
                        }
                        set {
                            this.SetElement(XName.Get("Kingdom", "xmlns://www.fortifysoftware.com/schema/fvdl"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
                        }
                    }
                    
                    /// <summary>
                    /// <para>
                    /// Occurrence: required
                    /// </para>
                    /// <para>
                    /// Regular expression: (ClassID, Kingdom, Type, Subtype?, AnalyzerName, DefaultSeverity)
                    /// </para>
                    /// </summary>
                    public string Type {
                        get {
                            XElement x = this.GetElement(XName.Get("Type", "xmlns://www.fortifysoftware.com/schema/fvdl"));
                            return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
                        }
                        set {
                            this.SetElement(XName.Get("Type", "xmlns://www.fortifysoftware.com/schema/fvdl"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
                        }
                    }
                    
                    /// <summary>
                    /// <para>
                    /// Occurrence: optional
                    /// </para>
                    /// <para>
                    /// Regular expression: (ClassID, Kingdom, Type, Subtype?, AnalyzerName, DefaultSeverity)
                    /// </para>
                    /// </summary>
                    public string Subtype {
                        get {
                            XElement x = this.GetElement(XName.Get("Subtype", "xmlns://www.fortifysoftware.com/schema/fvdl"));
                            return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
                        }
                        set {
                            this.SetElement(XName.Get("Subtype", "xmlns://www.fortifysoftware.com/schema/fvdl"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
                        }
                    }
                    
                    /// <summary>
                    /// <para>
                    /// Occurrence: required
                    /// </para>
                    /// <para>
                    /// Regular expression: (ClassID, Kingdom, Type, Subtype?, AnalyzerName, DefaultSeverity)
                    /// </para>
                    /// </summary>
                    public string AnalyzerName {
                        get {
                            XElement x = this.GetElement(XName.Get("AnalyzerName", "xmlns://www.fortifysoftware.com/schema/fvdl"));
                            return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
                        }
                        set {
                            this.SetElement(XName.Get("AnalyzerName", "xmlns://www.fortifysoftware.com/schema/fvdl"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
                        }
                    }
                    
                    /// <summary>
                    /// <para>
                    /// Occurrence: required
                    /// </para>
                    /// <para>
                    /// Regular expression: (ClassID, Kingdom, Type, Subtype?, AnalyzerName, DefaultSeverity)
                    /// </para>
                    /// </summary>
                    public decimal DefaultSeverity {
                        get {
                            XElement x = this.GetElement(XName.Get("DefaultSeverity", "xmlns://www.fortifysoftware.com/schema/fvdl"));
                            return XTypedServices.ParseValue<decimal>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Decimal).Datatype);
                        }
                        set {
                            this.SetElement(XName.Get("DefaultSeverity", "xmlns://www.fortifysoftware.com/schema/fvdl"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Decimal).Datatype);
                        }
                    }
                    
                    [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                    Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
                        get {
                            return localElementDictionary;
                        }
                    }
                    
                    [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                    XName IXMetaData.SchemaName {
                        get {
                            return XName.Get("ClassInfo", "xmlns://www.fortifysoftware.com/schema/fvdl");
                        }
                    }
                    
                    [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                    SchemaOrigin IXMetaData.TypeOrigin {
                        get {
                            return SchemaOrigin.Fragment;
                        }
                    }
                    
                    [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                    ILinqToXsdTypeManager IXMetaData.TypeManager {
                        get {
                            return LinqToXsdTypeManager.Instance;
                        }
                    }
                    
                    public override XTypedElement Clone() {
                        return XTypedServices.CloneXTypedElement<ClassInfoLocalType>(this);
                    }
                    
                    private static void BuildElementDictionary() {
                        localElementDictionary.Add(XName.Get("ClassID", "xmlns://www.fortifysoftware.com/schema/fvdl"), typeof(string));
                        localElementDictionary.Add(XName.Get("Kingdom", "xmlns://www.fortifysoftware.com/schema/fvdl"), typeof(string));
                        localElementDictionary.Add(XName.Get("Type", "xmlns://www.fortifysoftware.com/schema/fvdl"), typeof(string));
                        localElementDictionary.Add(XName.Get("Subtype", "xmlns://www.fortifysoftware.com/schema/fvdl"), typeof(string));
                        localElementDictionary.Add(XName.Get("AnalyzerName", "xmlns://www.fortifysoftware.com/schema/fvdl"), typeof(string));
                        localElementDictionary.Add(XName.Get("DefaultSeverity", "xmlns://www.fortifysoftware.com/schema/fvdl"), typeof(decimal));
                    }
                    
                    ContentModelEntity IXMetaData.GetContentModel() {
                        return contentModel;
                    }
                }
                
                /// <summary>
                /// <para>
                /// Regular expression: (InstanceID, InstanceSeverity, Confidence)
                /// </para>
                /// </summary>
                public partial class InstanceInfoLocalType : XTypedElement, IXMetaData {
                    
                    [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                    static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();
                    
                    [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                    private static ContentModelEntity contentModel;
                    
         public static explicit operator InstanceInfoLocalType(XElement xe) { return XTypedServices.ToXTypedElement<InstanceInfoLocalType>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
                    
                    static InstanceInfoLocalType() {
                        BuildElementDictionary();
                        contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("InstanceID", "xmlns://www.fortifysoftware.com/schema/fvdl")), new NamedContentModelEntity(XName.Get("InstanceSeverity", "xmlns://www.fortifysoftware.com/schema/fvdl")), new NamedContentModelEntity(XName.Get("Confidence", "xmlns://www.fortifysoftware.com/schema/fvdl")));
                    }
                    
                    /// <summary>
                    /// <para>
                    /// Regular expression: (InstanceID, InstanceSeverity, Confidence)
                    /// </para>
                    /// </summary>
                    public InstanceInfoLocalType() {
                    }
                    
                    /// <summary>
                    /// <para>
                    /// Occurrence: required
                    /// </para>
                    /// <para>
                    /// Regular expression: (InstanceID, InstanceSeverity, Confidence)
                    /// </para>
                    /// </summary>
                    public string InstanceID {
                        get {
                            XElement x = this.GetElement(XName.Get("InstanceID", "xmlns://www.fortifysoftware.com/schema/fvdl"));
                            return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
                        }
                        set {
                            this.SetElement(XName.Get("InstanceID", "xmlns://www.fortifysoftware.com/schema/fvdl"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
                        }
                    }
                    
                    /// <summary>
                    /// <para>
                    /// Occurrence: required
                    /// </para>
                    /// <para>
                    /// Regular expression: (InstanceID, InstanceSeverity, Confidence)
                    /// </para>
                    /// </summary>
                    public decimal InstanceSeverity {
                        get {
                            XElement x = this.GetElement(XName.Get("InstanceSeverity", "xmlns://www.fortifysoftware.com/schema/fvdl"));
                            return XTypedServices.ParseValue<decimal>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Decimal).Datatype);
                        }
                        set {
                            this.SetElement(XName.Get("InstanceSeverity", "xmlns://www.fortifysoftware.com/schema/fvdl"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Decimal).Datatype);
                        }
                    }
                    
                    /// <summary>
                    /// <para>
                    /// Occurrence: required
                    /// </para>
                    /// <para>
                    /// Regular expression: (InstanceID, InstanceSeverity, Confidence)
                    /// </para>
                    /// </summary>
                    public decimal Confidence {
                        get {
                            XElement x = this.GetElement(XName.Get("Confidence", "xmlns://www.fortifysoftware.com/schema/fvdl"));
                            return XTypedServices.ParseValue<decimal>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Decimal).Datatype);
                        }
                        set {
                            this.SetElement(XName.Get("Confidence", "xmlns://www.fortifysoftware.com/schema/fvdl"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Decimal).Datatype);
                        }
                    }
                    
                    [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                    Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
                        get {
                            return localElementDictionary;
                        }
                    }
                    
                    [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                    XName IXMetaData.SchemaName {
                        get {
                            return XName.Get("InstanceInfo", "xmlns://www.fortifysoftware.com/schema/fvdl");
                        }
                    }
                    
                    [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                    SchemaOrigin IXMetaData.TypeOrigin {
                        get {
                            return SchemaOrigin.Fragment;
                        }
                    }
                    
                    [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                    ILinqToXsdTypeManager IXMetaData.TypeManager {
                        get {
                            return LinqToXsdTypeManager.Instance;
                        }
                    }
                    
                    public override XTypedElement Clone() {
                        return XTypedServices.CloneXTypedElement<InstanceInfoLocalType>(this);
                    }
                    
                    private static void BuildElementDictionary() {
                        localElementDictionary.Add(XName.Get("InstanceID", "xmlns://www.fortifysoftware.com/schema/fvdl"), typeof(string));
                        localElementDictionary.Add(XName.Get("InstanceSeverity", "xmlns://www.fortifysoftware.com/schema/fvdl"), typeof(decimal));
                        localElementDictionary.Add(XName.Get("Confidence", "xmlns://www.fortifysoftware.com/schema/fvdl"), typeof(decimal));
                    }
                    
                    ContentModelEntity IXMetaData.GetContentModel() {
                        return contentModel;
                    }
                }
                
                /// <summary>
                /// <para>
                /// Regular expression: (Unified)
                /// </para>
                /// </summary>
                public partial class AnalysisInfoLocalType : XTypedElement, IXMetaData {
                    
                    [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                    static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();
                    
                    [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                    private static ContentModelEntity contentModel;
                    
         public static explicit operator AnalysisInfoLocalType(XElement xe) { return XTypedServices.ToXTypedElement<AnalysisInfoLocalType>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
                    
                    static AnalysisInfoLocalType() {
                        BuildElementDictionary();
                        contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("Unified", "xmlns://www.fortifysoftware.com/schema/fvdl")));
                    }
                    
                    /// <summary>
                    /// <para>
                    /// Regular expression: (Unified)
                    /// </para>
                    /// </summary>
                    public AnalysisInfoLocalType() {
                    }
                    
                    /// <summary>
                    /// <para>
                    /// Occurrence: required
                    /// </para>
                    /// <para>
                    /// Regular expression: (Unified)
                    /// </para>
                    /// </summary>
                    public UnifiedLocalType Unified {
                        get {
                            XElement x = this.GetElement(XName.Get("Unified", "xmlns://www.fortifysoftware.com/schema/fvdl"));
                            return ((UnifiedLocalType)(x));
                        }
                        set {
                            this.SetElement(XName.Get("Unified", "xmlns://www.fortifysoftware.com/schema/fvdl"), value);
                        }
                    }
                    
                    [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                    Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
                        get {
                            return localElementDictionary;
                        }
                    }
                    
                    [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                    XName IXMetaData.SchemaName {
                        get {
                            return XName.Get("AnalysisInfo", "xmlns://www.fortifysoftware.com/schema/fvdl");
                        }
                    }
                    
                    [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                    SchemaOrigin IXMetaData.TypeOrigin {
                        get {
                            return SchemaOrigin.Fragment;
                        }
                    }
                    
                    [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                    ILinqToXsdTypeManager IXMetaData.TypeManager {
                        get {
                            return LinqToXsdTypeManager.Instance;
                        }
                    }
                    
                    public override XTypedElement Clone() {
                        return XTypedServices.CloneXTypedElement<AnalysisInfoLocalType>(this);
                    }
                    
                    private static void BuildElementDictionary() {
                        localElementDictionary.Add(XName.Get("Unified", "xmlns://www.fortifysoftware.com/schema/fvdl"), typeof(UnifiedLocalType));
                    }
                    
                    ContentModelEntity IXMetaData.GetContentModel() {
                        return contentModel;
                    }
                    
                    /// <summary>
                    /// <para>
                    /// Regular expression: (Context, ReplacementDefinitions, Trace+)
                    /// </para>
                    /// </summary>
                    public partial class UnifiedLocalType : XTypedElement, IXMetaData {
                        
                        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                        private XTypedList<TraceLocalType> TraceField;
                        
                        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                        static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();
                        
                        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                        private static ContentModelEntity contentModel;
                        
         public static explicit operator UnifiedLocalType(XElement xe) { return XTypedServices.ToXTypedElement<UnifiedLocalType>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
                        
                        static UnifiedLocalType() {
                            BuildElementDictionary();
                            contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("Context", "xmlns://www.fortifysoftware.com/schema/fvdl")), new NamedContentModelEntity(XName.Get("ReplacementDefinitions", "xmlns://www.fortifysoftware.com/schema/fvdl")), new NamedContentModelEntity(XName.Get("Trace", "xmlns://www.fortifysoftware.com/schema/fvdl")));
                        }
                        
                        /// <summary>
                        /// <para>
                        /// Regular expression: (Context, ReplacementDefinitions, Trace+)
                        /// </para>
                        /// </summary>
                        public UnifiedLocalType() {
                        }
                        
                        /// <summary>
                        /// <para>
                        /// Occurrence: required
                        /// </para>
                        /// <para>
                        /// Regular expression: (Context, ReplacementDefinitions, Trace+)
                        /// </para>
                        /// </summary>
                        public ContextLocalType Context {
                            get {
                                XElement x = this.GetElement(XName.Get("Context", "xmlns://www.fortifysoftware.com/schema/fvdl"));
                                return ((ContextLocalType)(x));
                            }
                            set {
                                this.SetElement(XName.Get("Context", "xmlns://www.fortifysoftware.com/schema/fvdl"), value);
                            }
                        }
                        
                        /// <summary>
                        /// <para>
                        /// Occurrence: required
                        /// </para>
                        /// <para>
                        /// Regular expression: (Context, ReplacementDefinitions, Trace+)
                        /// </para>
                        /// </summary>
                        public ReplacementDefinitionsLocalType ReplacementDefinitions {
                            get {
                                XElement x = this.GetElement(XName.Get("ReplacementDefinitions", "xmlns://www.fortifysoftware.com/schema/fvdl"));
                                return ((ReplacementDefinitionsLocalType)(x));
                            }
                            set {
                                this.SetElement(XName.Get("ReplacementDefinitions", "xmlns://www.fortifysoftware.com/schema/fvdl"), value);
                            }
                        }
                        
                        /// <summary>
                        /// <para>
                        /// Occurrence: required, repeating
                        /// </para>
                        /// <para>
                        /// Regular expression: (Context, ReplacementDefinitions, Trace+)
                        /// </para>
                        /// </summary>
                        public IList<xmlns.www.fortifysoftware.com.schema.fvdl.FVDL.VulnerabilitiesLocalType.VulnerabilityLocalType.AnalysisInfoLocalType.UnifiedLocalType.TraceLocalType> Trace {
                            get {
                                if ((this.TraceField == null)) {
                                    this.TraceField = new XTypedList<TraceLocalType>(this, LinqToXsdTypeManager.Instance, XName.Get("Trace", "xmlns://www.fortifysoftware.com/schema/fvdl"));
                                }
                                return this.TraceField;
                            }
                            set {
                                if ((value == null)) {
                                    this.TraceField = null;
                                }
                                else {
                                    if ((this.TraceField == null)) {
                                        this.TraceField = XTypedList<TraceLocalType>.Initialize(this, LinqToXsdTypeManager.Instance, value, XName.Get("Trace", "xmlns://www.fortifysoftware.com/schema/fvdl"));
                                    }
                                    else {
                                        XTypedServices.SetList<TraceLocalType>(this.TraceField, value);
                                    }
                                }
                            }
                        }
                        
                        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
                            get {
                                return localElementDictionary;
                            }
                        }
                        
                        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                        XName IXMetaData.SchemaName {
                            get {
                                return XName.Get("Unified", "xmlns://www.fortifysoftware.com/schema/fvdl");
                            }
                        }
                        
                        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                        SchemaOrigin IXMetaData.TypeOrigin {
                            get {
                                return SchemaOrigin.Fragment;
                            }
                        }
                        
                        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                        ILinqToXsdTypeManager IXMetaData.TypeManager {
                            get {
                                return LinqToXsdTypeManager.Instance;
                            }
                        }
                        
                        public override XTypedElement Clone() {
                            return XTypedServices.CloneXTypedElement<UnifiedLocalType>(this);
                        }
                        
                        private static void BuildElementDictionary() {
                            localElementDictionary.Add(XName.Get("Context", "xmlns://www.fortifysoftware.com/schema/fvdl"), typeof(ContextLocalType));
                            localElementDictionary.Add(XName.Get("ReplacementDefinitions", "xmlns://www.fortifysoftware.com/schema/fvdl"), typeof(ReplacementDefinitionsLocalType));
                            localElementDictionary.Add(XName.Get("Trace", "xmlns://www.fortifysoftware.com/schema/fvdl"), typeof(TraceLocalType));
                        }
                        
                        ContentModelEntity IXMetaData.GetContentModel() {
                            return contentModel;
                        }
                        
                        /// <summary>
                        /// <para>
                        /// Regular expression: (Function, FunctionDeclarationSourceLocation)
                        /// </para>
                        /// </summary>
                        public partial class ContextLocalType : XTypedElement, IXMetaData {
                            
                            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                            static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();
                            
                            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                            private static ContentModelEntity contentModel;
                            
         public static explicit operator ContextLocalType(XElement xe) { return XTypedServices.ToXTypedElement<ContextLocalType>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
                            
                            static ContextLocalType() {
                                BuildElementDictionary();
                                contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("Function", "xmlns://www.fortifysoftware.com/schema/fvdl")), new NamedContentModelEntity(XName.Get("FunctionDeclarationSourceLocation", "xmlns://www.fortifysoftware.com/schema/fvdl")));
                            }
                            
                            /// <summary>
                            /// <para>
                            /// Regular expression: (Function, FunctionDeclarationSourceLocation)
                            /// </para>
                            /// </summary>
                            public ContextLocalType() {
                            }
                            
                            /// <summary>
                            /// <para>
                            /// Occurrence: required
                            /// </para>
                            /// <para>
                            /// Regular expression: (Function, FunctionDeclarationSourceLocation)
                            /// </para>
                            /// </summary>
                            public FunctionLocalType Function {
                                get {
                                    XElement x = this.GetElement(XName.Get("Function", "xmlns://www.fortifysoftware.com/schema/fvdl"));
                                    return ((FunctionLocalType)(x));
                                }
                                set {
                                    this.SetElement(XName.Get("Function", "xmlns://www.fortifysoftware.com/schema/fvdl"), value);
                                }
                            }
                            
                            /// <summary>
                            /// <para>
                            /// Occurrence: required
                            /// </para>
                            /// <para>
                            /// Regular expression: (Function, FunctionDeclarationSourceLocation)
                            /// </para>
                            /// </summary>
                            public FunctionDeclarationSourceLocationLocalType FunctionDeclarationSourceLocation {
                                get {
                                    XElement x = this.GetElement(XName.Get("FunctionDeclarationSourceLocation", "xmlns://www.fortifysoftware.com/schema/fvdl"));
                                    return ((FunctionDeclarationSourceLocationLocalType)(x));
                                }
                                set {
                                    this.SetElement(XName.Get("FunctionDeclarationSourceLocation", "xmlns://www.fortifysoftware.com/schema/fvdl"), value);
                                }
                            }
                            
                            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                            Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
                                get {
                                    return localElementDictionary;
                                }
                            }
                            
                            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                            XName IXMetaData.SchemaName {
                                get {
                                    return XName.Get("Context", "xmlns://www.fortifysoftware.com/schema/fvdl");
                                }
                            }
                            
                            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                            SchemaOrigin IXMetaData.TypeOrigin {
                                get {
                                    return SchemaOrigin.Fragment;
                                }
                            }
                            
                            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                            ILinqToXsdTypeManager IXMetaData.TypeManager {
                                get {
                                    return LinqToXsdTypeManager.Instance;
                                }
                            }
                            
                            public override XTypedElement Clone() {
                                return XTypedServices.CloneXTypedElement<ContextLocalType>(this);
                            }
                            
                            private static void BuildElementDictionary() {
                                localElementDictionary.Add(XName.Get("Function", "xmlns://www.fortifysoftware.com/schema/fvdl"), typeof(FunctionLocalType));
                                localElementDictionary.Add(XName.Get("FunctionDeclarationSourceLocation", "xmlns://www.fortifysoftware.com/schema/fvdl"), typeof(FunctionDeclarationSourceLocationLocalType));
                            }
                            
                            ContentModelEntity IXMetaData.GetContentModel() {
                                return contentModel;
                            }
                            
                            public partial class FunctionLocalType : XTypedElement, IXMetaData {
                                
         public static explicit operator FunctionLocalType(XElement xe) { return XTypedServices.ToXTypedElement<FunctionLocalType>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
                                
                                public FunctionLocalType() {
                                }
                                
                                /// <summary>
                                /// <para>
                                /// Occurrence: required
                                /// </para>
                                /// </summary>
                                public string name {
                                    get {
                                        XAttribute x = this.Attribute(XName.Get("name", ""));
                                        return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
                                    }
                                    set {
                                        this.SetAttribute(XName.Get("name", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
                                    }
                                }
                                
                                [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                                XName IXMetaData.SchemaName {
                                    get {
                                        return XName.Get("Function", "xmlns://www.fortifysoftware.com/schema/fvdl");
                                    }
                                }
                                
                                [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                                SchemaOrigin IXMetaData.TypeOrigin {
                                    get {
                                        return SchemaOrigin.Fragment;
                                    }
                                }
                                
                                [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                                ILinqToXsdTypeManager IXMetaData.TypeManager {
                                    get {
                                        return LinqToXsdTypeManager.Instance;
                                    }
                                }
                                
                                public override XTypedElement Clone() {
                                    return XTypedServices.CloneXTypedElement<FunctionLocalType>(this);
                                }
                                
                                ContentModelEntity IXMetaData.GetContentModel() {
                                    return ContentModelEntity.Default;
                                }
                            }
                            
                            public partial class FunctionDeclarationSourceLocationLocalType : XTypedElement, IXMetaData {
                                
         public static explicit operator FunctionDeclarationSourceLocationLocalType(XElement xe) { return XTypedServices.ToXTypedElement<FunctionDeclarationSourceLocationLocalType>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
                                
                                public FunctionDeclarationSourceLocationLocalType() {
                                }
                                
                                /// <summary>
                                /// <para>
                                /// Occurrence: required
                                /// </para>
                                /// </summary>
                                public string path {
                                    get {
                                        XAttribute x = this.Attribute(XName.Get("path", ""));
                                        return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
                                    }
                                    set {
                                        this.SetAttribute(XName.Get("path", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
                                    }
                                }
                                
                                /// <summary>
                                /// <para>
                                /// Occurrence: required
                                /// </para>
                                /// </summary>
                                public uint line {
                                    get {
                                        XAttribute x = this.Attribute(XName.Get("line", ""));
                                        return XTypedServices.ParseValue<uint>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.UnsignedInt).Datatype);
                                    }
                                    set {
                                        this.SetAttribute(XName.Get("line", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.UnsignedInt).Datatype);
                                    }
                                }
                                
                                /// <summary>
                                /// <para>
                                /// Occurrence: required
                                /// </para>
                                /// </summary>
                                public uint lineEnd {
                                    get {
                                        XAttribute x = this.Attribute(XName.Get("lineEnd", ""));
                                        return XTypedServices.ParseValue<uint>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.UnsignedInt).Datatype);
                                    }
                                    set {
                                        this.SetAttribute(XName.Get("lineEnd", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.UnsignedInt).Datatype);
                                    }
                                }
                                
                                /// <summary>
                                /// <para>
                                /// Occurrence: required
                                /// </para>
                                /// </summary>
                                public uint colStart {
                                    get {
                                        XAttribute x = this.Attribute(XName.Get("colStart", ""));
                                        return XTypedServices.ParseValue<uint>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.UnsignedInt).Datatype);
                                    }
                                    set {
                                        this.SetAttribute(XName.Get("colStart", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.UnsignedInt).Datatype);
                                    }
                                }
                                
                                /// <summary>
                                /// <para>
                                /// Occurrence: required
                                /// </para>
                                /// </summary>
                                public uint colEnd {
                                    get {
                                        XAttribute x = this.Attribute(XName.Get("colEnd", ""));
                                        return XTypedServices.ParseValue<uint>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.UnsignedInt).Datatype);
                                    }
                                    set {
                                        this.SetAttribute(XName.Get("colEnd", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.UnsignedInt).Datatype);
                                    }
                                }
                                
                                [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                                XName IXMetaData.SchemaName {
                                    get {
                                        return XName.Get("FunctionDeclarationSourceLocation", "xmlns://www.fortifysoftware.com/schema/fvdl");
                                    }
                                }
                                
                                [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                                SchemaOrigin IXMetaData.TypeOrigin {
                                    get {
                                        return SchemaOrigin.Fragment;
                                    }
                                }
                                
                                [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                                ILinqToXsdTypeManager IXMetaData.TypeManager {
                                    get {
                                        return LinqToXsdTypeManager.Instance;
                                    }
                                }
                                
                                public override XTypedElement Clone() {
                                    return XTypedServices.CloneXTypedElement<FunctionDeclarationSourceLocationLocalType>(this);
                                }
                                
                                ContentModelEntity IXMetaData.GetContentModel() {
                                    return ContentModelEntity.Default;
                                }
                            }
                        }
                        
                        /// <summary>
                        /// <para>
                        /// Regular expression: (Def+, LocationDef*)
                        /// </para>
                        /// </summary>
                        public partial class ReplacementDefinitionsLocalType : XTypedElement, IXMetaData {
                            
                            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                            private XTypedList<DefLocalType> DefField;
                            
                            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                            private XTypedList<LocationDefLocalType> LocationDefField;
                            
                            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                            static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();
                            
                            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                            private static ContentModelEntity contentModel;
                            
         public static explicit operator ReplacementDefinitionsLocalType(XElement xe) { return XTypedServices.ToXTypedElement<ReplacementDefinitionsLocalType>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
                            
                            static ReplacementDefinitionsLocalType() {
                                BuildElementDictionary();
                                contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("Def", "xmlns://www.fortifysoftware.com/schema/fvdl")), new NamedContentModelEntity(XName.Get("LocationDef", "xmlns://www.fortifysoftware.com/schema/fvdl")));
                            }
                            
                            /// <summary>
                            /// <para>
                            /// Regular expression: (Def+, LocationDef*)
                            /// </para>
                            /// </summary>
                            public ReplacementDefinitionsLocalType() {
                            }
                            
                            /// <summary>
                            /// <para>
                            /// Occurrence: required, repeating
                            /// </para>
                            /// <para>
                            /// Regular expression: (Def+, LocationDef*)
                            /// </para>
                            /// </summary>
                            public IList<xmlns.www.fortifysoftware.com.schema.fvdl.FVDL.VulnerabilitiesLocalType.VulnerabilityLocalType.AnalysisInfoLocalType.UnifiedLocalType.ReplacementDefinitionsLocalType.DefLocalType> Def {
                                get {
                                    if ((this.DefField == null)) {
                                        this.DefField = new XTypedList<DefLocalType>(this, LinqToXsdTypeManager.Instance, XName.Get("Def", "xmlns://www.fortifysoftware.com/schema/fvdl"));
                                    }
                                    return this.DefField;
                                }
                                set {
                                    if ((value == null)) {
                                        this.DefField = null;
                                    }
                                    else {
                                        if ((this.DefField == null)) {
                                            this.DefField = XTypedList<DefLocalType>.Initialize(this, LinqToXsdTypeManager.Instance, value, XName.Get("Def", "xmlns://www.fortifysoftware.com/schema/fvdl"));
                                        }
                                        else {
                                            XTypedServices.SetList<DefLocalType>(this.DefField, value);
                                        }
                                    }
                                }
                            }
                            
                            /// <summary>
                            /// <para>
                            /// Occurrence: optional, repeating
                            /// </para>
                            /// <para>
                            /// Regular expression: (Def+, LocationDef*)
                            /// </para>
                            /// </summary>
                            public IList<xmlns.www.fortifysoftware.com.schema.fvdl.FVDL.VulnerabilitiesLocalType.VulnerabilityLocalType.AnalysisInfoLocalType.UnifiedLocalType.ReplacementDefinitionsLocalType.LocationDefLocalType> LocationDef {
                                get {
                                    if ((this.LocationDefField == null)) {
                                        this.LocationDefField = new XTypedList<LocationDefLocalType>(this, LinqToXsdTypeManager.Instance, XName.Get("LocationDef", "xmlns://www.fortifysoftware.com/schema/fvdl"));
                                    }
                                    return this.LocationDefField;
                                }
                                set {
                                    if ((value == null)) {
                                        this.LocationDefField = null;
                                    }
                                    else {
                                        if ((this.LocationDefField == null)) {
                                            this.LocationDefField = XTypedList<LocationDefLocalType>.Initialize(this, LinqToXsdTypeManager.Instance, value, XName.Get("LocationDef", "xmlns://www.fortifysoftware.com/schema/fvdl"));
                                        }
                                        else {
                                            XTypedServices.SetList<LocationDefLocalType>(this.LocationDefField, value);
                                        }
                                    }
                                }
                            }
                            
                            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                            Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
                                get {
                                    return localElementDictionary;
                                }
                            }
                            
                            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                            XName IXMetaData.SchemaName {
                                get {
                                    return XName.Get("ReplacementDefinitions", "xmlns://www.fortifysoftware.com/schema/fvdl");
                                }
                            }
                            
                            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                            SchemaOrigin IXMetaData.TypeOrigin {
                                get {
                                    return SchemaOrigin.Fragment;
                                }
                            }
                            
                            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                            ILinqToXsdTypeManager IXMetaData.TypeManager {
                                get {
                                    return LinqToXsdTypeManager.Instance;
                                }
                            }
                            
                            public override XTypedElement Clone() {
                                return XTypedServices.CloneXTypedElement<ReplacementDefinitionsLocalType>(this);
                            }
                            
                            private static void BuildElementDictionary() {
                                localElementDictionary.Add(XName.Get("Def", "xmlns://www.fortifysoftware.com/schema/fvdl"), typeof(DefLocalType));
                                localElementDictionary.Add(XName.Get("LocationDef", "xmlns://www.fortifysoftware.com/schema/fvdl"), typeof(LocationDefLocalType));
                            }
                            
                            ContentModelEntity IXMetaData.GetContentModel() {
                                return contentModel;
                            }
                            
                            /// <summary>
                            /// <para>
                            /// Regular expression: (SourceLocation)?
                            /// </para>
                            /// </summary>
                            public partial class DefLocalType : XTypedElement, IXMetaData {
                                
                                [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                                static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();
                                
                                [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                                private static ContentModelEntity contentModel;
                                
         public static explicit operator DefLocalType(XElement xe) { return XTypedServices.ToXTypedElement<DefLocalType>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
                                
                                static DefLocalType() {
                                    BuildElementDictionary();
                                    contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("SourceLocation", "xmlns://www.fortifysoftware.com/schema/fvdl")));
                                }
                                
                                /// <summary>
                                /// <para>
                                /// Regular expression: (SourceLocation)?
                                /// </para>
                                /// </summary>
                                public DefLocalType() {
                                }
                                
                                /// <summary>
                                /// <para>
                                /// Occurrence: required
                                /// </para>
                                /// <para>
                                /// Regular expression: (SourceLocation)?
                                /// </para>
                                /// </summary>
                                public SourceLocationLocalType SourceLocation {
                                    get {
                                        XElement x = this.GetElement(XName.Get("SourceLocation", "xmlns://www.fortifysoftware.com/schema/fvdl"));
                                        return ((SourceLocationLocalType)(x));
                                    }
                                    set {
                                        this.SetElement(XName.Get("SourceLocation", "xmlns://www.fortifysoftware.com/schema/fvdl"), value);
                                    }
                                }
                                
                                /// <summary>
                                /// <para>
                                /// Occurrence: required
                                /// </para>
                                /// </summary>
                                public string key {
                                    get {
                                        XAttribute x = this.Attribute(XName.Get("key", ""));
                                        return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
                                    }
                                    set {
                                        this.SetAttribute(XName.Get("key", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
                                    }
                                }
                                
                                /// <summary>
                                /// <para>
                                /// Occurrence: required
                                /// </para>
                                /// </summary>
                                public string value {
                                    get {
                                        XAttribute x = this.Attribute(XName.Get("value", ""));
                                        return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
                                    }
                                    set {
                                        this.SetAttribute(XName.Get("value", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
                                    }
                                }
                                
                                [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                                Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
                                    get {
                                        return localElementDictionary;
                                    }
                                }
                                
                                [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                                XName IXMetaData.SchemaName {
                                    get {
                                        return XName.Get("Def", "xmlns://www.fortifysoftware.com/schema/fvdl");
                                    }
                                }
                                
                                [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                                SchemaOrigin IXMetaData.TypeOrigin {
                                    get {
                                        return SchemaOrigin.Fragment;
                                    }
                                }
                                
                                [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                                ILinqToXsdTypeManager IXMetaData.TypeManager {
                                    get {
                                        return LinqToXsdTypeManager.Instance;
                                    }
                                }
                                
                                public override XTypedElement Clone() {
                                    return XTypedServices.CloneXTypedElement<DefLocalType>(this);
                                }
                                
                                private static void BuildElementDictionary() {
                                    localElementDictionary.Add(XName.Get("SourceLocation", "xmlns://www.fortifysoftware.com/schema/fvdl"), typeof(SourceLocationLocalType));
                                }
                                
                                ContentModelEntity IXMetaData.GetContentModel() {
                                    return contentModel;
                                }
                                
                                public partial class SourceLocationLocalType : XTypedElement, IXMetaData {
                                    
         public static explicit operator SourceLocationLocalType(XElement xe) { return XTypedServices.ToXTypedElement<SourceLocationLocalType>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
                                    
                                    public SourceLocationLocalType() {
                                    }
                                    
                                    /// <summary>
                                    /// <para>
                                    /// Occurrence: required
                                    /// </para>
                                    /// </summary>
                                    public string path {
                                        get {
                                            XAttribute x = this.Attribute(XName.Get("path", ""));
                                            return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
                                        }
                                        set {
                                            this.SetAttribute(XName.Get("path", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
                                        }
                                    }
                                    
                                    /// <summary>
                                    /// <para>
                                    /// Occurrence: required
                                    /// </para>
                                    /// </summary>
                                    public uint line {
                                        get {
                                            XAttribute x = this.Attribute(XName.Get("line", ""));
                                            return XTypedServices.ParseValue<uint>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.UnsignedInt).Datatype);
                                        }
                                        set {
                                            this.SetAttribute(XName.Get("line", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.UnsignedInt).Datatype);
                                        }
                                    }
                                    
                                    /// <summary>
                                    /// <para>
                                    /// Occurrence: required
                                    /// </para>
                                    /// </summary>
                                    public uint lineEnd {
                                        get {
                                            XAttribute x = this.Attribute(XName.Get("lineEnd", ""));
                                            return XTypedServices.ParseValue<uint>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.UnsignedInt).Datatype);
                                        }
                                        set {
                                            this.SetAttribute(XName.Get("lineEnd", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.UnsignedInt).Datatype);
                                        }
                                    }
                                    
                                    /// <summary>
                                    /// <para>
                                    /// Occurrence: required
                                    /// </para>
                                    /// </summary>
                                    public uint colStart {
                                        get {
                                            XAttribute x = this.Attribute(XName.Get("colStart", ""));
                                            return XTypedServices.ParseValue<uint>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.UnsignedInt).Datatype);
                                        }
                                        set {
                                            this.SetAttribute(XName.Get("colStart", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.UnsignedInt).Datatype);
                                        }
                                    }
                                    
                                    /// <summary>
                                    /// <para>
                                    /// Occurrence: required
                                    /// </para>
                                    /// </summary>
                                    public uint colEnd {
                                        get {
                                            XAttribute x = this.Attribute(XName.Get("colEnd", ""));
                                            return XTypedServices.ParseValue<uint>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.UnsignedInt).Datatype);
                                        }
                                        set {
                                            this.SetAttribute(XName.Get("colEnd", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.UnsignedInt).Datatype);
                                        }
                                    }
                                    
                                    [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                                    XName IXMetaData.SchemaName {
                                        get {
                                            return XName.Get("SourceLocation", "xmlns://www.fortifysoftware.com/schema/fvdl");
                                        }
                                    }
                                    
                                    [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                                    SchemaOrigin IXMetaData.TypeOrigin {
                                        get {
                                            return SchemaOrigin.Fragment;
                                        }
                                    }
                                    
                                    [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                                    ILinqToXsdTypeManager IXMetaData.TypeManager {
                                        get {
                                            return LinqToXsdTypeManager.Instance;
                                        }
                                    }
                                    
                                    public override XTypedElement Clone() {
                                        return XTypedServices.CloneXTypedElement<SourceLocationLocalType>(this);
                                    }
                                    
                                    ContentModelEntity IXMetaData.GetContentModel() {
                                        return ContentModelEntity.Default;
                                    }
                                }
                            }
                            
                            public partial class LocationDefLocalType : XTypedElement, IXMetaData {
                                
         public static explicit operator LocationDefLocalType(XElement xe) { return XTypedServices.ToXTypedElement<LocationDefLocalType>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
                                
                                public LocationDefLocalType() {
                                }
                                
                                /// <summary>
                                /// <para>
                                /// Occurrence: required
                                /// </para>
                                /// </summary>
                                public string path {
                                    get {
                                        XAttribute x = this.Attribute(XName.Get("path", ""));
                                        return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
                                    }
                                    set {
                                        this.SetAttribute(XName.Get("path", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
                                    }
                                }
                                
                                /// <summary>
                                /// <para>
                                /// Occurrence: required
                                /// </para>
                                /// </summary>
                                public uint line {
                                    get {
                                        XAttribute x = this.Attribute(XName.Get("line", ""));
                                        return XTypedServices.ParseValue<uint>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.UnsignedInt).Datatype);
                                    }
                                    set {
                                        this.SetAttribute(XName.Get("line", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.UnsignedInt).Datatype);
                                    }
                                }
                                
                                /// <summary>
                                /// <para>
                                /// Occurrence: required
                                /// </para>
                                /// </summary>
                                public uint lineEnd {
                                    get {
                                        XAttribute x = this.Attribute(XName.Get("lineEnd", ""));
                                        return XTypedServices.ParseValue<uint>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.UnsignedInt).Datatype);
                                    }
                                    set {
                                        this.SetAttribute(XName.Get("lineEnd", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.UnsignedInt).Datatype);
                                    }
                                }
                                
                                /// <summary>
                                /// <para>
                                /// Occurrence: required
                                /// </para>
                                /// </summary>
                                public uint colStart {
                                    get {
                                        XAttribute x = this.Attribute(XName.Get("colStart", ""));
                                        return XTypedServices.ParseValue<uint>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.UnsignedInt).Datatype);
                                    }
                                    set {
                                        this.SetAttribute(XName.Get("colStart", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.UnsignedInt).Datatype);
                                    }
                                }
                                
                                /// <summary>
                                /// <para>
                                /// Occurrence: required
                                /// </para>
                                /// </summary>
                                public uint colEnd {
                                    get {
                                        XAttribute x = this.Attribute(XName.Get("colEnd", ""));
                                        return XTypedServices.ParseValue<uint>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.UnsignedInt).Datatype);
                                    }
                                    set {
                                        this.SetAttribute(XName.Get("colEnd", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.UnsignedInt).Datatype);
                                    }
                                }
                                
                                /// <summary>
                                /// <para>
                                /// Occurrence: required
                                /// </para>
                                /// </summary>
                                public string key {
                                    get {
                                        XAttribute x = this.Attribute(XName.Get("key", ""));
                                        return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
                                    }
                                    set {
                                        this.SetAttribute(XName.Get("key", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
                                    }
                                }
                                
                                [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                                XName IXMetaData.SchemaName {
                                    get {
                                        return XName.Get("LocationDef", "xmlns://www.fortifysoftware.com/schema/fvdl");
                                    }
                                }
                                
                                [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                                SchemaOrigin IXMetaData.TypeOrigin {
                                    get {
                                        return SchemaOrigin.Fragment;
                                    }
                                }
                                
                                [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                                ILinqToXsdTypeManager IXMetaData.TypeManager {
                                    get {
                                        return LinqToXsdTypeManager.Instance;
                                    }
                                }
                                
                                public override XTypedElement Clone() {
                                    return XTypedServices.CloneXTypedElement<LocationDefLocalType>(this);
                                }
                                
                                ContentModelEntity IXMetaData.GetContentModel() {
                                    return ContentModelEntity.Default;
                                }
                            }
                        }
                        
                        /// <summary>
                        /// <para>
                        /// Regular expression: (Primary)
                        /// </para>
                        /// </summary>
                        public partial class TraceLocalType : XTypedElement, IXMetaData {
                            
                            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                            static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();
                            
                            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                            private static ContentModelEntity contentModel;
                            
         public static explicit operator TraceLocalType(XElement xe) { return XTypedServices.ToXTypedElement<TraceLocalType>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
                            
                            static TraceLocalType() {
                                BuildElementDictionary();
                                contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("Primary", "xmlns://www.fortifysoftware.com/schema/fvdl")));
                            }
                            
                            /// <summary>
                            /// <para>
                            /// Regular expression: (Primary)
                            /// </para>
                            /// </summary>
                            public TraceLocalType() {
                            }
                            
                            /// <summary>
                            /// <para>
                            /// Occurrence: required
                            /// </para>
                            /// <para>
                            /// Regular expression: (Primary)
                            /// </para>
                            /// </summary>
                            public PrimaryLocalType Primary {
                                get {
                                    XElement x = this.GetElement(XName.Get("Primary", "xmlns://www.fortifysoftware.com/schema/fvdl"));
                                    return ((PrimaryLocalType)(x));
                                }
                                set {
                                    this.SetElement(XName.Get("Primary", "xmlns://www.fortifysoftware.com/schema/fvdl"), value);
                                }
                            }
                            
                            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                            Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
                                get {
                                    return localElementDictionary;
                                }
                            }
                            
                            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                            XName IXMetaData.SchemaName {
                                get {
                                    return XName.Get("Trace", "xmlns://www.fortifysoftware.com/schema/fvdl");
                                }
                            }
                            
                            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                            SchemaOrigin IXMetaData.TypeOrigin {
                                get {
                                    return SchemaOrigin.Fragment;
                                }
                            }
                            
                            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                            ILinqToXsdTypeManager IXMetaData.TypeManager {
                                get {
                                    return LinqToXsdTypeManager.Instance;
                                }
                            }
                            
                            public override XTypedElement Clone() {
                                return XTypedServices.CloneXTypedElement<TraceLocalType>(this);
                            }
                            
                            private static void BuildElementDictionary() {
                                localElementDictionary.Add(XName.Get("Primary", "xmlns://www.fortifysoftware.com/schema/fvdl"), typeof(PrimaryLocalType));
                            }
                            
                            ContentModelEntity IXMetaData.GetContentModel() {
                                return contentModel;
                            }
                            
                            /// <summary>
                            /// <para>
                            /// Regular expression: (Entry+)
                            /// </para>
                            /// </summary>
                            public partial class PrimaryLocalType : XTypedElement, IXMetaData {
                                
                                [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                                private XTypedList<EntryLocalType> EntryField;
                                
                                [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                                static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();
                                
                                [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                                private static ContentModelEntity contentModel;
                                
         public static explicit operator PrimaryLocalType(XElement xe) { return XTypedServices.ToXTypedElement<PrimaryLocalType>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
                                
                                static PrimaryLocalType() {
                                    BuildElementDictionary();
                                    contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("Entry", "xmlns://www.fortifysoftware.com/schema/fvdl")));
                                }
                                
                                /// <summary>
                                /// <para>
                                /// Regular expression: (Entry+)
                                /// </para>
                                /// </summary>
                                public PrimaryLocalType() {
                                }
                                
                                /// <summary>
                                /// <para>
                                /// Occurrence: required, repeating
                                /// </para>
                                /// <para>
                                /// Regular expression: (Entry+)
                                /// </para>
                                /// </summary>
                                public IList<xmlns.www.fortifysoftware.com.schema.fvdl.FVDL.VulnerabilitiesLocalType.VulnerabilityLocalType.AnalysisInfoLocalType.UnifiedLocalType.TraceLocalType.PrimaryLocalType.EntryLocalType> Entry {
                                    get {
                                        if ((this.EntryField == null)) {
                                            this.EntryField = new XTypedList<EntryLocalType>(this, LinqToXsdTypeManager.Instance, XName.Get("Entry", "xmlns://www.fortifysoftware.com/schema/fvdl"));
                                        }
                                        return this.EntryField;
                                    }
                                    set {
                                        if ((value == null)) {
                                            this.EntryField = null;
                                        }
                                        else {
                                            if ((this.EntryField == null)) {
                                                this.EntryField = XTypedList<EntryLocalType>.Initialize(this, LinqToXsdTypeManager.Instance, value, XName.Get("Entry", "xmlns://www.fortifysoftware.com/schema/fvdl"));
                                            }
                                            else {
                                                XTypedServices.SetList<EntryLocalType>(this.EntryField, value);
                                            }
                                        }
                                    }
                                }
                                
                                [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                                Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
                                    get {
                                        return localElementDictionary;
                                    }
                                }
                                
                                [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                                XName IXMetaData.SchemaName {
                                    get {
                                        return XName.Get("Primary", "xmlns://www.fortifysoftware.com/schema/fvdl");
                                    }
                                }
                                
                                [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                                SchemaOrigin IXMetaData.TypeOrigin {
                                    get {
                                        return SchemaOrigin.Fragment;
                                    }
                                }
                                
                                [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                                ILinqToXsdTypeManager IXMetaData.TypeManager {
                                    get {
                                        return LinqToXsdTypeManager.Instance;
                                    }
                                }
                                
                                public override XTypedElement Clone() {
                                    return XTypedServices.CloneXTypedElement<PrimaryLocalType>(this);
                                }
                                
                                private static void BuildElementDictionary() {
                                    localElementDictionary.Add(XName.Get("Entry", "xmlns://www.fortifysoftware.com/schema/fvdl"), typeof(EntryLocalType));
                                }
                                
                                ContentModelEntity IXMetaData.GetContentModel() {
                                    return contentModel;
                                }
                                
                                /// <summary>
                                /// <para>
                                /// Regular expression: (NodeRef?, Node?)
                                /// </para>
                                /// </summary>
                                public partial class EntryLocalType : XTypedElement, IXMetaData {
                                    
                                    [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                                    static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();
                                    
                                    [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                                    private static ContentModelEntity contentModel;
                                    
         public static explicit operator EntryLocalType(XElement xe) { return XTypedServices.ToXTypedElement<EntryLocalType>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
                                    
                                    static EntryLocalType() {
                                        BuildElementDictionary();
                                        contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("NodeRef", "xmlns://www.fortifysoftware.com/schema/fvdl")), new NamedContentModelEntity(XName.Get("Node", "xmlns://www.fortifysoftware.com/schema/fvdl")));
                                    }
                                    
                                    /// <summary>
                                    /// <para>
                                    /// Regular expression: (NodeRef?, Node?)
                                    /// </para>
                                    /// </summary>
                                    public EntryLocalType() {
                                    }
                                    
                                    /// <summary>
                                    /// <para>
                                    /// Occurrence: optional
                                    /// </para>
                                    /// <para>
                                    /// Regular expression: (NodeRef?, Node?)
                                    /// </para>
                                    /// </summary>
                                    public NodeRefLocalType NodeRef {
                                        get {
                                            XElement x = this.GetElement(XName.Get("NodeRef", "xmlns://www.fortifysoftware.com/schema/fvdl"));
                                            return ((NodeRefLocalType)(x));
                                        }
                                        set {
                                            this.SetElement(XName.Get("NodeRef", "xmlns://www.fortifysoftware.com/schema/fvdl"), value);
                                        }
                                    }
                                    
                                    /// <summary>
                                    /// <para>
                                    /// Occurrence: optional
                                    /// </para>
                                    /// <para>
                                    /// Regular expression: (NodeRef?, Node?)
                                    /// </para>
                                    /// </summary>
                                    public NodeLocalType Node {
                                        get {
                                            XElement x = this.GetElement(XName.Get("Node", "xmlns://www.fortifysoftware.com/schema/fvdl"));
                                            return ((NodeLocalType)(x));
                                        }
                                        set {
                                            this.SetElement(XName.Get("Node", "xmlns://www.fortifysoftware.com/schema/fvdl"), value);
                                        }
                                    }
                                    
                                    [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                                    Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
                                        get {
                                            return localElementDictionary;
                                        }
                                    }
                                    
                                    [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                                    XName IXMetaData.SchemaName {
                                        get {
                                            return XName.Get("Entry", "xmlns://www.fortifysoftware.com/schema/fvdl");
                                        }
                                    }
                                    
                                    [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                                    SchemaOrigin IXMetaData.TypeOrigin {
                                        get {
                                            return SchemaOrigin.Fragment;
                                        }
                                    }
                                    
                                    [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                                    ILinqToXsdTypeManager IXMetaData.TypeManager {
                                        get {
                                            return LinqToXsdTypeManager.Instance;
                                        }
                                    }
                                    
                                    public override XTypedElement Clone() {
                                        return XTypedServices.CloneXTypedElement<EntryLocalType>(this);
                                    }
                                    
                                    private static void BuildElementDictionary() {
                                        localElementDictionary.Add(XName.Get("NodeRef", "xmlns://www.fortifysoftware.com/schema/fvdl"), typeof(NodeRefLocalType));
                                        localElementDictionary.Add(XName.Get("Node", "xmlns://www.fortifysoftware.com/schema/fvdl"), typeof(NodeLocalType));
                                    }
                                    
                                    ContentModelEntity IXMetaData.GetContentModel() {
                                        return contentModel;
                                    }
                                    
                                    public partial class NodeRefLocalType : XTypedElement, IXMetaData {
                                        
         public static explicit operator NodeRefLocalType(XElement xe) { return XTypedServices.ToXTypedElement<NodeRefLocalType>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
                                        
                                        public NodeRefLocalType() {
                                        }
                                        
                                        /// <summary>
                                        /// <para>
                                        /// Occurrence: required
                                        /// </para>
                                        /// </summary>
                                        public uint id {
                                            get {
                                                XAttribute x = this.Attribute(XName.Get("id", ""));
                                                return XTypedServices.ParseValue<uint>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.UnsignedInt).Datatype);
                                            }
                                            set {
                                                this.SetAttribute(XName.Get("id", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.UnsignedInt).Datatype);
                                            }
                                        }
                                        
                                        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                                        XName IXMetaData.SchemaName {
                                            get {
                                                return XName.Get("NodeRef", "xmlns://www.fortifysoftware.com/schema/fvdl");
                                            }
                                        }
                                        
                                        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                                        SchemaOrigin IXMetaData.TypeOrigin {
                                            get {
                                                return SchemaOrigin.Fragment;
                                            }
                                        }
                                        
                                        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                                        ILinqToXsdTypeManager IXMetaData.TypeManager {
                                            get {
                                                return LinqToXsdTypeManager.Instance;
                                            }
                                        }
                                        
                                        public override XTypedElement Clone() {
                                            return XTypedServices.CloneXTypedElement<NodeRefLocalType>(this);
                                        }
                                        
                                        ContentModelEntity IXMetaData.GetContentModel() {
                                            return ContentModelEntity.Default;
                                        }
                                    }
                                    
                                    /// <summary>
                                    /// <para>
                                    /// Regular expression: (SourceLocation, SecondaryLocation?, Action?, Reason?, Knowledge?)
                                    /// </para>
                                    /// </summary>
                                    public partial class NodeLocalType : XTypedElement, IXMetaData {
                                        
                                        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                                        static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();
                                        
                                        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                                        private static ContentModelEntity contentModel;
                                        
         public static explicit operator NodeLocalType(XElement xe) { return XTypedServices.ToXTypedElement<NodeLocalType>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
                                        
                                        static NodeLocalType() {
                                            BuildElementDictionary();
                                            contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("SourceLocation", "xmlns://www.fortifysoftware.com/schema/fvdl")), new NamedContentModelEntity(XName.Get("SecondaryLocation", "xmlns://www.fortifysoftware.com/schema/fvdl")), new NamedContentModelEntity(XName.Get("Action", "xmlns://www.fortifysoftware.com/schema/fvdl")), new NamedContentModelEntity(XName.Get("Reason", "xmlns://www.fortifysoftware.com/schema/fvdl")), new NamedContentModelEntity(XName.Get("Knowledge", "xmlns://www.fortifysoftware.com/schema/fvdl")));
                                        }
                                        
                                        /// <summary>
                                        /// <para>
                                        /// Regular expression: (SourceLocation, SecondaryLocation?, Action?, Reason?, Knowledge?)
                                        /// </para>
                                        /// </summary>
                                        public NodeLocalType() {
                                        }
                                        
                                        /// <summary>
                                        /// <para>
                                        /// Occurrence: required
                                        /// </para>
                                        /// <para>
                                        /// Regular expression: (SourceLocation, SecondaryLocation?, Action?, Reason?, Knowledge?)
                                        /// </para>
                                        /// </summary>
                                        public SourceLocationLocalType SourceLocation {
                                            get {
                                                XElement x = this.GetElement(XName.Get("SourceLocation", "xmlns://www.fortifysoftware.com/schema/fvdl"));
                                                return ((SourceLocationLocalType)(x));
                                            }
                                            set {
                                                this.SetElement(XName.Get("SourceLocation", "xmlns://www.fortifysoftware.com/schema/fvdl"), value);
                                            }
                                        }
                                        
                                        /// <summary>
                                        /// <para>
                                        /// Occurrence: optional
                                        /// </para>
                                        /// <para>
                                        /// Regular expression: (SourceLocation, SecondaryLocation?, Action?, Reason?, Knowledge?)
                                        /// </para>
                                        /// </summary>
                                        public SecondaryLocationLocalType SecondaryLocation {
                                            get {
                                                XElement x = this.GetElement(XName.Get("SecondaryLocation", "xmlns://www.fortifysoftware.com/schema/fvdl"));
                                                return ((SecondaryLocationLocalType)(x));
                                            }
                                            set {
                                                this.SetElement(XName.Get("SecondaryLocation", "xmlns://www.fortifysoftware.com/schema/fvdl"), value);
                                            }
                                        }
                                        
                                        /// <summary>
                                        /// <para>
                                        /// Occurrence: optional
                                        /// </para>
                                        /// <para>
                                        /// Regular expression: (SourceLocation, SecondaryLocation?, Action?, Reason?, Knowledge?)
                                        /// </para>
                                        /// </summary>
                                        public ActionLocalType Action {
                                            get {
                                                XElement x = this.GetElement(XName.Get("Action", "xmlns://www.fortifysoftware.com/schema/fvdl"));
                                                return ((ActionLocalType)(x));
                                            }
                                            set {
                                                this.SetElement(XName.Get("Action", "xmlns://www.fortifysoftware.com/schema/fvdl"), value);
                                            }
                                        }
                                        
                                        /// <summary>
                                        /// <para>
                                        /// Occurrence: optional
                                        /// </para>
                                        /// <para>
                                        /// Regular expression: (SourceLocation, SecondaryLocation?, Action?, Reason?, Knowledge?)
                                        /// </para>
                                        /// </summary>
                                        public ReasonLocalType Reason {
                                            get {
                                                XElement x = this.GetElement(XName.Get("Reason", "xmlns://www.fortifysoftware.com/schema/fvdl"));
                                                return ((ReasonLocalType)(x));
                                            }
                                            set {
                                                this.SetElement(XName.Get("Reason", "xmlns://www.fortifysoftware.com/schema/fvdl"), value);
                                            }
                                        }
                                        
                                        /// <summary>
                                        /// <para>
                                        /// Occurrence: optional
                                        /// </para>
                                        /// <para>
                                        /// Regular expression: (SourceLocation, SecondaryLocation?, Action?, Reason?, Knowledge?)
                                        /// </para>
                                        /// </summary>
                                        public KnowledgeLocalType Knowledge {
                                            get {
                                                XElement x = this.GetElement(XName.Get("Knowledge", "xmlns://www.fortifysoftware.com/schema/fvdl"));
                                                return ((KnowledgeLocalType)(x));
                                            }
                                            set {
                                                this.SetElement(XName.Get("Knowledge", "xmlns://www.fortifysoftware.com/schema/fvdl"), value);
                                            }
                                        }
                                        
                                        /// <summary>
                                        /// <para>
                                        /// Occurrence: optional
                                        /// </para>
                                        /// </summary>
                                        public System.Nullable<bool> detailsOnly {
                                            get {
                                                XAttribute x = this.Attribute(XName.Get("detailsOnly", ""));
                                                if ((x == null)) {
                                                    return null;
                                                }
                                                return XTypedServices.ParseValue<bool>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype);
                                            }
                                            set {
                                                this.SetAttribute(XName.Get("detailsOnly", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype);
                                            }
                                        }
                                        
                                        /// <summary>
                                        /// <para>
                                        /// Occurrence: optional
                                        /// </para>
                                        /// </summary>
                                        public string label {
                                            get {
                                                XAttribute x = this.Attribute(XName.Get("label", ""));
                                                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
                                            }
                                            set {
                                                this.SetAttribute(XName.Get("label", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
                                            }
                                        }
                                        
                                        /// <summary>
                                        /// <para>
                                        /// Occurrence: optional
                                        /// </para>
                                        /// </summary>
                                        public System.Nullable<bool> isDefault {
                                            get {
                                                XAttribute x = this.Attribute(XName.Get("isDefault", ""));
                                                if ((x == null)) {
                                                    return null;
                                                }
                                                return XTypedServices.ParseValue<bool>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype);
                                            }
                                            set {
                                                this.SetAttribute(XName.Get("isDefault", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype);
                                            }
                                        }
                                        
                                        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                                        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
                                            get {
                                                return localElementDictionary;
                                            }
                                        }
                                        
                                        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                                        XName IXMetaData.SchemaName {
                                            get {
                                                return XName.Get("Node", "xmlns://www.fortifysoftware.com/schema/fvdl");
                                            }
                                        }
                                        
                                        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                                        SchemaOrigin IXMetaData.TypeOrigin {
                                            get {
                                                return SchemaOrigin.Fragment;
                                            }
                                        }
                                        
                                        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                                        ILinqToXsdTypeManager IXMetaData.TypeManager {
                                            get {
                                                return LinqToXsdTypeManager.Instance;
                                            }
                                        }
                                        
                                        public override XTypedElement Clone() {
                                            return XTypedServices.CloneXTypedElement<NodeLocalType>(this);
                                        }
                                        
                                        private static void BuildElementDictionary() {
                                            localElementDictionary.Add(XName.Get("SourceLocation", "xmlns://www.fortifysoftware.com/schema/fvdl"), typeof(SourceLocationLocalType));
                                            localElementDictionary.Add(XName.Get("SecondaryLocation", "xmlns://www.fortifysoftware.com/schema/fvdl"), typeof(SecondaryLocationLocalType));
                                            localElementDictionary.Add(XName.Get("Action", "xmlns://www.fortifysoftware.com/schema/fvdl"), typeof(ActionLocalType));
                                            localElementDictionary.Add(XName.Get("Reason", "xmlns://www.fortifysoftware.com/schema/fvdl"), typeof(ReasonLocalType));
                                            localElementDictionary.Add(XName.Get("Knowledge", "xmlns://www.fortifysoftware.com/schema/fvdl"), typeof(KnowledgeLocalType));
                                        }
                                        
                                        ContentModelEntity IXMetaData.GetContentModel() {
                                            return contentModel;
                                        }
                                        
                                        public partial class SourceLocationLocalType : XTypedElement, IXMetaData {
                                            
         public static explicit operator SourceLocationLocalType(XElement xe) { return XTypedServices.ToXTypedElement<SourceLocationLocalType>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
                                            
                                            public SourceLocationLocalType() {
                                            }
                                            
                                            /// <summary>
                                            /// <para>
                                            /// Occurrence: required
                                            /// </para>
                                            /// </summary>
                                            public string path {
                                                get {
                                                    XAttribute x = this.Attribute(XName.Get("path", ""));
                                                    return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
                                                }
                                                set {
                                                    this.SetAttribute(XName.Get("path", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
                                                }
                                            }
                                            
                                            /// <summary>
                                            /// <para>
                                            /// Occurrence: required
                                            /// </para>
                                            /// </summary>
                                            public uint line {
                                                get {
                                                    XAttribute x = this.Attribute(XName.Get("line", ""));
                                                    return XTypedServices.ParseValue<uint>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.UnsignedInt).Datatype);
                                                }
                                                set {
                                                    this.SetAttribute(XName.Get("line", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.UnsignedInt).Datatype);
                                                }
                                            }
                                            
                                            /// <summary>
                                            /// <para>
                                            /// Occurrence: required
                                            /// </para>
                                            /// </summary>
                                            public uint lineEnd {
                                                get {
                                                    XAttribute x = this.Attribute(XName.Get("lineEnd", ""));
                                                    return XTypedServices.ParseValue<uint>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.UnsignedInt).Datatype);
                                                }
                                                set {
                                                    this.SetAttribute(XName.Get("lineEnd", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.UnsignedInt).Datatype);
                                                }
                                            }
                                            
                                            /// <summary>
                                            /// <para>
                                            /// Occurrence: required
                                            /// </para>
                                            /// </summary>
                                            public uint colStart {
                                                get {
                                                    XAttribute x = this.Attribute(XName.Get("colStart", ""));
                                                    return XTypedServices.ParseValue<uint>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.UnsignedInt).Datatype);
                                                }
                                                set {
                                                    this.SetAttribute(XName.Get("colStart", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.UnsignedInt).Datatype);
                                                }
                                            }
                                            
                                            /// <summary>
                                            /// <para>
                                            /// Occurrence: required
                                            /// </para>
                                            /// </summary>
                                            public uint colEnd {
                                                get {
                                                    XAttribute x = this.Attribute(XName.Get("colEnd", ""));
                                                    return XTypedServices.ParseValue<uint>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.UnsignedInt).Datatype);
                                                }
                                                set {
                                                    this.SetAttribute(XName.Get("colEnd", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.UnsignedInt).Datatype);
                                                }
                                            }
                                            
                                            /// <summary>
                                            /// <para>
                                            /// Occurrence: required
                                            /// </para>
                                            /// </summary>
                                            public string snippet {
                                                get {
                                                    XAttribute x = this.Attribute(XName.Get("snippet", ""));
                                                    return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
                                                }
                                                set {
                                                    this.SetAttribute(XName.Get("snippet", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
                                                }
                                            }
                                            
                                            /// <summary>
                                            /// <para>
                                            /// Occurrence: optional
                                            /// </para>
                                            /// </summary>
                                            public System.Nullable<uint> contextId {
                                                get {
                                                    XAttribute x = this.Attribute(XName.Get("contextId", ""));
                                                    if ((x == null)) {
                                                        return null;
                                                    }
                                                    return XTypedServices.ParseValue<uint>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.UnsignedInt).Datatype);
                                                }
                                                set {
                                                    this.SetAttribute(XName.Get("contextId", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.UnsignedInt).Datatype);
                                                }
                                            }
                                            
                                            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                                            XName IXMetaData.SchemaName {
                                                get {
                                                    return XName.Get("SourceLocation", "xmlns://www.fortifysoftware.com/schema/fvdl");
                                                }
                                            }
                                            
                                            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                                            SchemaOrigin IXMetaData.TypeOrigin {
                                                get {
                                                    return SchemaOrigin.Fragment;
                                                }
                                            }
                                            
                                            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                                            ILinqToXsdTypeManager IXMetaData.TypeManager {
                                                get {
                                                    return LinqToXsdTypeManager.Instance;
                                                }
                                            }
                                            
                                            public override XTypedElement Clone() {
                                                return XTypedServices.CloneXTypedElement<SourceLocationLocalType>(this);
                                            }
                                            
                                            ContentModelEntity IXMetaData.GetContentModel() {
                                                return ContentModelEntity.Default;
                                            }
                                        }
                                        
                                        public partial class SecondaryLocationLocalType : XTypedElement, IXMetaData {
                                            
         public static explicit operator SecondaryLocationLocalType(XElement xe) { return XTypedServices.ToXTypedElement<SecondaryLocationLocalType>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
                                            
                                            public SecondaryLocationLocalType() {
                                            }
                                            
                                            /// <summary>
                                            /// <para>
                                            /// Occurrence: required
                                            /// </para>
                                            /// </summary>
                                            public string path {
                                                get {
                                                    XAttribute x = this.Attribute(XName.Get("path", ""));
                                                    return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
                                                }
                                                set {
                                                    this.SetAttribute(XName.Get("path", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
                                                }
                                            }
                                            
                                            /// <summary>
                                            /// <para>
                                            /// Occurrence: required
                                            /// </para>
                                            /// </summary>
                                            public uint line {
                                                get {
                                                    XAttribute x = this.Attribute(XName.Get("line", ""));
                                                    return XTypedServices.ParseValue<uint>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.UnsignedInt).Datatype);
                                                }
                                                set {
                                                    this.SetAttribute(XName.Get("line", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.UnsignedInt).Datatype);
                                                }
                                            }
                                            
                                            /// <summary>
                                            /// <para>
                                            /// Occurrence: required
                                            /// </para>
                                            /// </summary>
                                            public uint lineEnd {
                                                get {
                                                    XAttribute x = this.Attribute(XName.Get("lineEnd", ""));
                                                    return XTypedServices.ParseValue<uint>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.UnsignedInt).Datatype);
                                                }
                                                set {
                                                    this.SetAttribute(XName.Get("lineEnd", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.UnsignedInt).Datatype);
                                                }
                                            }
                                            
                                            /// <summary>
                                            /// <para>
                                            /// Occurrence: required
                                            /// </para>
                                            /// </summary>
                                            public uint colStart {
                                                get {
                                                    XAttribute x = this.Attribute(XName.Get("colStart", ""));
                                                    return XTypedServices.ParseValue<uint>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.UnsignedInt).Datatype);
                                                }
                                                set {
                                                    this.SetAttribute(XName.Get("colStart", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.UnsignedInt).Datatype);
                                                }
                                            }
                                            
                                            /// <summary>
                                            /// <para>
                                            /// Occurrence: required
                                            /// </para>
                                            /// </summary>
                                            public uint colEnd {
                                                get {
                                                    XAttribute x = this.Attribute(XName.Get("colEnd", ""));
                                                    return XTypedServices.ParseValue<uint>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.UnsignedInt).Datatype);
                                                }
                                                set {
                                                    this.SetAttribute(XName.Get("colEnd", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.UnsignedInt).Datatype);
                                                }
                                            }
                                            
                                            /// <summary>
                                            /// <para>
                                            /// Occurrence: required
                                            /// </para>
                                            /// </summary>
                                            public string snippet {
                                                get {
                                                    XAttribute x = this.Attribute(XName.Get("snippet", ""));
                                                    return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
                                                }
                                                set {
                                                    this.SetAttribute(XName.Get("snippet", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
                                                }
                                            }
                                            
                                            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                                            XName IXMetaData.SchemaName {
                                                get {
                                                    return XName.Get("SecondaryLocation", "xmlns://www.fortifysoftware.com/schema/fvdl");
                                                }
                                            }
                                            
                                            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                                            SchemaOrigin IXMetaData.TypeOrigin {
                                                get {
                                                    return SchemaOrigin.Fragment;
                                                }
                                            }
                                            
                                            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                                            ILinqToXsdTypeManager IXMetaData.TypeManager {
                                                get {
                                                    return LinqToXsdTypeManager.Instance;
                                                }
                                            }
                                            
                                            public override XTypedElement Clone() {
                                                return XTypedServices.CloneXTypedElement<SecondaryLocationLocalType>(this);
                                            }
                                            
                                            ContentModelEntity IXMetaData.GetContentModel() {
                                                return ContentModelEntity.Default;
                                            }
                                        }
                                        
                                        public partial class ActionLocalType : XTypedElement, IXMetaData {
                                            
         public static explicit operator ActionLocalType(XElement xe) { return XTypedServices.ToXTypedElement<ActionLocalType>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
                                            
                                            public ActionLocalType() {
                                            }
                                            
                                            public string TypedValue {
                                                get {
                                                    XElement x = this.Untyped;
                                                    return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
                                                }
                                                set {
                                                    this.SetValue(value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
                                                }
                                            }
                                            
                                            /// <summary>
                                            /// <para>
                                            /// Occurrence: optional
                                            /// </para>
                                            /// </summary>
                                            public string type {
                                                get {
                                                    XAttribute x = this.Attribute(XName.Get("type", ""));
                                                    return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
                                                }
                                                set {
                                                    this.SetAttribute(XName.Get("type", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
                                                }
                                            }
                                            
                                            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                                            XName IXMetaData.SchemaName {
                                                get {
                                                    return XName.Get("Action", "xmlns://www.fortifysoftware.com/schema/fvdl");
                                                }
                                            }
                                            
                                            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                                            SchemaOrigin IXMetaData.TypeOrigin {
                                                get {
                                                    return SchemaOrigin.Fragment;
                                                }
                                            }
                                            
                                            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                                            ILinqToXsdTypeManager IXMetaData.TypeManager {
                                                get {
                                                    return LinqToXsdTypeManager.Instance;
                                                }
                                            }
                                            
                                            public override XTypedElement Clone() {
                                                return XTypedServices.CloneXTypedElement<ActionLocalType>(this);
                                            }
                                            
                                            ContentModelEntity IXMetaData.GetContentModel() {
                                                return ContentModelEntity.Default;
                                            }
                                        }
                                        
                                        /// <summary>
                                        /// <para>
                                        /// Regular expression: (Rule?, @Internal?, TraceRef?)
                                        /// </para>
                                        /// </summary>
                                        public partial class ReasonLocalType : XTypedElement, IXMetaData {
                                            
                                            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                                            static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();
                                            
                                            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                                            private static ContentModelEntity contentModel;
                                            
         public static explicit operator ReasonLocalType(XElement xe) { return XTypedServices.ToXTypedElement<ReasonLocalType>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
                                            
                                            static ReasonLocalType() {
                                                BuildElementDictionary();
                                                contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("Rule", "xmlns://www.fortifysoftware.com/schema/fvdl")), new NamedContentModelEntity(XName.Get("Internal", "xmlns://www.fortifysoftware.com/schema/fvdl")), new NamedContentModelEntity(XName.Get("TraceRef", "xmlns://www.fortifysoftware.com/schema/fvdl")));
                                            }
                                            
                                            /// <summary>
                                            /// <para>
                                            /// Regular expression: (Rule?, @Internal?, TraceRef?)
                                            /// </para>
                                            /// </summary>
                                            public ReasonLocalType() {
                                            }
                                            
                                            /// <summary>
                                            /// <para>
                                            /// Occurrence: optional
                                            /// </para>
                                            /// <para>
                                            /// Regular expression: (Rule?, @Internal?, TraceRef?)
                                            /// </para>
                                            /// </summary>
                                            public RuleLocalType Rule {
                                                get {
                                                    XElement x = this.GetElement(XName.Get("Rule", "xmlns://www.fortifysoftware.com/schema/fvdl"));
                                                    return ((RuleLocalType)(x));
                                                }
                                                set {
                                                    this.SetElement(XName.Get("Rule", "xmlns://www.fortifysoftware.com/schema/fvdl"), value);
                                                }
                                            }
                                            
                                            /// <summary>
                                            /// <para>
                                            /// Occurrence: optional
                                            /// </para>
                                            /// <para>
                                            /// Regular expression: (Rule?, @Internal?, TraceRef?)
                                            /// </para>
                                            /// </summary>
                                            public @InternalLocalType @Internal {
                                                get {
                                                    XElement x = this.GetElement(XName.Get("Internal", "xmlns://www.fortifysoftware.com/schema/fvdl"));
                                                    return ((@InternalLocalType)(x));
                                                }
                                                set {
                                                    this.SetElement(XName.Get("Internal", "xmlns://www.fortifysoftware.com/schema/fvdl"), value);
                                                }
                                            }
                                            
                                            /// <summary>
                                            /// <para>
                                            /// Occurrence: optional
                                            /// </para>
                                            /// <para>
                                            /// Regular expression: (Rule?, @Internal?, TraceRef?)
                                            /// </para>
                                            /// </summary>
                                            public TraceRefLocalType TraceRef {
                                                get {
                                                    XElement x = this.GetElement(XName.Get("TraceRef", "xmlns://www.fortifysoftware.com/schema/fvdl"));
                                                    return ((TraceRefLocalType)(x));
                                                }
                                                set {
                                                    this.SetElement(XName.Get("TraceRef", "xmlns://www.fortifysoftware.com/schema/fvdl"), value);
                                                }
                                            }
                                            
                                            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                                            Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
                                                get {
                                                    return localElementDictionary;
                                                }
                                            }
                                            
                                            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                                            XName IXMetaData.SchemaName {
                                                get {
                                                    return XName.Get("Reason", "xmlns://www.fortifysoftware.com/schema/fvdl");
                                                }
                                            }
                                            
                                            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                                            SchemaOrigin IXMetaData.TypeOrigin {
                                                get {
                                                    return SchemaOrigin.Fragment;
                                                }
                                            }
                                            
                                            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                                            ILinqToXsdTypeManager IXMetaData.TypeManager {
                                                get {
                                                    return LinqToXsdTypeManager.Instance;
                                                }
                                            }
                                            
                                            public override XTypedElement Clone() {
                                                return XTypedServices.CloneXTypedElement<ReasonLocalType>(this);
                                            }
                                            
                                            private static void BuildElementDictionary() {
                                                localElementDictionary.Add(XName.Get("Rule", "xmlns://www.fortifysoftware.com/schema/fvdl"), typeof(RuleLocalType));
                                                localElementDictionary.Add(XName.Get("Internal", "xmlns://www.fortifysoftware.com/schema/fvdl"), typeof(@InternalLocalType));
                                                localElementDictionary.Add(XName.Get("TraceRef", "xmlns://www.fortifysoftware.com/schema/fvdl"), typeof(TraceRefLocalType));
                                            }
                                            
                                            ContentModelEntity IXMetaData.GetContentModel() {
                                                return contentModel;
                                            }
                                            
                                            public partial class RuleLocalType : XTypedElement, IXMetaData {
                                                
         public static explicit operator RuleLocalType(XElement xe) { return XTypedServices.ToXTypedElement<RuleLocalType>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
                                                
                                                public RuleLocalType() {
                                                }
                                                
                                                /// <summary>
                                                /// <para>
                                                /// Occurrence: required
                                                /// </para>
                                                /// </summary>
                                                public string ruleID {
                                                    get {
                                                        XAttribute x = this.Attribute(XName.Get("ruleID", ""));
                                                        return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
                                                    }
                                                    set {
                                                        this.SetAttribute(XName.Get("ruleID", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
                                                    }
                                                }
                                                
                                                [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                                                XName IXMetaData.SchemaName {
                                                    get {
                                                        return XName.Get("Rule", "xmlns://www.fortifysoftware.com/schema/fvdl");
                                                    }
                                                }
                                                
                                                [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                                                SchemaOrigin IXMetaData.TypeOrigin {
                                                    get {
                                                        return SchemaOrigin.Fragment;
                                                    }
                                                }
                                                
                                                [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                                                ILinqToXsdTypeManager IXMetaData.TypeManager {
                                                    get {
                                                        return LinqToXsdTypeManager.Instance;
                                                    }
                                                }
                                                
                                                public override XTypedElement Clone() {
                                                    return XTypedServices.CloneXTypedElement<RuleLocalType>(this);
                                                }
                                                
                                                ContentModelEntity IXMetaData.GetContentModel() {
                                                    return ContentModelEntity.Default;
                                                }
                                            }
                                            
                                            public partial class @InternalLocalType : XTypedElement, IXMetaData {
                                                
         public static explicit operator @InternalLocalType(XElement xe) { return XTypedServices.ToXTypedElement<@InternalLocalType>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
                                                
                                                public @InternalLocalType() {
                                                }
                                                
                                                /// <summary>
                                                /// <para>
                                                /// Occurrence: required
                                                /// </para>
                                                /// </summary>
                                                public string text {
                                                    get {
                                                        XAttribute x = this.Attribute(XName.Get("text", ""));
                                                        return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
                                                    }
                                                    set {
                                                        this.SetAttribute(XName.Get("text", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
                                                    }
                                                }
                                                
                                                [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                                                XName IXMetaData.SchemaName {
                                                    get {
                                                        return XName.Get("Internal", "xmlns://www.fortifysoftware.com/schema/fvdl");
                                                    }
                                                }
                                                
                                                [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                                                SchemaOrigin IXMetaData.TypeOrigin {
                                                    get {
                                                        return SchemaOrigin.Fragment;
                                                    }
                                                }
                                                
                                                [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                                                ILinqToXsdTypeManager IXMetaData.TypeManager {
                                                    get {
                                                        return LinqToXsdTypeManager.Instance;
                                                    }
                                                }
                                                
                                                public override XTypedElement Clone() {
                                                    return XTypedServices.CloneXTypedElement<@InternalLocalType>(this);
                                                }
                                                
                                                ContentModelEntity IXMetaData.GetContentModel() {
                                                    return ContentModelEntity.Default;
                                                }
                                            }
                                            
                                            public partial class TraceRefLocalType : XTypedElement, IXMetaData {
                                                
         public static explicit operator TraceRefLocalType(XElement xe) { return XTypedServices.ToXTypedElement<TraceRefLocalType>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
                                                
                                                public TraceRefLocalType() {
                                                }
                                                
                                                /// <summary>
                                                /// <para>
                                                /// Occurrence: required
                                                /// </para>
                                                /// </summary>
                                                public uint id {
                                                    get {
                                                        XAttribute x = this.Attribute(XName.Get("id", ""));
                                                        return XTypedServices.ParseValue<uint>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.UnsignedInt).Datatype);
                                                    }
                                                    set {
                                                        this.SetAttribute(XName.Get("id", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.UnsignedInt).Datatype);
                                                    }
                                                }
                                                
                                                [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                                                XName IXMetaData.SchemaName {
                                                    get {
                                                        return XName.Get("TraceRef", "xmlns://www.fortifysoftware.com/schema/fvdl");
                                                    }
                                                }
                                                
                                                [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                                                SchemaOrigin IXMetaData.TypeOrigin {
                                                    get {
                                                        return SchemaOrigin.Fragment;
                                                    }
                                                }
                                                
                                                [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                                                ILinqToXsdTypeManager IXMetaData.TypeManager {
                                                    get {
                                                        return LinqToXsdTypeManager.Instance;
                                                    }
                                                }
                                                
                                                public override XTypedElement Clone() {
                                                    return XTypedServices.CloneXTypedElement<TraceRefLocalType>(this);
                                                }
                                                
                                                ContentModelEntity IXMetaData.GetContentModel() {
                                                    return ContentModelEntity.Default;
                                                }
                                            }
                                        }
                                        
                                        /// <summary>
                                        /// <para>
                                        /// Regular expression: (Fact+)
                                        /// </para>
                                        /// </summary>
                                        public partial class KnowledgeLocalType : XTypedElement, IXMetaData {
                                            
                                            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                                            private XTypedList<FactLocalType> FactField;
                                            
                                            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                                            static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();
                                            
                                            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                                            private static ContentModelEntity contentModel;
                                            
         public static explicit operator KnowledgeLocalType(XElement xe) { return XTypedServices.ToXTypedElement<KnowledgeLocalType>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
                                            
                                            static KnowledgeLocalType() {
                                                BuildElementDictionary();
                                                contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("Fact", "xmlns://www.fortifysoftware.com/schema/fvdl")));
                                            }
                                            
                                            /// <summary>
                                            /// <para>
                                            /// Regular expression: (Fact+)
                                            /// </para>
                                            /// </summary>
                                            public KnowledgeLocalType() {
                                            }
                                            
                                            /// <summary>
                                            /// <para>
                                            /// Occurrence: required, repeating
                                            /// </para>
                                            /// <para>
                                            /// Regular expression: (Fact+)
                                            /// </para>
                                            /// </summary>
                                            public IList<xmlns.www.fortifysoftware.com.schema.fvdl.FVDL.VulnerabilitiesLocalType.VulnerabilityLocalType.AnalysisInfoLocalType.UnifiedLocalType.TraceLocalType.PrimaryLocalType.EntryLocalType.NodeLocalType.KnowledgeLocalType.FactLocalType> Fact {
                                                get {
                                                    if ((this.FactField == null)) {
                                                        this.FactField = new XTypedList<FactLocalType>(this, LinqToXsdTypeManager.Instance, XName.Get("Fact", "xmlns://www.fortifysoftware.com/schema/fvdl"));
                                                    }
                                                    return this.FactField;
                                                }
                                                set {
                                                    if ((value == null)) {
                                                        this.FactField = null;
                                                    }
                                                    else {
                                                        if ((this.FactField == null)) {
                                                            this.FactField = XTypedList<FactLocalType>.Initialize(this, LinqToXsdTypeManager.Instance, value, XName.Get("Fact", "xmlns://www.fortifysoftware.com/schema/fvdl"));
                                                        }
                                                        else {
                                                            XTypedServices.SetList<FactLocalType>(this.FactField, value);
                                                        }
                                                    }
                                                }
                                            }
                                            
                                            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                                            Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
                                                get {
                                                    return localElementDictionary;
                                                }
                                            }
                                            
                                            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                                            XName IXMetaData.SchemaName {
                                                get {
                                                    return XName.Get("Knowledge", "xmlns://www.fortifysoftware.com/schema/fvdl");
                                                }
                                            }
                                            
                                            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                                            SchemaOrigin IXMetaData.TypeOrigin {
                                                get {
                                                    return SchemaOrigin.Fragment;
                                                }
                                            }
                                            
                                            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                                            ILinqToXsdTypeManager IXMetaData.TypeManager {
                                                get {
                                                    return LinqToXsdTypeManager.Instance;
                                                }
                                            }
                                            
                                            public override XTypedElement Clone() {
                                                return XTypedServices.CloneXTypedElement<KnowledgeLocalType>(this);
                                            }
                                            
                                            private static void BuildElementDictionary() {
                                                localElementDictionary.Add(XName.Get("Fact", "xmlns://www.fortifysoftware.com/schema/fvdl"), typeof(FactLocalType));
                                            }
                                            
                                            ContentModelEntity IXMetaData.GetContentModel() {
                                                return contentModel;
                                            }
                                            
                                            public partial class FactLocalType : XTypedElement, IXMetaData {
                                                
         public static explicit operator FactLocalType(XElement xe) { return XTypedServices.ToXTypedElement<FactLocalType>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
                                                
                                                public FactLocalType() {
                                                }
                                                
                                                public string TypedValue {
                                                    get {
                                                        XElement x = this.Untyped;
                                                        return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
                                                    }
                                                    set {
                                                        this.SetValue(value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
                                                    }
                                                }
                                                
                                                /// <summary>
                                                /// <para>
                                                /// Occurrence: required
                                                /// </para>
                                                /// </summary>
                                                public bool primary {
                                                    get {
                                                        XAttribute x = this.Attribute(XName.Get("primary", ""));
                                                        return XTypedServices.ParseValue<bool>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype);
                                                    }
                                                    set {
                                                        this.SetAttribute(XName.Get("primary", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype);
                                                    }
                                                }
                                                
                                                /// <summary>
                                                /// <para>
                                                /// Occurrence: required
                                                /// </para>
                                                /// </summary>
                                                public string type {
                                                    get {
                                                        XAttribute x = this.Attribute(XName.Get("type", ""));
                                                        return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
                                                    }
                                                    set {
                                                        this.SetAttribute(XName.Get("type", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
                                                    }
                                                }
                                                
                                                [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                                                XName IXMetaData.SchemaName {
                                                    get {
                                                        return XName.Get("Fact", "xmlns://www.fortifysoftware.com/schema/fvdl");
                                                    }
                                                }
                                                
                                                [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                                                SchemaOrigin IXMetaData.TypeOrigin {
                                                    get {
                                                        return SchemaOrigin.Fragment;
                                                    }
                                                }
                                                
                                                [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                                                ILinqToXsdTypeManager IXMetaData.TypeManager {
                                                    get {
                                                        return LinqToXsdTypeManager.Instance;
                                                    }
                                                }
                                                
                                                public override XTypedElement Clone() {
                                                    return XTypedServices.CloneXTypedElement<FactLocalType>(this);
                                                }
                                                
                                                ContentModelEntity IXMetaData.GetContentModel() {
                                                    return ContentModelEntity.Default;
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
        
        /// <summary>
        /// <para>
        /// Regular expression: (Context+)
        /// </para>
        /// </summary>
        public partial class ContextPoolLocalType : XTypedElement, IXMetaData {
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            private XTypedList<ContextLocalType> ContextField;
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            private static ContentModelEntity contentModel;
            
         public static explicit operator ContextPoolLocalType(XElement xe) { return XTypedServices.ToXTypedElement<ContextPoolLocalType>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
            
            static ContextPoolLocalType() {
                BuildElementDictionary();
                contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("Context", "xmlns://www.fortifysoftware.com/schema/fvdl")));
            }
            
            /// <summary>
            /// <para>
            /// Regular expression: (Context+)
            /// </para>
            /// </summary>
            public ContextPoolLocalType() {
            }
            
            /// <summary>
            /// <para>
            /// Occurrence: required, repeating
            /// </para>
            /// <para>
            /// Regular expression: (Context+)
            /// </para>
            /// </summary>
            public IList<xmlns.www.fortifysoftware.com.schema.fvdl.FVDL.ContextPoolLocalType.ContextLocalType> Context {
                get {
                    if ((this.ContextField == null)) {
                        this.ContextField = new XTypedList<ContextLocalType>(this, LinqToXsdTypeManager.Instance, XName.Get("Context", "xmlns://www.fortifysoftware.com/schema/fvdl"));
                    }
                    return this.ContextField;
                }
                set {
                    if ((value == null)) {
                        this.ContextField = null;
                    }
                    else {
                        if ((this.ContextField == null)) {
                            this.ContextField = XTypedList<ContextLocalType>.Initialize(this, LinqToXsdTypeManager.Instance, value, XName.Get("Context", "xmlns://www.fortifysoftware.com/schema/fvdl"));
                        }
                        else {
                            XTypedServices.SetList<ContextLocalType>(this.ContextField, value);
                        }
                    }
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
                get {
                    return localElementDictionary;
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            XName IXMetaData.SchemaName {
                get {
                    return XName.Get("ContextPool", "xmlns://www.fortifysoftware.com/schema/fvdl");
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            SchemaOrigin IXMetaData.TypeOrigin {
                get {
                    return SchemaOrigin.Fragment;
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            ILinqToXsdTypeManager IXMetaData.TypeManager {
                get {
                    return LinqToXsdTypeManager.Instance;
                }
            }
            
            public override XTypedElement Clone() {
                return XTypedServices.CloneXTypedElement<ContextPoolLocalType>(this);
            }
            
            private static void BuildElementDictionary() {
                localElementDictionary.Add(XName.Get("Context", "xmlns://www.fortifysoftware.com/schema/fvdl"), typeof(ContextLocalType));
            }
            
            ContentModelEntity IXMetaData.GetContentModel() {
                return contentModel;
            }
            
            /// <summary>
            /// <para>
            /// Regular expression: (Function, FunctionDeclarationSourceLocation)
            /// </para>
            /// </summary>
            public partial class ContextLocalType : XTypedElement, IXMetaData {
                
                [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();
                
                [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                private static ContentModelEntity contentModel;
                
         public static explicit operator ContextLocalType(XElement xe) { return XTypedServices.ToXTypedElement<ContextLocalType>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
                
                static ContextLocalType() {
                    BuildElementDictionary();
                    contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("Function", "xmlns://www.fortifysoftware.com/schema/fvdl")), new NamedContentModelEntity(XName.Get("FunctionDeclarationSourceLocation", "xmlns://www.fortifysoftware.com/schema/fvdl")));
                }
                
                /// <summary>
                /// <para>
                /// Regular expression: (Function, FunctionDeclarationSourceLocation)
                /// </para>
                /// </summary>
                public ContextLocalType() {
                }
                
                /// <summary>
                /// <para>
                /// Occurrence: required
                /// </para>
                /// <para>
                /// Regular expression: (Function, FunctionDeclarationSourceLocation)
                /// </para>
                /// </summary>
                public FunctionLocalType Function {
                    get {
                        XElement x = this.GetElement(XName.Get("Function", "xmlns://www.fortifysoftware.com/schema/fvdl"));
                        return ((FunctionLocalType)(x));
                    }
                    set {
                        this.SetElement(XName.Get("Function", "xmlns://www.fortifysoftware.com/schema/fvdl"), value);
                    }
                }
                
                /// <summary>
                /// <para>
                /// Occurrence: required
                /// </para>
                /// <para>
                /// Regular expression: (Function, FunctionDeclarationSourceLocation)
                /// </para>
                /// </summary>
                public FunctionDeclarationSourceLocationLocalType FunctionDeclarationSourceLocation {
                    get {
                        XElement x = this.GetElement(XName.Get("FunctionDeclarationSourceLocation", "xmlns://www.fortifysoftware.com/schema/fvdl"));
                        return ((FunctionDeclarationSourceLocationLocalType)(x));
                    }
                    set {
                        this.SetElement(XName.Get("FunctionDeclarationSourceLocation", "xmlns://www.fortifysoftware.com/schema/fvdl"), value);
                    }
                }
                
                /// <summary>
                /// <para>
                /// Occurrence: required
                /// </para>
                /// </summary>
                public uint id {
                    get {
                        XAttribute x = this.Attribute(XName.Get("id", ""));
                        return XTypedServices.ParseValue<uint>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.UnsignedInt).Datatype);
                    }
                    set {
                        this.SetAttribute(XName.Get("id", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.UnsignedInt).Datatype);
                    }
                }
                
                [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
                    get {
                        return localElementDictionary;
                    }
                }
                
                [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                XName IXMetaData.SchemaName {
                    get {
                        return XName.Get("Context", "xmlns://www.fortifysoftware.com/schema/fvdl");
                    }
                }
                
                [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                SchemaOrigin IXMetaData.TypeOrigin {
                    get {
                        return SchemaOrigin.Fragment;
                    }
                }
                
                [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                ILinqToXsdTypeManager IXMetaData.TypeManager {
                    get {
                        return LinqToXsdTypeManager.Instance;
                    }
                }
                
                public override XTypedElement Clone() {
                    return XTypedServices.CloneXTypedElement<ContextLocalType>(this);
                }
                
                private static void BuildElementDictionary() {
                    localElementDictionary.Add(XName.Get("Function", "xmlns://www.fortifysoftware.com/schema/fvdl"), typeof(FunctionLocalType));
                    localElementDictionary.Add(XName.Get("FunctionDeclarationSourceLocation", "xmlns://www.fortifysoftware.com/schema/fvdl"), typeof(FunctionDeclarationSourceLocationLocalType));
                }
                
                ContentModelEntity IXMetaData.GetContentModel() {
                    return contentModel;
                }
                
                public partial class FunctionLocalType : XTypedElement, IXMetaData {
                    
         public static explicit operator FunctionLocalType(XElement xe) { return XTypedServices.ToXTypedElement<FunctionLocalType>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
                    
                    public FunctionLocalType() {
                    }
                    
                    /// <summary>
                    /// <para>
                    /// Occurrence: required
                    /// </para>
                    /// </summary>
                    public string name {
                        get {
                            XAttribute x = this.Attribute(XName.Get("name", ""));
                            return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
                        }
                        set {
                            this.SetAttribute(XName.Get("name", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
                        }
                    }
                    
                    [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                    XName IXMetaData.SchemaName {
                        get {
                            return XName.Get("Function", "xmlns://www.fortifysoftware.com/schema/fvdl");
                        }
                    }
                    
                    [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                    SchemaOrigin IXMetaData.TypeOrigin {
                        get {
                            return SchemaOrigin.Fragment;
                        }
                    }
                    
                    [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                    ILinqToXsdTypeManager IXMetaData.TypeManager {
                        get {
                            return LinqToXsdTypeManager.Instance;
                        }
                    }
                    
                    public override XTypedElement Clone() {
                        return XTypedServices.CloneXTypedElement<FunctionLocalType>(this);
                    }
                    
                    ContentModelEntity IXMetaData.GetContentModel() {
                        return ContentModelEntity.Default;
                    }
                }
                
                public partial class FunctionDeclarationSourceLocationLocalType : XTypedElement, IXMetaData {
                    
         public static explicit operator FunctionDeclarationSourceLocationLocalType(XElement xe) { return XTypedServices.ToXTypedElement<FunctionDeclarationSourceLocationLocalType>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
                    
                    public FunctionDeclarationSourceLocationLocalType() {
                    }
                    
                    /// <summary>
                    /// <para>
                    /// Occurrence: required
                    /// </para>
                    /// </summary>
                    public string path {
                        get {
                            XAttribute x = this.Attribute(XName.Get("path", ""));
                            return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
                        }
                        set {
                            this.SetAttribute(XName.Get("path", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
                        }
                    }
                    
                    /// <summary>
                    /// <para>
                    /// Occurrence: required
                    /// </para>
                    /// </summary>
                    public uint line {
                        get {
                            XAttribute x = this.Attribute(XName.Get("line", ""));
                            return XTypedServices.ParseValue<uint>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.UnsignedInt).Datatype);
                        }
                        set {
                            this.SetAttribute(XName.Get("line", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.UnsignedInt).Datatype);
                        }
                    }
                    
                    /// <summary>
                    /// <para>
                    /// Occurrence: required
                    /// </para>
                    /// </summary>
                    public uint lineEnd {
                        get {
                            XAttribute x = this.Attribute(XName.Get("lineEnd", ""));
                            return XTypedServices.ParseValue<uint>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.UnsignedInt).Datatype);
                        }
                        set {
                            this.SetAttribute(XName.Get("lineEnd", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.UnsignedInt).Datatype);
                        }
                    }
                    
                    /// <summary>
                    /// <para>
                    /// Occurrence: required
                    /// </para>
                    /// </summary>
                    public uint colStart {
                        get {
                            XAttribute x = this.Attribute(XName.Get("colStart", ""));
                            return XTypedServices.ParseValue<uint>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.UnsignedInt).Datatype);
                        }
                        set {
                            this.SetAttribute(XName.Get("colStart", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.UnsignedInt).Datatype);
                        }
                    }
                    
                    /// <summary>
                    /// <para>
                    /// Occurrence: required
                    /// </para>
                    /// </summary>
                    public uint colEnd {
                        get {
                            XAttribute x = this.Attribute(XName.Get("colEnd", ""));
                            return XTypedServices.ParseValue<uint>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.UnsignedInt).Datatype);
                        }
                        set {
                            this.SetAttribute(XName.Get("colEnd", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.UnsignedInt).Datatype);
                        }
                    }
                    
                    [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                    XName IXMetaData.SchemaName {
                        get {
                            return XName.Get("FunctionDeclarationSourceLocation", "xmlns://www.fortifysoftware.com/schema/fvdl");
                        }
                    }
                    
                    [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                    SchemaOrigin IXMetaData.TypeOrigin {
                        get {
                            return SchemaOrigin.Fragment;
                        }
                    }
                    
                    [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                    ILinqToXsdTypeManager IXMetaData.TypeManager {
                        get {
                            return LinqToXsdTypeManager.Instance;
                        }
                    }
                    
                    public override XTypedElement Clone() {
                        return XTypedServices.CloneXTypedElement<FunctionDeclarationSourceLocationLocalType>(this);
                    }
                    
                    ContentModelEntity IXMetaData.GetContentModel() {
                        return ContentModelEntity.Default;
                    }
                }
            }
        }
        
        /// <summary>
        /// <para>
        /// Regular expression: (Node+)
        /// </para>
        /// </summary>
        public partial class UnifiedNodePoolLocalType : XTypedElement, IXMetaData {
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            private XTypedList<NodeLocalType> NodeField;
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            private static ContentModelEntity contentModel;
            
         public static explicit operator UnifiedNodePoolLocalType(XElement xe) { return XTypedServices.ToXTypedElement<UnifiedNodePoolLocalType>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
            
            static UnifiedNodePoolLocalType() {
                BuildElementDictionary();
                contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("Node", "xmlns://www.fortifysoftware.com/schema/fvdl")));
            }
            
            /// <summary>
            /// <para>
            /// Regular expression: (Node+)
            /// </para>
            /// </summary>
            public UnifiedNodePoolLocalType() {
            }
            
            /// <summary>
            /// <para>
            /// Occurrence: required, repeating
            /// </para>
            /// <para>
            /// Regular expression: (Node+)
            /// </para>
            /// </summary>
            public IList<xmlns.www.fortifysoftware.com.schema.fvdl.FVDL.UnifiedNodePoolLocalType.NodeLocalType> Node {
                get {
                    if ((this.NodeField == null)) {
                        this.NodeField = new XTypedList<NodeLocalType>(this, LinqToXsdTypeManager.Instance, XName.Get("Node", "xmlns://www.fortifysoftware.com/schema/fvdl"));
                    }
                    return this.NodeField;
                }
                set {
                    if ((value == null)) {
                        this.NodeField = null;
                    }
                    else {
                        if ((this.NodeField == null)) {
                            this.NodeField = XTypedList<NodeLocalType>.Initialize(this, LinqToXsdTypeManager.Instance, value, XName.Get("Node", "xmlns://www.fortifysoftware.com/schema/fvdl"));
                        }
                        else {
                            XTypedServices.SetList<NodeLocalType>(this.NodeField, value);
                        }
                    }
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
                get {
                    return localElementDictionary;
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            XName IXMetaData.SchemaName {
                get {
                    return XName.Get("UnifiedNodePool", "xmlns://www.fortifysoftware.com/schema/fvdl");
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            SchemaOrigin IXMetaData.TypeOrigin {
                get {
                    return SchemaOrigin.Fragment;
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            ILinqToXsdTypeManager IXMetaData.TypeManager {
                get {
                    return LinqToXsdTypeManager.Instance;
                }
            }
            
            public override XTypedElement Clone() {
                return XTypedServices.CloneXTypedElement<UnifiedNodePoolLocalType>(this);
            }
            
            private static void BuildElementDictionary() {
                localElementDictionary.Add(XName.Get("Node", "xmlns://www.fortifysoftware.com/schema/fvdl"), typeof(NodeLocalType));
            }
            
            ContentModelEntity IXMetaData.GetContentModel() {
                return contentModel;
            }
            
            /// <summary>
            /// <para>
            /// Regular expression: (SourceLocation, SecondaryLocation?, Action, Reason?, Knowledge?)
            /// </para>
            /// </summary>
            public partial class NodeLocalType : XTypedElement, IXMetaData {
                
                [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();
                
                [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                private static ContentModelEntity contentModel;
                
         public static explicit operator NodeLocalType(XElement xe) { return XTypedServices.ToXTypedElement<NodeLocalType>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
                
                static NodeLocalType() {
                    BuildElementDictionary();
                    contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("SourceLocation", "xmlns://www.fortifysoftware.com/schema/fvdl")), new NamedContentModelEntity(XName.Get("SecondaryLocation", "xmlns://www.fortifysoftware.com/schema/fvdl")), new NamedContentModelEntity(XName.Get("Action", "xmlns://www.fortifysoftware.com/schema/fvdl")), new NamedContentModelEntity(XName.Get("Reason", "xmlns://www.fortifysoftware.com/schema/fvdl")), new NamedContentModelEntity(XName.Get("Knowledge", "xmlns://www.fortifysoftware.com/schema/fvdl")));
                }
                
                /// <summary>
                /// <para>
                /// Regular expression: (SourceLocation, SecondaryLocation?, Action, Reason?, Knowledge?)
                /// </para>
                /// </summary>
                public NodeLocalType() {
                }
                
                /// <summary>
                /// <para>
                /// Occurrence: required
                /// </para>
                /// <para>
                /// Regular expression: (SourceLocation, SecondaryLocation?, Action, Reason?, Knowledge?)
                /// </para>
                /// </summary>
                public SourceLocationLocalType SourceLocation {
                    get {
                        XElement x = this.GetElement(XName.Get("SourceLocation", "xmlns://www.fortifysoftware.com/schema/fvdl"));
                        return ((SourceLocationLocalType)(x));
                    }
                    set {
                        this.SetElement(XName.Get("SourceLocation", "xmlns://www.fortifysoftware.com/schema/fvdl"), value);
                    }
                }
                
                /// <summary>
                /// <para>
                /// Occurrence: optional
                /// </para>
                /// <para>
                /// Regular expression: (SourceLocation, SecondaryLocation?, Action, Reason?, Knowledge?)
                /// </para>
                /// </summary>
                public SecondaryLocationLocalType SecondaryLocation {
                    get {
                        XElement x = this.GetElement(XName.Get("SecondaryLocation", "xmlns://www.fortifysoftware.com/schema/fvdl"));
                        return ((SecondaryLocationLocalType)(x));
                    }
                    set {
                        this.SetElement(XName.Get("SecondaryLocation", "xmlns://www.fortifysoftware.com/schema/fvdl"), value);
                    }
                }
                
                /// <summary>
                /// <para>
                /// Occurrence: required
                /// </para>
                /// <para>
                /// Regular expression: (SourceLocation, SecondaryLocation?, Action, Reason?, Knowledge?)
                /// </para>
                /// </summary>
                public ActionLocalType Action {
                    get {
                        XElement x = this.GetElement(XName.Get("Action", "xmlns://www.fortifysoftware.com/schema/fvdl"));
                        return ((ActionLocalType)(x));
                    }
                    set {
                        this.SetElement(XName.Get("Action", "xmlns://www.fortifysoftware.com/schema/fvdl"), value);
                    }
                }
                
                /// <summary>
                /// <para>
                /// Occurrence: optional
                /// </para>
                /// <para>
                /// Regular expression: (SourceLocation, SecondaryLocation?, Action, Reason?, Knowledge?)
                /// </para>
                /// </summary>
                public ReasonLocalType Reason {
                    get {
                        XElement x = this.GetElement(XName.Get("Reason", "xmlns://www.fortifysoftware.com/schema/fvdl"));
                        return ((ReasonLocalType)(x));
                    }
                    set {
                        this.SetElement(XName.Get("Reason", "xmlns://www.fortifysoftware.com/schema/fvdl"), value);
                    }
                }
                
                /// <summary>
                /// <para>
                /// Occurrence: optional
                /// </para>
                /// <para>
                /// Regular expression: (SourceLocation, SecondaryLocation?, Action, Reason?, Knowledge?)
                /// </para>
                /// </summary>
                public KnowledgeLocalType Knowledge {
                    get {
                        XElement x = this.GetElement(XName.Get("Knowledge", "xmlns://www.fortifysoftware.com/schema/fvdl"));
                        return ((KnowledgeLocalType)(x));
                    }
                    set {
                        this.SetElement(XName.Get("Knowledge", "xmlns://www.fortifysoftware.com/schema/fvdl"), value);
                    }
                }
                
                /// <summary>
                /// <para>
                /// Occurrence: required
                /// </para>
                /// </summary>
                public uint id {
                    get {
                        XAttribute x = this.Attribute(XName.Get("id", ""));
                        return XTypedServices.ParseValue<uint>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.UnsignedInt).Datatype);
                    }
                    set {
                        this.SetAttribute(XName.Get("id", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.UnsignedInt).Datatype);
                    }
                }
                
                [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
                    get {
                        return localElementDictionary;
                    }
                }
                
                [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                XName IXMetaData.SchemaName {
                    get {
                        return XName.Get("Node", "xmlns://www.fortifysoftware.com/schema/fvdl");
                    }
                }
                
                [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                SchemaOrigin IXMetaData.TypeOrigin {
                    get {
                        return SchemaOrigin.Fragment;
                    }
                }
                
                [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                ILinqToXsdTypeManager IXMetaData.TypeManager {
                    get {
                        return LinqToXsdTypeManager.Instance;
                    }
                }
                
                public override XTypedElement Clone() {
                    return XTypedServices.CloneXTypedElement<NodeLocalType>(this);
                }
                
                private static void BuildElementDictionary() {
                    localElementDictionary.Add(XName.Get("SourceLocation", "xmlns://www.fortifysoftware.com/schema/fvdl"), typeof(SourceLocationLocalType));
                    localElementDictionary.Add(XName.Get("SecondaryLocation", "xmlns://www.fortifysoftware.com/schema/fvdl"), typeof(SecondaryLocationLocalType));
                    localElementDictionary.Add(XName.Get("Action", "xmlns://www.fortifysoftware.com/schema/fvdl"), typeof(ActionLocalType));
                    localElementDictionary.Add(XName.Get("Reason", "xmlns://www.fortifysoftware.com/schema/fvdl"), typeof(ReasonLocalType));
                    localElementDictionary.Add(XName.Get("Knowledge", "xmlns://www.fortifysoftware.com/schema/fvdl"), typeof(KnowledgeLocalType));
                }
                
                ContentModelEntity IXMetaData.GetContentModel() {
                    return contentModel;
                }
                
                public partial class SourceLocationLocalType : XTypedElement, IXMetaData {
                    
         public static explicit operator SourceLocationLocalType(XElement xe) { return XTypedServices.ToXTypedElement<SourceLocationLocalType>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
                    
                    public SourceLocationLocalType() {
                    }
                    
                    /// <summary>
                    /// <para>
                    /// Occurrence: required
                    /// </para>
                    /// </summary>
                    public string path {
                        get {
                            XAttribute x = this.Attribute(XName.Get("path", ""));
                            return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
                        }
                        set {
                            this.SetAttribute(XName.Get("path", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
                        }
                    }
                    
                    /// <summary>
                    /// <para>
                    /// Occurrence: required
                    /// </para>
                    /// </summary>
                    public uint line {
                        get {
                            XAttribute x = this.Attribute(XName.Get("line", ""));
                            return XTypedServices.ParseValue<uint>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.UnsignedInt).Datatype);
                        }
                        set {
                            this.SetAttribute(XName.Get("line", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.UnsignedInt).Datatype);
                        }
                    }
                    
                    /// <summary>
                    /// <para>
                    /// Occurrence: required
                    /// </para>
                    /// </summary>
                    public uint lineEnd {
                        get {
                            XAttribute x = this.Attribute(XName.Get("lineEnd", ""));
                            return XTypedServices.ParseValue<uint>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.UnsignedInt).Datatype);
                        }
                        set {
                            this.SetAttribute(XName.Get("lineEnd", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.UnsignedInt).Datatype);
                        }
                    }
                    
                    /// <summary>
                    /// <para>
                    /// Occurrence: required
                    /// </para>
                    /// </summary>
                    public uint colStart {
                        get {
                            XAttribute x = this.Attribute(XName.Get("colStart", ""));
                            return XTypedServices.ParseValue<uint>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.UnsignedInt).Datatype);
                        }
                        set {
                            this.SetAttribute(XName.Get("colStart", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.UnsignedInt).Datatype);
                        }
                    }
                    
                    /// <summary>
                    /// <para>
                    /// Occurrence: required
                    /// </para>
                    /// </summary>
                    public uint colEnd {
                        get {
                            XAttribute x = this.Attribute(XName.Get("colEnd", ""));
                            return XTypedServices.ParseValue<uint>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.UnsignedInt).Datatype);
                        }
                        set {
                            this.SetAttribute(XName.Get("colEnd", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.UnsignedInt).Datatype);
                        }
                    }
                    
                    /// <summary>
                    /// <para>
                    /// Occurrence: required
                    /// </para>
                    /// </summary>
                    public uint contextId {
                        get {
                            XAttribute x = this.Attribute(XName.Get("contextId", ""));
                            return XTypedServices.ParseValue<uint>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.UnsignedInt).Datatype);
                        }
                        set {
                            this.SetAttribute(XName.Get("contextId", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.UnsignedInt).Datatype);
                        }
                    }
                    
                    /// <summary>
                    /// <para>
                    /// Occurrence: required
                    /// </para>
                    /// </summary>
                    public string snippet {
                        get {
                            XAttribute x = this.Attribute(XName.Get("snippet", ""));
                            return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
                        }
                        set {
                            this.SetAttribute(XName.Get("snippet", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
                        }
                    }
                    
                    [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                    XName IXMetaData.SchemaName {
                        get {
                            return XName.Get("SourceLocation", "xmlns://www.fortifysoftware.com/schema/fvdl");
                        }
                    }
                    
                    [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                    SchemaOrigin IXMetaData.TypeOrigin {
                        get {
                            return SchemaOrigin.Fragment;
                        }
                    }
                    
                    [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                    ILinqToXsdTypeManager IXMetaData.TypeManager {
                        get {
                            return LinqToXsdTypeManager.Instance;
                        }
                    }
                    
                    public override XTypedElement Clone() {
                        return XTypedServices.CloneXTypedElement<SourceLocationLocalType>(this);
                    }
                    
                    ContentModelEntity IXMetaData.GetContentModel() {
                        return ContentModelEntity.Default;
                    }
                }
                
                public partial class SecondaryLocationLocalType : XTypedElement, IXMetaData {
                    
         public static explicit operator SecondaryLocationLocalType(XElement xe) { return XTypedServices.ToXTypedElement<SecondaryLocationLocalType>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
                    
                    public SecondaryLocationLocalType() {
                    }
                    
                    /// <summary>
                    /// <para>
                    /// Occurrence: required
                    /// </para>
                    /// </summary>
                    public string path {
                        get {
                            XAttribute x = this.Attribute(XName.Get("path", ""));
                            return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
                        }
                        set {
                            this.SetAttribute(XName.Get("path", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
                        }
                    }
                    
                    /// <summary>
                    /// <para>
                    /// Occurrence: required
                    /// </para>
                    /// </summary>
                    public uint line {
                        get {
                            XAttribute x = this.Attribute(XName.Get("line", ""));
                            return XTypedServices.ParseValue<uint>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.UnsignedInt).Datatype);
                        }
                        set {
                            this.SetAttribute(XName.Get("line", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.UnsignedInt).Datatype);
                        }
                    }
                    
                    /// <summary>
                    /// <para>
                    /// Occurrence: required
                    /// </para>
                    /// </summary>
                    public uint lineEnd {
                        get {
                            XAttribute x = this.Attribute(XName.Get("lineEnd", ""));
                            return XTypedServices.ParseValue<uint>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.UnsignedInt).Datatype);
                        }
                        set {
                            this.SetAttribute(XName.Get("lineEnd", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.UnsignedInt).Datatype);
                        }
                    }
                    
                    /// <summary>
                    /// <para>
                    /// Occurrence: required
                    /// </para>
                    /// </summary>
                    public uint colStart {
                        get {
                            XAttribute x = this.Attribute(XName.Get("colStart", ""));
                            return XTypedServices.ParseValue<uint>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.UnsignedInt).Datatype);
                        }
                        set {
                            this.SetAttribute(XName.Get("colStart", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.UnsignedInt).Datatype);
                        }
                    }
                    
                    /// <summary>
                    /// <para>
                    /// Occurrence: required
                    /// </para>
                    /// </summary>
                    public uint colEnd {
                        get {
                            XAttribute x = this.Attribute(XName.Get("colEnd", ""));
                            return XTypedServices.ParseValue<uint>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.UnsignedInt).Datatype);
                        }
                        set {
                            this.SetAttribute(XName.Get("colEnd", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.UnsignedInt).Datatype);
                        }
                    }
                    
                    /// <summary>
                    /// <para>
                    /// Occurrence: required
                    /// </para>
                    /// </summary>
                    public string snippet {
                        get {
                            XAttribute x = this.Attribute(XName.Get("snippet", ""));
                            return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
                        }
                        set {
                            this.SetAttribute(XName.Get("snippet", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
                        }
                    }
                    
                    [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                    XName IXMetaData.SchemaName {
                        get {
                            return XName.Get("SecondaryLocation", "xmlns://www.fortifysoftware.com/schema/fvdl");
                        }
                    }
                    
                    [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                    SchemaOrigin IXMetaData.TypeOrigin {
                        get {
                            return SchemaOrigin.Fragment;
                        }
                    }
                    
                    [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                    ILinqToXsdTypeManager IXMetaData.TypeManager {
                        get {
                            return LinqToXsdTypeManager.Instance;
                        }
                    }
                    
                    public override XTypedElement Clone() {
                        return XTypedServices.CloneXTypedElement<SecondaryLocationLocalType>(this);
                    }
                    
                    ContentModelEntity IXMetaData.GetContentModel() {
                        return ContentModelEntity.Default;
                    }
                }
                
                public partial class ActionLocalType : XTypedElement, IXMetaData {
                    
         public static explicit operator ActionLocalType(XElement xe) { return XTypedServices.ToXTypedElement<ActionLocalType>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
                    
                    public ActionLocalType() {
                    }
                    
                    public string TypedValue {
                        get {
                            XElement x = this.Untyped;
                            return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
                        }
                        set {
                            this.SetValue(value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
                        }
                    }
                    
                    /// <summary>
                    /// <para>
                    /// Occurrence: required
                    /// </para>
                    /// </summary>
                    public string type {
                        get {
                            XAttribute x = this.Attribute(XName.Get("type", ""));
                            return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
                        }
                        set {
                            this.SetAttribute(XName.Get("type", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
                        }
                    }
                    
                    [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                    XName IXMetaData.SchemaName {
                        get {
                            return XName.Get("Action", "xmlns://www.fortifysoftware.com/schema/fvdl");
                        }
                    }
                    
                    [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                    SchemaOrigin IXMetaData.TypeOrigin {
                        get {
                            return SchemaOrigin.Fragment;
                        }
                    }
                    
                    [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                    ILinqToXsdTypeManager IXMetaData.TypeManager {
                        get {
                            return LinqToXsdTypeManager.Instance;
                        }
                    }
                    
                    public override XTypedElement Clone() {
                        return XTypedServices.CloneXTypedElement<ActionLocalType>(this);
                    }
                    
                    ContentModelEntity IXMetaData.GetContentModel() {
                        return ContentModelEntity.Default;
                    }
                }
                
                /// <summary>
                /// <para>
                /// Regular expression: (Trace?, Rule?)
                /// </para>
                /// </summary>
                public partial class ReasonLocalType : XTypedElement, IXMetaData {
                    
                    [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                    static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();
                    
                    [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                    private static ContentModelEntity contentModel;
                    
         public static explicit operator ReasonLocalType(XElement xe) { return XTypedServices.ToXTypedElement<ReasonLocalType>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
                    
                    static ReasonLocalType() {
                        BuildElementDictionary();
                        contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("Trace", "xmlns://www.fortifysoftware.com/schema/fvdl")), new NamedContentModelEntity(XName.Get("Rule", "xmlns://www.fortifysoftware.com/schema/fvdl")));
                    }
                    
                    /// <summary>
                    /// <para>
                    /// Regular expression: (Trace?, Rule?)
                    /// </para>
                    /// </summary>
                    public ReasonLocalType() {
                    }
                    
                    /// <summary>
                    /// <para>
                    /// Occurrence: optional
                    /// </para>
                    /// <para>
                    /// Regular expression: (Trace?, Rule?)
                    /// </para>
                    /// </summary>
                    public TraceLocalType Trace {
                        get {
                            XElement x = this.GetElement(XName.Get("Trace", "xmlns://www.fortifysoftware.com/schema/fvdl"));
                            return ((TraceLocalType)(x));
                        }
                        set {
                            this.SetElement(XName.Get("Trace", "xmlns://www.fortifysoftware.com/schema/fvdl"), value);
                        }
                    }
                    
                    /// <summary>
                    /// <para>
                    /// Occurrence: optional
                    /// </para>
                    /// <para>
                    /// Regular expression: (Trace?, Rule?)
                    /// </para>
                    /// </summary>
                    public RuleLocalType Rule {
                        get {
                            XElement x = this.GetElement(XName.Get("Rule", "xmlns://www.fortifysoftware.com/schema/fvdl"));
                            return ((RuleLocalType)(x));
                        }
                        set {
                            this.SetElement(XName.Get("Rule", "xmlns://www.fortifysoftware.com/schema/fvdl"), value);
                        }
                    }
                    
                    [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                    Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
                        get {
                            return localElementDictionary;
                        }
                    }
                    
                    [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                    XName IXMetaData.SchemaName {
                        get {
                            return XName.Get("Reason", "xmlns://www.fortifysoftware.com/schema/fvdl");
                        }
                    }
                    
                    [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                    SchemaOrigin IXMetaData.TypeOrigin {
                        get {
                            return SchemaOrigin.Fragment;
                        }
                    }
                    
                    [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                    ILinqToXsdTypeManager IXMetaData.TypeManager {
                        get {
                            return LinqToXsdTypeManager.Instance;
                        }
                    }
                    
                    public override XTypedElement Clone() {
                        return XTypedServices.CloneXTypedElement<ReasonLocalType>(this);
                    }
                    
                    private static void BuildElementDictionary() {
                        localElementDictionary.Add(XName.Get("Trace", "xmlns://www.fortifysoftware.com/schema/fvdl"), typeof(TraceLocalType));
                        localElementDictionary.Add(XName.Get("Rule", "xmlns://www.fortifysoftware.com/schema/fvdl"), typeof(RuleLocalType));
                    }
                    
                    ContentModelEntity IXMetaData.GetContentModel() {
                        return contentModel;
                    }
                    
                    /// <summary>
                    /// <para>
                    /// Regular expression: (Primary)
                    /// </para>
                    /// </summary>
                    public partial class TraceLocalType : XTypedElement, IXMetaData {
                        
                        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                        static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();
                        
                        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                        private static ContentModelEntity contentModel;
                        
         public static explicit operator TraceLocalType(XElement xe) { return XTypedServices.ToXTypedElement<TraceLocalType>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
                        
                        static TraceLocalType() {
                            BuildElementDictionary();
                            contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("Primary", "xmlns://www.fortifysoftware.com/schema/fvdl")));
                        }
                        
                        /// <summary>
                        /// <para>
                        /// Regular expression: (Primary)
                        /// </para>
                        /// </summary>
                        public TraceLocalType() {
                        }
                        
                        /// <summary>
                        /// <para>
                        /// Occurrence: required
                        /// </para>
                        /// <para>
                        /// Regular expression: (Primary)
                        /// </para>
                        /// </summary>
                        public PrimaryLocalType Primary {
                            get {
                                XElement x = this.GetElement(XName.Get("Primary", "xmlns://www.fortifysoftware.com/schema/fvdl"));
                                return ((PrimaryLocalType)(x));
                            }
                            set {
                                this.SetElement(XName.Get("Primary", "xmlns://www.fortifysoftware.com/schema/fvdl"), value);
                            }
                        }
                        
                        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
                            get {
                                return localElementDictionary;
                            }
                        }
                        
                        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                        XName IXMetaData.SchemaName {
                            get {
                                return XName.Get("Trace", "xmlns://www.fortifysoftware.com/schema/fvdl");
                            }
                        }
                        
                        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                        SchemaOrigin IXMetaData.TypeOrigin {
                            get {
                                return SchemaOrigin.Fragment;
                            }
                        }
                        
                        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                        ILinqToXsdTypeManager IXMetaData.TypeManager {
                            get {
                                return LinqToXsdTypeManager.Instance;
                            }
                        }
                        
                        public override XTypedElement Clone() {
                            return XTypedServices.CloneXTypedElement<TraceLocalType>(this);
                        }
                        
                        private static void BuildElementDictionary() {
                            localElementDictionary.Add(XName.Get("Primary", "xmlns://www.fortifysoftware.com/schema/fvdl"), typeof(PrimaryLocalType));
                        }
                        
                        ContentModelEntity IXMetaData.GetContentModel() {
                            return contentModel;
                        }
                        
                        /// <summary>
                        /// <para>
                        /// Regular expression: (Entry+)
                        /// </para>
                        /// </summary>
                        public partial class PrimaryLocalType : XTypedElement, IXMetaData {
                            
                            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                            private XTypedList<EntryLocalType> EntryField;
                            
                            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                            static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();
                            
                            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                            private static ContentModelEntity contentModel;
                            
         public static explicit operator PrimaryLocalType(XElement xe) { return XTypedServices.ToXTypedElement<PrimaryLocalType>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
                            
                            static PrimaryLocalType() {
                                BuildElementDictionary();
                                contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("Entry", "xmlns://www.fortifysoftware.com/schema/fvdl")));
                            }
                            
                            /// <summary>
                            /// <para>
                            /// Regular expression: (Entry+)
                            /// </para>
                            /// </summary>
                            public PrimaryLocalType() {
                            }
                            
                            /// <summary>
                            /// <para>
                            /// Occurrence: required, repeating
                            /// </para>
                            /// <para>
                            /// Regular expression: (Entry+)
                            /// </para>
                            /// </summary>
                            public IList<xmlns.www.fortifysoftware.com.schema.fvdl.FVDL.UnifiedNodePoolLocalType.NodeLocalType.ReasonLocalType.TraceLocalType.PrimaryLocalType.EntryLocalType> Entry {
                                get {
                                    if ((this.EntryField == null)) {
                                        this.EntryField = new XTypedList<EntryLocalType>(this, LinqToXsdTypeManager.Instance, XName.Get("Entry", "xmlns://www.fortifysoftware.com/schema/fvdl"));
                                    }
                                    return this.EntryField;
                                }
                                set {
                                    if ((value == null)) {
                                        this.EntryField = null;
                                    }
                                    else {
                                        if ((this.EntryField == null)) {
                                            this.EntryField = XTypedList<EntryLocalType>.Initialize(this, LinqToXsdTypeManager.Instance, value, XName.Get("Entry", "xmlns://www.fortifysoftware.com/schema/fvdl"));
                                        }
                                        else {
                                            XTypedServices.SetList<EntryLocalType>(this.EntryField, value);
                                        }
                                    }
                                }
                            }
                            
                            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                            Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
                                get {
                                    return localElementDictionary;
                                }
                            }
                            
                            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                            XName IXMetaData.SchemaName {
                                get {
                                    return XName.Get("Primary", "xmlns://www.fortifysoftware.com/schema/fvdl");
                                }
                            }
                            
                            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                            SchemaOrigin IXMetaData.TypeOrigin {
                                get {
                                    return SchemaOrigin.Fragment;
                                }
                            }
                            
                            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                            ILinqToXsdTypeManager IXMetaData.TypeManager {
                                get {
                                    return LinqToXsdTypeManager.Instance;
                                }
                            }
                            
                            public override XTypedElement Clone() {
                                return XTypedServices.CloneXTypedElement<PrimaryLocalType>(this);
                            }
                            
                            private static void BuildElementDictionary() {
                                localElementDictionary.Add(XName.Get("Entry", "xmlns://www.fortifysoftware.com/schema/fvdl"), typeof(EntryLocalType));
                            }
                            
                            ContentModelEntity IXMetaData.GetContentModel() {
                                return contentModel;
                            }
                            
                            /// <summary>
                            /// <para>
                            /// Regular expression: (NodeRef)
                            /// </para>
                            /// </summary>
                            public partial class EntryLocalType : XTypedElement, IXMetaData {
                                
                                [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                                static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();
                                
                                [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                                private static ContentModelEntity contentModel;
                                
         public static explicit operator EntryLocalType(XElement xe) { return XTypedServices.ToXTypedElement<EntryLocalType>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
                                
                                static EntryLocalType() {
                                    BuildElementDictionary();
                                    contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("NodeRef", "xmlns://www.fortifysoftware.com/schema/fvdl")));
                                }
                                
                                /// <summary>
                                /// <para>
                                /// Regular expression: (NodeRef)
                                /// </para>
                                /// </summary>
                                public EntryLocalType() {
                                }
                                
                                /// <summary>
                                /// <para>
                                /// Occurrence: required
                                /// </para>
                                /// <para>
                                /// Regular expression: (NodeRef)
                                /// </para>
                                /// </summary>
                                public NodeRefLocalType NodeRef {
                                    get {
                                        XElement x = this.GetElement(XName.Get("NodeRef", "xmlns://www.fortifysoftware.com/schema/fvdl"));
                                        return ((NodeRefLocalType)(x));
                                    }
                                    set {
                                        this.SetElement(XName.Get("NodeRef", "xmlns://www.fortifysoftware.com/schema/fvdl"), value);
                                    }
                                }
                                
                                [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                                Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
                                    get {
                                        return localElementDictionary;
                                    }
                                }
                                
                                [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                                XName IXMetaData.SchemaName {
                                    get {
                                        return XName.Get("Entry", "xmlns://www.fortifysoftware.com/schema/fvdl");
                                    }
                                }
                                
                                [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                                SchemaOrigin IXMetaData.TypeOrigin {
                                    get {
                                        return SchemaOrigin.Fragment;
                                    }
                                }
                                
                                [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                                ILinqToXsdTypeManager IXMetaData.TypeManager {
                                    get {
                                        return LinqToXsdTypeManager.Instance;
                                    }
                                }
                                
                                public override XTypedElement Clone() {
                                    return XTypedServices.CloneXTypedElement<EntryLocalType>(this);
                                }
                                
                                private static void BuildElementDictionary() {
                                    localElementDictionary.Add(XName.Get("NodeRef", "xmlns://www.fortifysoftware.com/schema/fvdl"), typeof(NodeRefLocalType));
                                }
                                
                                ContentModelEntity IXMetaData.GetContentModel() {
                                    return contentModel;
                                }
                                
                                public partial class NodeRefLocalType : XTypedElement, IXMetaData {
                                    
         public static explicit operator NodeRefLocalType(XElement xe) { return XTypedServices.ToXTypedElement<NodeRefLocalType>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
                                    
                                    public NodeRefLocalType() {
                                    }
                                    
                                    /// <summary>
                                    /// <para>
                                    /// Occurrence: required
                                    /// </para>
                                    /// </summary>
                                    public uint id {
                                        get {
                                            XAttribute x = this.Attribute(XName.Get("id", ""));
                                            return XTypedServices.ParseValue<uint>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.UnsignedInt).Datatype);
                                        }
                                        set {
                                            this.SetAttribute(XName.Get("id", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.UnsignedInt).Datatype);
                                        }
                                    }
                                    
                                    [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                                    XName IXMetaData.SchemaName {
                                        get {
                                            return XName.Get("NodeRef", "xmlns://www.fortifysoftware.com/schema/fvdl");
                                        }
                                    }
                                    
                                    [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                                    SchemaOrigin IXMetaData.TypeOrigin {
                                        get {
                                            return SchemaOrigin.Fragment;
                                        }
                                    }
                                    
                                    [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                                    ILinqToXsdTypeManager IXMetaData.TypeManager {
                                        get {
                                            return LinqToXsdTypeManager.Instance;
                                        }
                                    }
                                    
                                    public override XTypedElement Clone() {
                                        return XTypedServices.CloneXTypedElement<NodeRefLocalType>(this);
                                    }
                                    
                                    ContentModelEntity IXMetaData.GetContentModel() {
                                        return ContentModelEntity.Default;
                                    }
                                }
                            }
                        }
                    }
                    
                    public partial class RuleLocalType : XTypedElement, IXMetaData {
                        
         public static explicit operator RuleLocalType(XElement xe) { return XTypedServices.ToXTypedElement<RuleLocalType>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
                        
                        public RuleLocalType() {
                        }
                        
                        /// <summary>
                        /// <para>
                        /// Occurrence: required
                        /// </para>
                        /// </summary>
                        public string ruleID {
                            get {
                                XAttribute x = this.Attribute(XName.Get("ruleID", ""));
                                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
                            }
                            set {
                                this.SetAttribute(XName.Get("ruleID", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
                            }
                        }
                        
                        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                        XName IXMetaData.SchemaName {
                            get {
                                return XName.Get("Rule", "xmlns://www.fortifysoftware.com/schema/fvdl");
                            }
                        }
                        
                        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                        SchemaOrigin IXMetaData.TypeOrigin {
                            get {
                                return SchemaOrigin.Fragment;
                            }
                        }
                        
                        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                        ILinqToXsdTypeManager IXMetaData.TypeManager {
                            get {
                                return LinqToXsdTypeManager.Instance;
                            }
                        }
                        
                        public override XTypedElement Clone() {
                            return XTypedServices.CloneXTypedElement<RuleLocalType>(this);
                        }
                        
                        ContentModelEntity IXMetaData.GetContentModel() {
                            return ContentModelEntity.Default;
                        }
                    }
                }
                
                /// <summary>
                /// <para>
                /// Regular expression: (Fact)
                /// </para>
                /// </summary>
                public partial class KnowledgeLocalType : XTypedElement, IXMetaData {
                    
                    [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                    static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();
                    
                    [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                    private static ContentModelEntity contentModel;
                    
         public static explicit operator KnowledgeLocalType(XElement xe) { return XTypedServices.ToXTypedElement<KnowledgeLocalType>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
                    
                    static KnowledgeLocalType() {
                        BuildElementDictionary();
                        contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("Fact", "xmlns://www.fortifysoftware.com/schema/fvdl")));
                    }
                    
                    /// <summary>
                    /// <para>
                    /// Regular expression: (Fact)
                    /// </para>
                    /// </summary>
                    public KnowledgeLocalType() {
                    }
                    
                    /// <summary>
                    /// <para>
                    /// Occurrence: required
                    /// </para>
                    /// <para>
                    /// Regular expression: (Fact)
                    /// </para>
                    /// </summary>
                    public FactLocalType Fact {
                        get {
                            XElement x = this.GetElement(XName.Get("Fact", "xmlns://www.fortifysoftware.com/schema/fvdl"));
                            return ((FactLocalType)(x));
                        }
                        set {
                            this.SetElement(XName.Get("Fact", "xmlns://www.fortifysoftware.com/schema/fvdl"), value);
                        }
                    }
                    
                    [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                    Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
                        get {
                            return localElementDictionary;
                        }
                    }
                    
                    [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                    XName IXMetaData.SchemaName {
                        get {
                            return XName.Get("Knowledge", "xmlns://www.fortifysoftware.com/schema/fvdl");
                        }
                    }
                    
                    [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                    SchemaOrigin IXMetaData.TypeOrigin {
                        get {
                            return SchemaOrigin.Fragment;
                        }
                    }
                    
                    [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                    ILinqToXsdTypeManager IXMetaData.TypeManager {
                        get {
                            return LinqToXsdTypeManager.Instance;
                        }
                    }
                    
                    public override XTypedElement Clone() {
                        return XTypedServices.CloneXTypedElement<KnowledgeLocalType>(this);
                    }
                    
                    private static void BuildElementDictionary() {
                        localElementDictionary.Add(XName.Get("Fact", "xmlns://www.fortifysoftware.com/schema/fvdl"), typeof(FactLocalType));
                    }
                    
                    ContentModelEntity IXMetaData.GetContentModel() {
                        return contentModel;
                    }
                    
                    public partial class FactLocalType : XTypedElement, IXMetaData {
                        
         public static explicit operator FactLocalType(XElement xe) { return XTypedServices.ToXTypedElement<FactLocalType>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
                        
                        public FactLocalType() {
                        }
                        
                        public string TypedValue {
                            get {
                                XElement x = this.Untyped;
                                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
                            }
                            set {
                                this.SetValue(value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
                            }
                        }
                        
                        /// <summary>
                        /// <para>
                        /// Occurrence: required
                        /// </para>
                        /// </summary>
                        public bool primary {
                            get {
                                XAttribute x = this.Attribute(XName.Get("primary", ""));
                                return XTypedServices.ParseValue<bool>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype);
                            }
                            set {
                                this.SetAttribute(XName.Get("primary", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype);
                            }
                        }
                        
                        /// <summary>
                        /// <para>
                        /// Occurrence: required
                        /// </para>
                        /// </summary>
                        public string type {
                            get {
                                XAttribute x = this.Attribute(XName.Get("type", ""));
                                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
                            }
                            set {
                                this.SetAttribute(XName.Get("type", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
                            }
                        }
                        
                        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                        XName IXMetaData.SchemaName {
                            get {
                                return XName.Get("Fact", "xmlns://www.fortifysoftware.com/schema/fvdl");
                            }
                        }
                        
                        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                        SchemaOrigin IXMetaData.TypeOrigin {
                            get {
                                return SchemaOrigin.Fragment;
                            }
                        }
                        
                        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                        ILinqToXsdTypeManager IXMetaData.TypeManager {
                            get {
                                return LinqToXsdTypeManager.Instance;
                            }
                        }
                        
                        public override XTypedElement Clone() {
                            return XTypedServices.CloneXTypedElement<FactLocalType>(this);
                        }
                        
                        ContentModelEntity IXMetaData.GetContentModel() {
                            return ContentModelEntity.Default;
                        }
                    }
                }
            }
        }
        
        /// <summary>
        /// <para>
        /// Regular expression: (Trace+)
        /// </para>
        /// </summary>
        public partial class UnifiedTracePoolLocalType : XTypedElement, IXMetaData {
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            private XTypedList<TraceLocalType> TraceField;
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            private static ContentModelEntity contentModel;
            
         public static explicit operator UnifiedTracePoolLocalType(XElement xe) { return XTypedServices.ToXTypedElement<UnifiedTracePoolLocalType>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
            
            static UnifiedTracePoolLocalType() {
                BuildElementDictionary();
                contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("Trace", "xmlns://www.fortifysoftware.com/schema/fvdl")));
            }
            
            /// <summary>
            /// <para>
            /// Regular expression: (Trace+)
            /// </para>
            /// </summary>
            public UnifiedTracePoolLocalType() {
            }
            
            /// <summary>
            /// <para>
            /// Occurrence: required, repeating
            /// </para>
            /// <para>
            /// Regular expression: (Trace+)
            /// </para>
            /// </summary>
            public IList<xmlns.www.fortifysoftware.com.schema.fvdl.FVDL.UnifiedTracePoolLocalType.TraceLocalType> Trace {
                get {
                    if ((this.TraceField == null)) {
                        this.TraceField = new XTypedList<TraceLocalType>(this, LinqToXsdTypeManager.Instance, XName.Get("Trace", "xmlns://www.fortifysoftware.com/schema/fvdl"));
                    }
                    return this.TraceField;
                }
                set {
                    if ((value == null)) {
                        this.TraceField = null;
                    }
                    else {
                        if ((this.TraceField == null)) {
                            this.TraceField = XTypedList<TraceLocalType>.Initialize(this, LinqToXsdTypeManager.Instance, value, XName.Get("Trace", "xmlns://www.fortifysoftware.com/schema/fvdl"));
                        }
                        else {
                            XTypedServices.SetList<TraceLocalType>(this.TraceField, value);
                        }
                    }
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
                get {
                    return localElementDictionary;
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            XName IXMetaData.SchemaName {
                get {
                    return XName.Get("UnifiedTracePool", "xmlns://www.fortifysoftware.com/schema/fvdl");
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            SchemaOrigin IXMetaData.TypeOrigin {
                get {
                    return SchemaOrigin.Fragment;
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            ILinqToXsdTypeManager IXMetaData.TypeManager {
                get {
                    return LinqToXsdTypeManager.Instance;
                }
            }
            
            public override XTypedElement Clone() {
                return XTypedServices.CloneXTypedElement<UnifiedTracePoolLocalType>(this);
            }
            
            private static void BuildElementDictionary() {
                localElementDictionary.Add(XName.Get("Trace", "xmlns://www.fortifysoftware.com/schema/fvdl"), typeof(TraceLocalType));
            }
            
            ContentModelEntity IXMetaData.GetContentModel() {
                return contentModel;
            }
            
            /// <summary>
            /// <para>
            /// Regular expression: (Primary)
            /// </para>
            /// </summary>
            public partial class TraceLocalType : XTypedElement, IXMetaData {
                
                [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();
                
                [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                private static ContentModelEntity contentModel;
                
         public static explicit operator TraceLocalType(XElement xe) { return XTypedServices.ToXTypedElement<TraceLocalType>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
                
                static TraceLocalType() {
                    BuildElementDictionary();
                    contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("Primary", "xmlns://www.fortifysoftware.com/schema/fvdl")));
                }
                
                /// <summary>
                /// <para>
                /// Regular expression: (Primary)
                /// </para>
                /// </summary>
                public TraceLocalType() {
                }
                
                /// <summary>
                /// <para>
                /// Occurrence: required
                /// </para>
                /// <para>
                /// Regular expression: (Primary)
                /// </para>
                /// </summary>
                public PrimaryLocalType Primary {
                    get {
                        XElement x = this.GetElement(XName.Get("Primary", "xmlns://www.fortifysoftware.com/schema/fvdl"));
                        return ((PrimaryLocalType)(x));
                    }
                    set {
                        this.SetElement(XName.Get("Primary", "xmlns://www.fortifysoftware.com/schema/fvdl"), value);
                    }
                }
                
                /// <summary>
                /// <para>
                /// Occurrence: required
                /// </para>
                /// </summary>
                public uint id {
                    get {
                        XAttribute x = this.Attribute(XName.Get("id", ""));
                        return XTypedServices.ParseValue<uint>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.UnsignedInt).Datatype);
                    }
                    set {
                        this.SetAttribute(XName.Get("id", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.UnsignedInt).Datatype);
                    }
                }
                
                [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
                    get {
                        return localElementDictionary;
                    }
                }
                
                [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                XName IXMetaData.SchemaName {
                    get {
                        return XName.Get("Trace", "xmlns://www.fortifysoftware.com/schema/fvdl");
                    }
                }
                
                [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                SchemaOrigin IXMetaData.TypeOrigin {
                    get {
                        return SchemaOrigin.Fragment;
                    }
                }
                
                [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                ILinqToXsdTypeManager IXMetaData.TypeManager {
                    get {
                        return LinqToXsdTypeManager.Instance;
                    }
                }
                
                public override XTypedElement Clone() {
                    return XTypedServices.CloneXTypedElement<TraceLocalType>(this);
                }
                
                private static void BuildElementDictionary() {
                    localElementDictionary.Add(XName.Get("Primary", "xmlns://www.fortifysoftware.com/schema/fvdl"), typeof(PrimaryLocalType));
                }
                
                ContentModelEntity IXMetaData.GetContentModel() {
                    return contentModel;
                }
                
                /// <summary>
                /// <para>
                /// Regular expression: (Entry+)
                /// </para>
                /// </summary>
                public partial class PrimaryLocalType : XTypedElement, IXMetaData {
                    
                    [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                    private XTypedList<EntryLocalType> EntryField;
                    
                    [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                    static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();
                    
                    [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                    private static ContentModelEntity contentModel;
                    
         public static explicit operator PrimaryLocalType(XElement xe) { return XTypedServices.ToXTypedElement<PrimaryLocalType>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
                    
                    static PrimaryLocalType() {
                        BuildElementDictionary();
                        contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("Entry", "xmlns://www.fortifysoftware.com/schema/fvdl")));
                    }
                    
                    /// <summary>
                    /// <para>
                    /// Regular expression: (Entry+)
                    /// </para>
                    /// </summary>
                    public PrimaryLocalType() {
                    }
                    
                    /// <summary>
                    /// <para>
                    /// Occurrence: required, repeating
                    /// </para>
                    /// <para>
                    /// Regular expression: (Entry+)
                    /// </para>
                    /// </summary>
                    public IList<xmlns.www.fortifysoftware.com.schema.fvdl.FVDL.UnifiedTracePoolLocalType.TraceLocalType.PrimaryLocalType.EntryLocalType> Entry {
                        get {
                            if ((this.EntryField == null)) {
                                this.EntryField = new XTypedList<EntryLocalType>(this, LinqToXsdTypeManager.Instance, XName.Get("Entry", "xmlns://www.fortifysoftware.com/schema/fvdl"));
                            }
                            return this.EntryField;
                        }
                        set {
                            if ((value == null)) {
                                this.EntryField = null;
                            }
                            else {
                                if ((this.EntryField == null)) {
                                    this.EntryField = XTypedList<EntryLocalType>.Initialize(this, LinqToXsdTypeManager.Instance, value, XName.Get("Entry", "xmlns://www.fortifysoftware.com/schema/fvdl"));
                                }
                                else {
                                    XTypedServices.SetList<EntryLocalType>(this.EntryField, value);
                                }
                            }
                        }
                    }
                    
                    [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                    Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
                        get {
                            return localElementDictionary;
                        }
                    }
                    
                    [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                    XName IXMetaData.SchemaName {
                        get {
                            return XName.Get("Primary", "xmlns://www.fortifysoftware.com/schema/fvdl");
                        }
                    }
                    
                    [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                    SchemaOrigin IXMetaData.TypeOrigin {
                        get {
                            return SchemaOrigin.Fragment;
                        }
                    }
                    
                    [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                    ILinqToXsdTypeManager IXMetaData.TypeManager {
                        get {
                            return LinqToXsdTypeManager.Instance;
                        }
                    }
                    
                    public override XTypedElement Clone() {
                        return XTypedServices.CloneXTypedElement<PrimaryLocalType>(this);
                    }
                    
                    private static void BuildElementDictionary() {
                        localElementDictionary.Add(XName.Get("Entry", "xmlns://www.fortifysoftware.com/schema/fvdl"), typeof(EntryLocalType));
                    }
                    
                    ContentModelEntity IXMetaData.GetContentModel() {
                        return contentModel;
                    }
                    
                    /// <summary>
                    /// <para>
                    /// Regular expression: (Node)
                    /// </para>
                    /// </summary>
                    public partial class EntryLocalType : XTypedElement, IXMetaData {
                        
                        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                        static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();
                        
                        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                        private static ContentModelEntity contentModel;
                        
         public static explicit operator EntryLocalType(XElement xe) { return XTypedServices.ToXTypedElement<EntryLocalType>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
                        
                        static EntryLocalType() {
                            BuildElementDictionary();
                            contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("Node", "xmlns://www.fortifysoftware.com/schema/fvdl")));
                        }
                        
                        /// <summary>
                        /// <para>
                        /// Regular expression: (Node)
                        /// </para>
                        /// </summary>
                        public EntryLocalType() {
                        }
                        
                        /// <summary>
                        /// <para>
                        /// Occurrence: required
                        /// </para>
                        /// <para>
                        /// Regular expression: (Node)
                        /// </para>
                        /// </summary>
                        public NodeLocalType Node {
                            get {
                                XElement x = this.GetElement(XName.Get("Node", "xmlns://www.fortifysoftware.com/schema/fvdl"));
                                return ((NodeLocalType)(x));
                            }
                            set {
                                this.SetElement(XName.Get("Node", "xmlns://www.fortifysoftware.com/schema/fvdl"), value);
                            }
                        }
                        
                        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
                            get {
                                return localElementDictionary;
                            }
                        }
                        
                        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                        XName IXMetaData.SchemaName {
                            get {
                                return XName.Get("Entry", "xmlns://www.fortifysoftware.com/schema/fvdl");
                            }
                        }
                        
                        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                        SchemaOrigin IXMetaData.TypeOrigin {
                            get {
                                return SchemaOrigin.Fragment;
                            }
                        }
                        
                        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                        ILinqToXsdTypeManager IXMetaData.TypeManager {
                            get {
                                return LinqToXsdTypeManager.Instance;
                            }
                        }
                        
                        public override XTypedElement Clone() {
                            return XTypedServices.CloneXTypedElement<EntryLocalType>(this);
                        }
                        
                        private static void BuildElementDictionary() {
                            localElementDictionary.Add(XName.Get("Node", "xmlns://www.fortifysoftware.com/schema/fvdl"), typeof(NodeLocalType));
                        }
                        
                        ContentModelEntity IXMetaData.GetContentModel() {
                            return contentModel;
                        }
                        
                        /// <summary>
                        /// <para>
                        /// Regular expression: (SourceLocation, Action, Reason?)
                        /// </para>
                        /// </summary>
                        public partial class NodeLocalType : XTypedElement, IXMetaData {
                            
                            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                            static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();
                            
                            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                            private static ContentModelEntity contentModel;
                            
         public static explicit operator NodeLocalType(XElement xe) { return XTypedServices.ToXTypedElement<NodeLocalType>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
                            
                            static NodeLocalType() {
                                BuildElementDictionary();
                                contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("SourceLocation", "xmlns://www.fortifysoftware.com/schema/fvdl")), new NamedContentModelEntity(XName.Get("Action", "xmlns://www.fortifysoftware.com/schema/fvdl")), new NamedContentModelEntity(XName.Get("Reason", "xmlns://www.fortifysoftware.com/schema/fvdl")));
                            }
                            
                            /// <summary>
                            /// <para>
                            /// Regular expression: (SourceLocation, Action, Reason?)
                            /// </para>
                            /// </summary>
                            public NodeLocalType() {
                            }
                            
                            /// <summary>
                            /// <para>
                            /// Occurrence: required
                            /// </para>
                            /// <para>
                            /// Regular expression: (SourceLocation, Action, Reason?)
                            /// </para>
                            /// </summary>
                            public SourceLocationLocalType SourceLocation {
                                get {
                                    XElement x = this.GetElement(XName.Get("SourceLocation", "xmlns://www.fortifysoftware.com/schema/fvdl"));
                                    return ((SourceLocationLocalType)(x));
                                }
                                set {
                                    this.SetElement(XName.Get("SourceLocation", "xmlns://www.fortifysoftware.com/schema/fvdl"), value);
                                }
                            }
                            
                            /// <summary>
                            /// <para>
                            /// Occurrence: required
                            /// </para>
                            /// <para>
                            /// Regular expression: (SourceLocation, Action, Reason?)
                            /// </para>
                            /// </summary>
                            public ActionLocalType Action {
                                get {
                                    XElement x = this.GetElement(XName.Get("Action", "xmlns://www.fortifysoftware.com/schema/fvdl"));
                                    return ((ActionLocalType)(x));
                                }
                                set {
                                    this.SetElement(XName.Get("Action", "xmlns://www.fortifysoftware.com/schema/fvdl"), value);
                                }
                            }
                            
                            /// <summary>
                            /// <para>
                            /// Occurrence: optional
                            /// </para>
                            /// <para>
                            /// Regular expression: (SourceLocation, Action, Reason?)
                            /// </para>
                            /// </summary>
                            public ReasonLocalType Reason {
                                get {
                                    XElement x = this.GetElement(XName.Get("Reason", "xmlns://www.fortifysoftware.com/schema/fvdl"));
                                    return ((ReasonLocalType)(x));
                                }
                                set {
                                    this.SetElement(XName.Get("Reason", "xmlns://www.fortifysoftware.com/schema/fvdl"), value);
                                }
                            }
                            
                            /// <summary>
                            /// <para>
                            /// Occurrence: optional
                            /// </para>
                            /// </summary>
                            public System.Nullable<bool> detailsOnly {
                                get {
                                    XAttribute x = this.Attribute(XName.Get("detailsOnly", ""));
                                    if ((x == null)) {
                                        return null;
                                    }
                                    return XTypedServices.ParseValue<bool>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype);
                                }
                                set {
                                    this.SetAttribute(XName.Get("detailsOnly", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Boolean).Datatype);
                                }
                            }
                            
                            /// <summary>
                            /// <para>
                            /// Occurrence: optional
                            /// </para>
                            /// </summary>
                            public string label {
                                get {
                                    XAttribute x = this.Attribute(XName.Get("label", ""));
                                    return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
                                }
                                set {
                                    this.SetAttribute(XName.Get("label", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
                                }
                            }
                            
                            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                            Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
                                get {
                                    return localElementDictionary;
                                }
                            }
                            
                            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                            XName IXMetaData.SchemaName {
                                get {
                                    return XName.Get("Node", "xmlns://www.fortifysoftware.com/schema/fvdl");
                                }
                            }
                            
                            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                            SchemaOrigin IXMetaData.TypeOrigin {
                                get {
                                    return SchemaOrigin.Fragment;
                                }
                            }
                            
                            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                            ILinqToXsdTypeManager IXMetaData.TypeManager {
                                get {
                                    return LinqToXsdTypeManager.Instance;
                                }
                            }
                            
                            public override XTypedElement Clone() {
                                return XTypedServices.CloneXTypedElement<NodeLocalType>(this);
                            }
                            
                            private static void BuildElementDictionary() {
                                localElementDictionary.Add(XName.Get("SourceLocation", "xmlns://www.fortifysoftware.com/schema/fvdl"), typeof(SourceLocationLocalType));
                                localElementDictionary.Add(XName.Get("Action", "xmlns://www.fortifysoftware.com/schema/fvdl"), typeof(ActionLocalType));
                                localElementDictionary.Add(XName.Get("Reason", "xmlns://www.fortifysoftware.com/schema/fvdl"), typeof(ReasonLocalType));
                            }
                            
                            ContentModelEntity IXMetaData.GetContentModel() {
                                return contentModel;
                            }
                            
                            public partial class SourceLocationLocalType : XTypedElement, IXMetaData {
                                
         public static explicit operator SourceLocationLocalType(XElement xe) { return XTypedServices.ToXTypedElement<SourceLocationLocalType>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
                                
                                public SourceLocationLocalType() {
                                }
                                
                                /// <summary>
                                /// <para>
                                /// Occurrence: required
                                /// </para>
                                /// </summary>
                                public string path {
                                    get {
                                        XAttribute x = this.Attribute(XName.Get("path", ""));
                                        return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
                                    }
                                    set {
                                        this.SetAttribute(XName.Get("path", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
                                    }
                                }
                                
                                /// <summary>
                                /// <para>
                                /// Occurrence: required
                                /// </para>
                                /// </summary>
                                public uint line {
                                    get {
                                        XAttribute x = this.Attribute(XName.Get("line", ""));
                                        return XTypedServices.ParseValue<uint>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.UnsignedInt).Datatype);
                                    }
                                    set {
                                        this.SetAttribute(XName.Get("line", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.UnsignedInt).Datatype);
                                    }
                                }
                                
                                /// <summary>
                                /// <para>
                                /// Occurrence: required
                                /// </para>
                                /// </summary>
                                public uint lineEnd {
                                    get {
                                        XAttribute x = this.Attribute(XName.Get("lineEnd", ""));
                                        return XTypedServices.ParseValue<uint>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.UnsignedInt).Datatype);
                                    }
                                    set {
                                        this.SetAttribute(XName.Get("lineEnd", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.UnsignedInt).Datatype);
                                    }
                                }
                                
                                /// <summary>
                                /// <para>
                                /// Occurrence: required
                                /// </para>
                                /// </summary>
                                public uint colStart {
                                    get {
                                        XAttribute x = this.Attribute(XName.Get("colStart", ""));
                                        return XTypedServices.ParseValue<uint>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.UnsignedInt).Datatype);
                                    }
                                    set {
                                        this.SetAttribute(XName.Get("colStart", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.UnsignedInt).Datatype);
                                    }
                                }
                                
                                /// <summary>
                                /// <para>
                                /// Occurrence: required
                                /// </para>
                                /// </summary>
                                public uint colEnd {
                                    get {
                                        XAttribute x = this.Attribute(XName.Get("colEnd", ""));
                                        return XTypedServices.ParseValue<uint>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.UnsignedInt).Datatype);
                                    }
                                    set {
                                        this.SetAttribute(XName.Get("colEnd", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.UnsignedInt).Datatype);
                                    }
                                }
                                
                                /// <summary>
                                /// <para>
                                /// Occurrence: required
                                /// </para>
                                /// </summary>
                                public string snippet {
                                    get {
                                        XAttribute x = this.Attribute(XName.Get("snippet", ""));
                                        return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
                                    }
                                    set {
                                        this.SetAttribute(XName.Get("snippet", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
                                    }
                                }
                                
                                /// <summary>
                                /// <para>
                                /// Occurrence: optional
                                /// </para>
                                /// </summary>
                                public System.Nullable<uint> contextId {
                                    get {
                                        XAttribute x = this.Attribute(XName.Get("contextId", ""));
                                        if ((x == null)) {
                                            return null;
                                        }
                                        return XTypedServices.ParseValue<uint>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.UnsignedInt).Datatype);
                                    }
                                    set {
                                        this.SetAttribute(XName.Get("contextId", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.UnsignedInt).Datatype);
                                    }
                                }
                                
                                [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                                XName IXMetaData.SchemaName {
                                    get {
                                        return XName.Get("SourceLocation", "xmlns://www.fortifysoftware.com/schema/fvdl");
                                    }
                                }
                                
                                [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                                SchemaOrigin IXMetaData.TypeOrigin {
                                    get {
                                        return SchemaOrigin.Fragment;
                                    }
                                }
                                
                                [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                                ILinqToXsdTypeManager IXMetaData.TypeManager {
                                    get {
                                        return LinqToXsdTypeManager.Instance;
                                    }
                                }
                                
                                public override XTypedElement Clone() {
                                    return XTypedServices.CloneXTypedElement<SourceLocationLocalType>(this);
                                }
                                
                                ContentModelEntity IXMetaData.GetContentModel() {
                                    return ContentModelEntity.Default;
                                }
                            }
                            
                            public partial class ActionLocalType : XTypedElement, IXMetaData {
                                
         public static explicit operator ActionLocalType(XElement xe) { return XTypedServices.ToXTypedElement<ActionLocalType>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
                                
                                public ActionLocalType() {
                                }
                                
                                public string TypedValue {
                                    get {
                                        XElement x = this.Untyped;
                                        return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
                                    }
                                    set {
                                        this.SetValue(value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
                                    }
                                }
                                
                                /// <summary>
                                /// <para>
                                /// Occurrence: optional
                                /// </para>
                                /// </summary>
                                public string type {
                                    get {
                                        XAttribute x = this.Attribute(XName.Get("type", ""));
                                        return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
                                    }
                                    set {
                                        this.SetAttribute(XName.Get("type", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
                                    }
                                }
                                
                                [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                                XName IXMetaData.SchemaName {
                                    get {
                                        return XName.Get("Action", "xmlns://www.fortifysoftware.com/schema/fvdl");
                                    }
                                }
                                
                                [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                                SchemaOrigin IXMetaData.TypeOrigin {
                                    get {
                                        return SchemaOrigin.Fragment;
                                    }
                                }
                                
                                [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                                ILinqToXsdTypeManager IXMetaData.TypeManager {
                                    get {
                                        return LinqToXsdTypeManager.Instance;
                                    }
                                }
                                
                                public override XTypedElement Clone() {
                                    return XTypedServices.CloneXTypedElement<ActionLocalType>(this);
                                }
                                
                                ContentModelEntity IXMetaData.GetContentModel() {
                                    return ContentModelEntity.Default;
                                }
                            }
                            
                            /// <summary>
                            /// <para>
                            /// Regular expression: (TraceRef?, @Internal?, Rule?)
                            /// </para>
                            /// </summary>
                            public partial class ReasonLocalType : XTypedElement, IXMetaData {
                                
                                [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                                static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();
                                
                                [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                                private static ContentModelEntity contentModel;
                                
         public static explicit operator ReasonLocalType(XElement xe) { return XTypedServices.ToXTypedElement<ReasonLocalType>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
                                
                                static ReasonLocalType() {
                                    BuildElementDictionary();
                                    contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("TraceRef", "xmlns://www.fortifysoftware.com/schema/fvdl")), new NamedContentModelEntity(XName.Get("Internal", "xmlns://www.fortifysoftware.com/schema/fvdl")), new NamedContentModelEntity(XName.Get("Rule", "xmlns://www.fortifysoftware.com/schema/fvdl")));
                                }
                                
                                /// <summary>
                                /// <para>
                                /// Regular expression: (TraceRef?, @Internal?, Rule?)
                                /// </para>
                                /// </summary>
                                public ReasonLocalType() {
                                }
                                
                                /// <summary>
                                /// <para>
                                /// Occurrence: optional
                                /// </para>
                                /// <para>
                                /// Regular expression: (TraceRef?, @Internal?, Rule?)
                                /// </para>
                                /// </summary>
                                public TraceRefLocalType TraceRef {
                                    get {
                                        XElement x = this.GetElement(XName.Get("TraceRef", "xmlns://www.fortifysoftware.com/schema/fvdl"));
                                        return ((TraceRefLocalType)(x));
                                    }
                                    set {
                                        this.SetElement(XName.Get("TraceRef", "xmlns://www.fortifysoftware.com/schema/fvdl"), value);
                                    }
                                }
                                
                                /// <summary>
                                /// <para>
                                /// Occurrence: optional
                                /// </para>
                                /// <para>
                                /// Regular expression: (TraceRef?, @Internal?, Rule?)
                                /// </para>
                                /// </summary>
                                public @InternalLocalType @Internal {
                                    get {
                                        XElement x = this.GetElement(XName.Get("Internal", "xmlns://www.fortifysoftware.com/schema/fvdl"));
                                        return ((@InternalLocalType)(x));
                                    }
                                    set {
                                        this.SetElement(XName.Get("Internal", "xmlns://www.fortifysoftware.com/schema/fvdl"), value);
                                    }
                                }
                                
                                /// <summary>
                                /// <para>
                                /// Occurrence: optional
                                /// </para>
                                /// <para>
                                /// Regular expression: (TraceRef?, @Internal?, Rule?)
                                /// </para>
                                /// </summary>
                                public RuleLocalType Rule {
                                    get {
                                        XElement x = this.GetElement(XName.Get("Rule", "xmlns://www.fortifysoftware.com/schema/fvdl"));
                                        return ((RuleLocalType)(x));
                                    }
                                    set {
                                        this.SetElement(XName.Get("Rule", "xmlns://www.fortifysoftware.com/schema/fvdl"), value);
                                    }
                                }
                                
                                [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                                Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
                                    get {
                                        return localElementDictionary;
                                    }
                                }
                                
                                [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                                XName IXMetaData.SchemaName {
                                    get {
                                        return XName.Get("Reason", "xmlns://www.fortifysoftware.com/schema/fvdl");
                                    }
                                }
                                
                                [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                                SchemaOrigin IXMetaData.TypeOrigin {
                                    get {
                                        return SchemaOrigin.Fragment;
                                    }
                                }
                                
                                [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                                ILinqToXsdTypeManager IXMetaData.TypeManager {
                                    get {
                                        return LinqToXsdTypeManager.Instance;
                                    }
                                }
                                
                                public override XTypedElement Clone() {
                                    return XTypedServices.CloneXTypedElement<ReasonLocalType>(this);
                                }
                                
                                private static void BuildElementDictionary() {
                                    localElementDictionary.Add(XName.Get("TraceRef", "xmlns://www.fortifysoftware.com/schema/fvdl"), typeof(TraceRefLocalType));
                                    localElementDictionary.Add(XName.Get("Internal", "xmlns://www.fortifysoftware.com/schema/fvdl"), typeof(@InternalLocalType));
                                    localElementDictionary.Add(XName.Get("Rule", "xmlns://www.fortifysoftware.com/schema/fvdl"), typeof(RuleLocalType));
                                }
                                
                                ContentModelEntity IXMetaData.GetContentModel() {
                                    return contentModel;
                                }
                                
                                public partial class TraceRefLocalType : XTypedElement, IXMetaData {
                                    
         public static explicit operator TraceRefLocalType(XElement xe) { return XTypedServices.ToXTypedElement<TraceRefLocalType>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
                                    
                                    public TraceRefLocalType() {
                                    }
                                    
                                    /// <summary>
                                    /// <para>
                                    /// Occurrence: required
                                    /// </para>
                                    /// </summary>
                                    public uint id {
                                        get {
                                            XAttribute x = this.Attribute(XName.Get("id", ""));
                                            return XTypedServices.ParseValue<uint>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.UnsignedInt).Datatype);
                                        }
                                        set {
                                            this.SetAttribute(XName.Get("id", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.UnsignedInt).Datatype);
                                        }
                                    }
                                    
                                    [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                                    XName IXMetaData.SchemaName {
                                        get {
                                            return XName.Get("TraceRef", "xmlns://www.fortifysoftware.com/schema/fvdl");
                                        }
                                    }
                                    
                                    [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                                    SchemaOrigin IXMetaData.TypeOrigin {
                                        get {
                                            return SchemaOrigin.Fragment;
                                        }
                                    }
                                    
                                    [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                                    ILinqToXsdTypeManager IXMetaData.TypeManager {
                                        get {
                                            return LinqToXsdTypeManager.Instance;
                                        }
                                    }
                                    
                                    public override XTypedElement Clone() {
                                        return XTypedServices.CloneXTypedElement<TraceRefLocalType>(this);
                                    }
                                    
                                    ContentModelEntity IXMetaData.GetContentModel() {
                                        return ContentModelEntity.Default;
                                    }
                                }
                                
                                public partial class @InternalLocalType : XTypedElement, IXMetaData {
                                    
         public static explicit operator @InternalLocalType(XElement xe) { return XTypedServices.ToXTypedElement<@InternalLocalType>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
                                    
                                    public @InternalLocalType() {
                                    }
                                    
                                    /// <summary>
                                    /// <para>
                                    /// Occurrence: required
                                    /// </para>
                                    /// </summary>
                                    public string text {
                                        get {
                                            XAttribute x = this.Attribute(XName.Get("text", ""));
                                            return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
                                        }
                                        set {
                                            this.SetAttribute(XName.Get("text", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
                                        }
                                    }
                                    
                                    [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                                    XName IXMetaData.SchemaName {
                                        get {
                                            return XName.Get("Internal", "xmlns://www.fortifysoftware.com/schema/fvdl");
                                        }
                                    }
                                    
                                    [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                                    SchemaOrigin IXMetaData.TypeOrigin {
                                        get {
                                            return SchemaOrigin.Fragment;
                                        }
                                    }
                                    
                                    [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                                    ILinqToXsdTypeManager IXMetaData.TypeManager {
                                        get {
                                            return LinqToXsdTypeManager.Instance;
                                        }
                                    }
                                    
                                    public override XTypedElement Clone() {
                                        return XTypedServices.CloneXTypedElement<@InternalLocalType>(this);
                                    }
                                    
                                    ContentModelEntity IXMetaData.GetContentModel() {
                                        return ContentModelEntity.Default;
                                    }
                                }
                                
                                public partial class RuleLocalType : XTypedElement, IXMetaData {
                                    
         public static explicit operator RuleLocalType(XElement xe) { return XTypedServices.ToXTypedElement<RuleLocalType>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
                                    
                                    public RuleLocalType() {
                                    }
                                    
                                    /// <summary>
                                    /// <para>
                                    /// Occurrence: required
                                    /// </para>
                                    /// </summary>
                                    public string ruleID {
                                        get {
                                            XAttribute x = this.Attribute(XName.Get("ruleID", ""));
                                            return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
                                        }
                                        set {
                                            this.SetAttribute(XName.Get("ruleID", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
                                        }
                                    }
                                    
                                    [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                                    XName IXMetaData.SchemaName {
                                        get {
                                            return XName.Get("Rule", "xmlns://www.fortifysoftware.com/schema/fvdl");
                                        }
                                    }
                                    
                                    [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                                    SchemaOrigin IXMetaData.TypeOrigin {
                                        get {
                                            return SchemaOrigin.Fragment;
                                        }
                                    }
                                    
                                    [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                                    ILinqToXsdTypeManager IXMetaData.TypeManager {
                                        get {
                                            return LinqToXsdTypeManager.Instance;
                                        }
                                    }
                                    
                                    public override XTypedElement Clone() {
                                        return XTypedServices.CloneXTypedElement<RuleLocalType>(this);
                                    }
                                    
                                    ContentModelEntity IXMetaData.GetContentModel() {
                                        return ContentModelEntity.Default;
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
        
        /// <summary>
        /// <para>
        /// Regular expression: (@Abstract, Explanation, Recommendations, Tips?, References)
        /// </para>
        /// </summary>
        public partial class DescriptionLocalType : XTypedElement, IXMetaData {
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            private static ContentModelEntity contentModel;
            
         public static explicit operator DescriptionLocalType(XElement xe) { return XTypedServices.ToXTypedElement<DescriptionLocalType>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
            
            static DescriptionLocalType() {
                BuildElementDictionary();
                contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("Abstract", "xmlns://www.fortifysoftware.com/schema/fvdl")), new NamedContentModelEntity(XName.Get("Explanation", "xmlns://www.fortifysoftware.com/schema/fvdl")), new NamedContentModelEntity(XName.Get("Recommendations", "xmlns://www.fortifysoftware.com/schema/fvdl")), new NamedContentModelEntity(XName.Get("Tips", "xmlns://www.fortifysoftware.com/schema/fvdl")), new NamedContentModelEntity(XName.Get("References", "xmlns://www.fortifysoftware.com/schema/fvdl")));
            }
            
            /// <summary>
            /// <para>
            /// Regular expression: (@Abstract, Explanation, Recommendations, Tips?, References)
            /// </para>
            /// </summary>
            public DescriptionLocalType() {
            }
            
            /// <summary>
            /// <para>
            /// Occurrence: required
            /// </para>
            /// <para>
            /// Regular expression: (@Abstract, Explanation, Recommendations, Tips?, References)
            /// </para>
            /// </summary>
            public string @Abstract {
                get {
                    XElement x = this.GetElement(XName.Get("Abstract", "xmlns://www.fortifysoftware.com/schema/fvdl"));
                    return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
                }
                set {
                    this.SetElement(XName.Get("Abstract", "xmlns://www.fortifysoftware.com/schema/fvdl"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
                }
            }
            
            /// <summary>
            /// <para>
            /// Occurrence: required
            /// </para>
            /// <para>
            /// Regular expression: (@Abstract, Explanation, Recommendations, Tips?, References)
            /// </para>
            /// </summary>
            public string Explanation {
                get {
                    XElement x = this.GetElement(XName.Get("Explanation", "xmlns://www.fortifysoftware.com/schema/fvdl"));
                    return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
                }
                set {
                    this.SetElement(XName.Get("Explanation", "xmlns://www.fortifysoftware.com/schema/fvdl"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
                }
            }
            
            /// <summary>
            /// <para>
            /// Occurrence: required
            /// </para>
            /// <para>
            /// Regular expression: (@Abstract, Explanation, Recommendations, Tips?, References)
            /// </para>
            /// </summary>
            public string Recommendations {
                get {
                    XElement x = this.GetElement(XName.Get("Recommendations", "xmlns://www.fortifysoftware.com/schema/fvdl"));
                    return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
                }
                set {
                    this.SetElement(XName.Get("Recommendations", "xmlns://www.fortifysoftware.com/schema/fvdl"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
                }
            }
            
            /// <summary>
            /// <para>
            /// Occurrence: optional
            /// </para>
            /// <para>
            /// Regular expression: (@Abstract, Explanation, Recommendations, Tips?, References)
            /// </para>
            /// </summary>
            public TipsLocalType Tips {
                get {
                    XElement x = this.GetElement(XName.Get("Tips", "xmlns://www.fortifysoftware.com/schema/fvdl"));
                    return ((TipsLocalType)(x));
                }
                set {
                    this.SetElement(XName.Get("Tips", "xmlns://www.fortifysoftware.com/schema/fvdl"), value);
                }
            }
            
            /// <summary>
            /// <para>
            /// Occurrence: required
            /// </para>
            /// <para>
            /// Regular expression: (@Abstract, Explanation, Recommendations, Tips?, References)
            /// </para>
            /// </summary>
            public ReferencesLocalType References {
                get {
                    XElement x = this.GetElement(XName.Get("References", "xmlns://www.fortifysoftware.com/schema/fvdl"));
                    return ((ReferencesLocalType)(x));
                }
                set {
                    this.SetElement(XName.Get("References", "xmlns://www.fortifysoftware.com/schema/fvdl"), value);
                }
            }
            
            /// <summary>
            /// <para>
            /// Occurrence: required
            /// </para>
            /// </summary>
            public string classID {
                get {
                    XAttribute x = this.Attribute(XName.Get("classID", ""));
                    return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
                }
                set {
                    this.SetAttribute(XName.Get("classID", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
                }
            }
            
            /// <summary>
            /// <para>
            /// Occurrence: required
            /// </para>
            /// </summary>
            public string contentType {
                get {
                    XAttribute x = this.Attribute(XName.Get("contentType", ""));
                    return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
                }
                set {
                    this.SetAttribute(XName.Get("contentType", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
                get {
                    return localElementDictionary;
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            XName IXMetaData.SchemaName {
                get {
                    return XName.Get("Description", "xmlns://www.fortifysoftware.com/schema/fvdl");
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            SchemaOrigin IXMetaData.TypeOrigin {
                get {
                    return SchemaOrigin.Fragment;
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            ILinqToXsdTypeManager IXMetaData.TypeManager {
                get {
                    return LinqToXsdTypeManager.Instance;
                }
            }
            
            public override XTypedElement Clone() {
                return XTypedServices.CloneXTypedElement<DescriptionLocalType>(this);
            }
            
            private static void BuildElementDictionary() {
                localElementDictionary.Add(XName.Get("Abstract", "xmlns://www.fortifysoftware.com/schema/fvdl"), typeof(string));
                localElementDictionary.Add(XName.Get("Explanation", "xmlns://www.fortifysoftware.com/schema/fvdl"), typeof(string));
                localElementDictionary.Add(XName.Get("Recommendations", "xmlns://www.fortifysoftware.com/schema/fvdl"), typeof(string));
                localElementDictionary.Add(XName.Get("Tips", "xmlns://www.fortifysoftware.com/schema/fvdl"), typeof(TipsLocalType));
                localElementDictionary.Add(XName.Get("References", "xmlns://www.fortifysoftware.com/schema/fvdl"), typeof(ReferencesLocalType));
            }
            
            ContentModelEntity IXMetaData.GetContentModel() {
                return contentModel;
            }
            
            /// <summary>
            /// <para>
            /// Regular expression: (Tip+)
            /// </para>
            /// </summary>
            public partial class TipsLocalType : XTypedElement, IXMetaData {
                
                [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                private XSimpleList<string> TipField;
                
                [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();
                
                [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                private static ContentModelEntity contentModel;
                
         public static explicit operator TipsLocalType(XElement xe) { return XTypedServices.ToXTypedElement<TipsLocalType>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
                
                static TipsLocalType() {
                    BuildElementDictionary();
                    contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("Tip", "xmlns://www.fortifysoftware.com/schema/fvdl")));
                }
                
                /// <summary>
                /// <para>
                /// Regular expression: (Tip+)
                /// </para>
                /// </summary>
                public TipsLocalType() {
                }
                
                /// <summary>
                /// <para>
                /// Occurrence: required, repeating
                /// </para>
                /// <para>
                /// Regular expression: (Tip+)
                /// </para>
                /// </summary>
                public IList<string> Tip {
                    get {
                        if ((this.TipField == null)) {
                            this.TipField = new XSimpleList<string>(this, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype, XName.Get("Tip", "xmlns://www.fortifysoftware.com/schema/fvdl"));
                        }
                        return this.TipField;
                    }
                    set {
                        if ((value == null)) {
                            this.TipField = null;
                        }
                        else {
                            if ((this.TipField == null)) {
                                this.TipField = XSimpleList<string>.Initialize(this, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype, value, XName.Get("Tip", "xmlns://www.fortifysoftware.com/schema/fvdl"));
                            }
                            else {
                                XTypedServices.SetList<System.String>(this.TipField, value);
                            }
                        }
                    }
                }
                
                [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
                    get {
                        return localElementDictionary;
                    }
                }
                
                [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                XName IXMetaData.SchemaName {
                    get {
                        return XName.Get("Tips", "xmlns://www.fortifysoftware.com/schema/fvdl");
                    }
                }
                
                [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                SchemaOrigin IXMetaData.TypeOrigin {
                    get {
                        return SchemaOrigin.Fragment;
                    }
                }
                
                [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                ILinqToXsdTypeManager IXMetaData.TypeManager {
                    get {
                        return LinqToXsdTypeManager.Instance;
                    }
                }
                
                public override XTypedElement Clone() {
                    return XTypedServices.CloneXTypedElement<TipsLocalType>(this);
                }
                
                private static void BuildElementDictionary() {
                    localElementDictionary.Add(XName.Get("Tip", "xmlns://www.fortifysoftware.com/schema/fvdl"), typeof(string));
                }
                
                ContentModelEntity IXMetaData.GetContentModel() {
                    return contentModel;
                }
            }
            
            /// <summary>
            /// <para>
            /// Regular expression: (Reference+)
            /// </para>
            /// </summary>
            public partial class ReferencesLocalType : XTypedElement, IXMetaData {
                
                [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                private XTypedList<ReferenceLocalType> ReferenceField;
                
                [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();
                
                [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                private static ContentModelEntity contentModel;
                
         public static explicit operator ReferencesLocalType(XElement xe) { return XTypedServices.ToXTypedElement<ReferencesLocalType>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
                
                static ReferencesLocalType() {
                    BuildElementDictionary();
                    contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("Reference", "xmlns://www.fortifysoftware.com/schema/fvdl")));
                }
                
                /// <summary>
                /// <para>
                /// Regular expression: (Reference+)
                /// </para>
                /// </summary>
                public ReferencesLocalType() {
                }
                
                /// <summary>
                /// <para>
                /// Occurrence: required, repeating
                /// </para>
                /// <para>
                /// Regular expression: (Reference+)
                /// </para>
                /// </summary>
                public IList<xmlns.www.fortifysoftware.com.schema.fvdl.FVDL.DescriptionLocalType.ReferencesLocalType.ReferenceLocalType> Reference {
                    get {
                        if ((this.ReferenceField == null)) {
                            this.ReferenceField = new XTypedList<ReferenceLocalType>(this, LinqToXsdTypeManager.Instance, XName.Get("Reference", "xmlns://www.fortifysoftware.com/schema/fvdl"));
                        }
                        return this.ReferenceField;
                    }
                    set {
                        if ((value == null)) {
                            this.ReferenceField = null;
                        }
                        else {
                            if ((this.ReferenceField == null)) {
                                this.ReferenceField = XTypedList<ReferenceLocalType>.Initialize(this, LinqToXsdTypeManager.Instance, value, XName.Get("Reference", "xmlns://www.fortifysoftware.com/schema/fvdl"));
                            }
                            else {
                                XTypedServices.SetList<ReferenceLocalType>(this.ReferenceField, value);
                            }
                        }
                    }
                }
                
                [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
                    get {
                        return localElementDictionary;
                    }
                }
                
                [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                XName IXMetaData.SchemaName {
                    get {
                        return XName.Get("References", "xmlns://www.fortifysoftware.com/schema/fvdl");
                    }
                }
                
                [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                SchemaOrigin IXMetaData.TypeOrigin {
                    get {
                        return SchemaOrigin.Fragment;
                    }
                }
                
                [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                ILinqToXsdTypeManager IXMetaData.TypeManager {
                    get {
                        return LinqToXsdTypeManager.Instance;
                    }
                }
                
                public override XTypedElement Clone() {
                    return XTypedServices.CloneXTypedElement<ReferencesLocalType>(this);
                }
                
                private static void BuildElementDictionary() {
                    localElementDictionary.Add(XName.Get("Reference", "xmlns://www.fortifysoftware.com/schema/fvdl"), typeof(ReferenceLocalType));
                }
                
                ContentModelEntity IXMetaData.GetContentModel() {
                    return contentModel;
                }
                
                /// <summary>
                /// <para>
                /// Regular expression: (Title, Author?, Publisher?, PublishedDate?, Source?)
                /// </para>
                /// </summary>
                public partial class ReferenceLocalType : XTypedElement, IXMetaData {
                    
                    [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                    static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();
                    
                    [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                    private static ContentModelEntity contentModel;
                    
         public static explicit operator ReferenceLocalType(XElement xe) { return XTypedServices.ToXTypedElement<ReferenceLocalType>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
                    
                    static ReferenceLocalType() {
                        BuildElementDictionary();
                        contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("Title", "xmlns://www.fortifysoftware.com/schema/fvdl")), new NamedContentModelEntity(XName.Get("Author", "xmlns://www.fortifysoftware.com/schema/fvdl")), new NamedContentModelEntity(XName.Get("Publisher", "xmlns://www.fortifysoftware.com/schema/fvdl")), new NamedContentModelEntity(XName.Get("PublishedDate", "xmlns://www.fortifysoftware.com/schema/fvdl")), new NamedContentModelEntity(XName.Get("Source", "xmlns://www.fortifysoftware.com/schema/fvdl")));
                    }
                    
                    /// <summary>
                    /// <para>
                    /// Regular expression: (Title, Author?, Publisher?, PublishedDate?, Source?)
                    /// </para>
                    /// </summary>
                    public ReferenceLocalType() {
                    }
                    
                    /// <summary>
                    /// <para>
                    /// Occurrence: required
                    /// </para>
                    /// <para>
                    /// Regular expression: (Title, Author?, Publisher?, PublishedDate?, Source?)
                    /// </para>
                    /// </summary>
                    public string Title {
                        get {
                            XElement x = this.GetElement(XName.Get("Title", "xmlns://www.fortifysoftware.com/schema/fvdl"));
                            return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
                        }
                        set {
                            this.SetElement(XName.Get("Title", "xmlns://www.fortifysoftware.com/schema/fvdl"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
                        }
                    }
                    
                    /// <summary>
                    /// <para>
                    /// Occurrence: optional
                    /// </para>
                    /// <para>
                    /// Regular expression: (Title, Author?, Publisher?, PublishedDate?, Source?)
                    /// </para>
                    /// </summary>
                    public string Author {
                        get {
                            XElement x = this.GetElement(XName.Get("Author", "xmlns://www.fortifysoftware.com/schema/fvdl"));
                            return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
                        }
                        set {
                            this.SetElement(XName.Get("Author", "xmlns://www.fortifysoftware.com/schema/fvdl"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
                        }
                    }
                    
                    /// <summary>
                    /// <para>
                    /// Occurrence: optional
                    /// </para>
                    /// <para>
                    /// Regular expression: (Title, Author?, Publisher?, PublishedDate?, Source?)
                    /// </para>
                    /// </summary>
                    public string Publisher {
                        get {
                            XElement x = this.GetElement(XName.Get("Publisher", "xmlns://www.fortifysoftware.com/schema/fvdl"));
                            return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
                        }
                        set {
                            this.SetElement(XName.Get("Publisher", "xmlns://www.fortifysoftware.com/schema/fvdl"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
                        }
                    }
                    
                    /// <summary>
                    /// <para>
                    /// Occurrence: optional
                    /// </para>
                    /// <para>
                    /// Regular expression: (Title, Author?, Publisher?, PublishedDate?, Source?)
                    /// </para>
                    /// </summary>
                    public System.Nullable<uint> PublishedDate {
                        get {
                            XElement x = this.GetElement(XName.Get("PublishedDate", "xmlns://www.fortifysoftware.com/schema/fvdl"));
                            if ((x == null)) {
                                return null;
                            }
                            return XTypedServices.ParseValue<uint>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.UnsignedInt).Datatype);
                        }
                        set {
                            this.SetElement(XName.Get("PublishedDate", "xmlns://www.fortifysoftware.com/schema/fvdl"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.UnsignedInt).Datatype);
                        }
                    }
                    
                    /// <summary>
                    /// <para>
                    /// Occurrence: optional
                    /// </para>
                    /// <para>
                    /// Regular expression: (Title, Author?, Publisher?, PublishedDate?, Source?)
                    /// </para>
                    /// </summary>
                    public string Source {
                        get {
                            XElement x = this.GetElement(XName.Get("Source", "xmlns://www.fortifysoftware.com/schema/fvdl"));
                            return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
                        }
                        set {
                            this.SetElement(XName.Get("Source", "xmlns://www.fortifysoftware.com/schema/fvdl"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
                        }
                    }
                    
                    [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                    Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
                        get {
                            return localElementDictionary;
                        }
                    }
                    
                    [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                    XName IXMetaData.SchemaName {
                        get {
                            return XName.Get("Reference", "xmlns://www.fortifysoftware.com/schema/fvdl");
                        }
                    }
                    
                    [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                    SchemaOrigin IXMetaData.TypeOrigin {
                        get {
                            return SchemaOrigin.Fragment;
                        }
                    }
                    
                    [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                    ILinqToXsdTypeManager IXMetaData.TypeManager {
                        get {
                            return LinqToXsdTypeManager.Instance;
                        }
                    }
                    
                    public override XTypedElement Clone() {
                        return XTypedServices.CloneXTypedElement<ReferenceLocalType>(this);
                    }
                    
                    private static void BuildElementDictionary() {
                        localElementDictionary.Add(XName.Get("Title", "xmlns://www.fortifysoftware.com/schema/fvdl"), typeof(string));
                        localElementDictionary.Add(XName.Get("Author", "xmlns://www.fortifysoftware.com/schema/fvdl"), typeof(string));
                        localElementDictionary.Add(XName.Get("Publisher", "xmlns://www.fortifysoftware.com/schema/fvdl"), typeof(string));
                        localElementDictionary.Add(XName.Get("PublishedDate", "xmlns://www.fortifysoftware.com/schema/fvdl"), typeof(uint));
                        localElementDictionary.Add(XName.Get("Source", "xmlns://www.fortifysoftware.com/schema/fvdl"), typeof(string));
                    }
                    
                    ContentModelEntity IXMetaData.GetContentModel() {
                        return contentModel;
                    }
                }
            }
        }
        
        /// <summary>
        /// <para>
        /// Regular expression: (Snippet+)
        /// </para>
        /// </summary>
        public partial class SnippetsLocalType : XTypedElement, IXMetaData {
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            private XTypedList<SnippetLocalType> SnippetField;
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            private static ContentModelEntity contentModel;
            
         public static explicit operator SnippetsLocalType(XElement xe) { return XTypedServices.ToXTypedElement<SnippetsLocalType>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
            
            static SnippetsLocalType() {
                BuildElementDictionary();
                contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("Snippet", "xmlns://www.fortifysoftware.com/schema/fvdl")));
            }
            
            /// <summary>
            /// <para>
            /// Regular expression: (Snippet+)
            /// </para>
            /// </summary>
            public SnippetsLocalType() {
            }
            
            /// <summary>
            /// <para>
            /// Occurrence: required, repeating
            /// </para>
            /// <para>
            /// Regular expression: (Snippet+)
            /// </para>
            /// </summary>
            public IList<xmlns.www.fortifysoftware.com.schema.fvdl.FVDL.SnippetsLocalType.SnippetLocalType> Snippet {
                get {
                    if ((this.SnippetField == null)) {
                        this.SnippetField = new XTypedList<SnippetLocalType>(this, LinqToXsdTypeManager.Instance, XName.Get("Snippet", "xmlns://www.fortifysoftware.com/schema/fvdl"));
                    }
                    return this.SnippetField;
                }
                set {
                    if ((value == null)) {
                        this.SnippetField = null;
                    }
                    else {
                        if ((this.SnippetField == null)) {
                            this.SnippetField = XTypedList<SnippetLocalType>.Initialize(this, LinqToXsdTypeManager.Instance, value, XName.Get("Snippet", "xmlns://www.fortifysoftware.com/schema/fvdl"));
                        }
                        else {
                            XTypedServices.SetList<SnippetLocalType>(this.SnippetField, value);
                        }
                    }
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
                get {
                    return localElementDictionary;
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            XName IXMetaData.SchemaName {
                get {
                    return XName.Get("Snippets", "xmlns://www.fortifysoftware.com/schema/fvdl");
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            SchemaOrigin IXMetaData.TypeOrigin {
                get {
                    return SchemaOrigin.Fragment;
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            ILinqToXsdTypeManager IXMetaData.TypeManager {
                get {
                    return LinqToXsdTypeManager.Instance;
                }
            }
            
            public override XTypedElement Clone() {
                return XTypedServices.CloneXTypedElement<SnippetsLocalType>(this);
            }
            
            private static void BuildElementDictionary() {
                localElementDictionary.Add(XName.Get("Snippet", "xmlns://www.fortifysoftware.com/schema/fvdl"), typeof(SnippetLocalType));
            }
            
            ContentModelEntity IXMetaData.GetContentModel() {
                return contentModel;
            }
            
            /// <summary>
            /// <para>
            /// Regular expression: (File, StartLine, EndLine, Text)
            /// </para>
            /// </summary>
            public partial class SnippetLocalType : XTypedElement, IXMetaData {
                
                [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();
                
                [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                private static ContentModelEntity contentModel;
                
         public static explicit operator SnippetLocalType(XElement xe) { return XTypedServices.ToXTypedElement<SnippetLocalType>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
                
                static SnippetLocalType() {
                    BuildElementDictionary();
                    contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("File", "xmlns://www.fortifysoftware.com/schema/fvdl")), new NamedContentModelEntity(XName.Get("StartLine", "xmlns://www.fortifysoftware.com/schema/fvdl")), new NamedContentModelEntity(XName.Get("EndLine", "xmlns://www.fortifysoftware.com/schema/fvdl")), new NamedContentModelEntity(XName.Get("Text", "xmlns://www.fortifysoftware.com/schema/fvdl")));
                }
                
                /// <summary>
                /// <para>
                /// Regular expression: (File, StartLine, EndLine, Text)
                /// </para>
                /// </summary>
                public SnippetLocalType() {
                }
                
                /// <summary>
                /// <para>
                /// Occurrence: required
                /// </para>
                /// <para>
                /// Regular expression: (File, StartLine, EndLine, Text)
                /// </para>
                /// </summary>
                public string File {
                    get {
                        XElement x = this.GetElement(XName.Get("File", "xmlns://www.fortifysoftware.com/schema/fvdl"));
                        return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
                    }
                    set {
                        this.SetElement(XName.Get("File", "xmlns://www.fortifysoftware.com/schema/fvdl"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
                    }
                }
                
                /// <summary>
                /// <para>
                /// Occurrence: required
                /// </para>
                /// <para>
                /// Regular expression: (File, StartLine, EndLine, Text)
                /// </para>
                /// </summary>
                public uint StartLine {
                    get {
                        XElement x = this.GetElement(XName.Get("StartLine", "xmlns://www.fortifysoftware.com/schema/fvdl"));
                        return XTypedServices.ParseValue<uint>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.UnsignedInt).Datatype);
                    }
                    set {
                        this.SetElement(XName.Get("StartLine", "xmlns://www.fortifysoftware.com/schema/fvdl"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.UnsignedInt).Datatype);
                    }
                }
                
                /// <summary>
                /// <para>
                /// Occurrence: required
                /// </para>
                /// <para>
                /// Regular expression: (File, StartLine, EndLine, Text)
                /// </para>
                /// </summary>
                public uint EndLine {
                    get {
                        XElement x = this.GetElement(XName.Get("EndLine", "xmlns://www.fortifysoftware.com/schema/fvdl"));
                        return XTypedServices.ParseValue<uint>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.UnsignedInt).Datatype);
                    }
                    set {
                        this.SetElement(XName.Get("EndLine", "xmlns://www.fortifysoftware.com/schema/fvdl"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.UnsignedInt).Datatype);
                    }
                }
                
                /// <summary>
                /// <para>
                /// Occurrence: required
                /// </para>
                /// <para>
                /// Regular expression: (File, StartLine, EndLine, Text)
                /// </para>
                /// </summary>
                public string Text {
                    get {
                        XElement x = this.GetElement(XName.Get("Text", "xmlns://www.fortifysoftware.com/schema/fvdl"));
                        return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
                    }
                    set {
                        this.SetElement(XName.Get("Text", "xmlns://www.fortifysoftware.com/schema/fvdl"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
                    }
                }
                
                /// <summary>
                /// <para>
                /// Occurrence: required
                /// </para>
                /// </summary>
                public string id {
                    get {
                        XAttribute x = this.Attribute(XName.Get("id", ""));
                        return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
                    }
                    set {
                        this.SetAttribute(XName.Get("id", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
                    }
                }
                
                [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
                    get {
                        return localElementDictionary;
                    }
                }
                
                [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                XName IXMetaData.SchemaName {
                    get {
                        return XName.Get("Snippet", "xmlns://www.fortifysoftware.com/schema/fvdl");
                    }
                }
                
                [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                SchemaOrigin IXMetaData.TypeOrigin {
                    get {
                        return SchemaOrigin.Fragment;
                    }
                }
                
                [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                ILinqToXsdTypeManager IXMetaData.TypeManager {
                    get {
                        return LinqToXsdTypeManager.Instance;
                    }
                }
                
                public override XTypedElement Clone() {
                    return XTypedServices.CloneXTypedElement<SnippetLocalType>(this);
                }
                
                private static void BuildElementDictionary() {
                    localElementDictionary.Add(XName.Get("File", "xmlns://www.fortifysoftware.com/schema/fvdl"), typeof(string));
                    localElementDictionary.Add(XName.Get("StartLine", "xmlns://www.fortifysoftware.com/schema/fvdl"), typeof(uint));
                    localElementDictionary.Add(XName.Get("EndLine", "xmlns://www.fortifysoftware.com/schema/fvdl"), typeof(uint));
                    localElementDictionary.Add(XName.Get("Text", "xmlns://www.fortifysoftware.com/schema/fvdl"), typeof(string));
                }
                
                ContentModelEntity IXMetaData.GetContentModel() {
                    return contentModel;
                }
            }
        }
        
        /// <summary>
        /// <para>
        /// Regular expression: (Sources, Sinks, CalledWithNoDef)
        /// </para>
        /// </summary>
        public partial class ProgramDataLocalType : XTypedElement, IXMetaData {
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            private static ContentModelEntity contentModel;
            
         public static explicit operator ProgramDataLocalType(XElement xe) { return XTypedServices.ToXTypedElement<ProgramDataLocalType>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
            
            static ProgramDataLocalType() {
                BuildElementDictionary();
                contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("Sources", "xmlns://www.fortifysoftware.com/schema/fvdl")), new NamedContentModelEntity(XName.Get("Sinks", "xmlns://www.fortifysoftware.com/schema/fvdl")), new NamedContentModelEntity(XName.Get("CalledWithNoDef", "xmlns://www.fortifysoftware.com/schema/fvdl")));
            }
            
            /// <summary>
            /// <para>
            /// Regular expression: (Sources, Sinks, CalledWithNoDef)
            /// </para>
            /// </summary>
            public ProgramDataLocalType() {
            }
            
            /// <summary>
            /// <para>
            /// Occurrence: required
            /// </para>
            /// <para>
            /// Regular expression: (Sources, Sinks, CalledWithNoDef)
            /// </para>
            /// </summary>
            public SourcesLocalType Sources {
                get {
                    XElement x = this.GetElement(XName.Get("Sources", "xmlns://www.fortifysoftware.com/schema/fvdl"));
                    return ((SourcesLocalType)(x));
                }
                set {
                    this.SetElement(XName.Get("Sources", "xmlns://www.fortifysoftware.com/schema/fvdl"), value);
                }
            }
            
            /// <summary>
            /// <para>
            /// Occurrence: required
            /// </para>
            /// <para>
            /// Regular expression: (Sources, Sinks, CalledWithNoDef)
            /// </para>
            /// </summary>
            public SinksLocalType Sinks {
                get {
                    XElement x = this.GetElement(XName.Get("Sinks", "xmlns://www.fortifysoftware.com/schema/fvdl"));
                    return ((SinksLocalType)(x));
                }
                set {
                    this.SetElement(XName.Get("Sinks", "xmlns://www.fortifysoftware.com/schema/fvdl"), value);
                }
            }
            
            /// <summary>
            /// <para>
            /// Occurrence: required
            /// </para>
            /// <para>
            /// Regular expression: (Sources, Sinks, CalledWithNoDef)
            /// </para>
            /// </summary>
            public XTypedElement CalledWithNoDef {
                get {
                    XElement x = this.GetElement(XName.Get("CalledWithNoDef", "xmlns://www.fortifysoftware.com/schema/fvdl"));
                    return ((XTypedElement)(x));
                }
                set {
                    this.SetElement(XName.Get("CalledWithNoDef", "xmlns://www.fortifysoftware.com/schema/fvdl"), value);
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
                get {
                    return localElementDictionary;
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            XName IXMetaData.SchemaName {
                get {
                    return XName.Get("ProgramData", "xmlns://www.fortifysoftware.com/schema/fvdl");
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            SchemaOrigin IXMetaData.TypeOrigin {
                get {
                    return SchemaOrigin.Fragment;
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            ILinqToXsdTypeManager IXMetaData.TypeManager {
                get {
                    return LinqToXsdTypeManager.Instance;
                }
            }
            
            public override XTypedElement Clone() {
                return XTypedServices.CloneXTypedElement<ProgramDataLocalType>(this);
            }
            
            private static void BuildElementDictionary() {
                localElementDictionary.Add(XName.Get("Sources", "xmlns://www.fortifysoftware.com/schema/fvdl"), typeof(SourcesLocalType));
                localElementDictionary.Add(XName.Get("Sinks", "xmlns://www.fortifysoftware.com/schema/fvdl"), typeof(SinksLocalType));
                localElementDictionary.Add(XName.Get("CalledWithNoDef", "xmlns://www.fortifysoftware.com/schema/fvdl"), typeof(XTypedElement));
            }
            
            ContentModelEntity IXMetaData.GetContentModel() {
                return contentModel;
            }
            
            /// <summary>
            /// <para>
            /// Regular expression: (SourceInstance+)
            /// </para>
            /// </summary>
            public partial class SourcesLocalType : XTypedElement, IXMetaData {
                
                [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                private XTypedList<SourceInstanceLocalType> SourceInstanceField;
                
                [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();
                
                [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                private static ContentModelEntity contentModel;
                
         public static explicit operator SourcesLocalType(XElement xe) { return XTypedServices.ToXTypedElement<SourcesLocalType>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
                
                static SourcesLocalType() {
                    BuildElementDictionary();
                    contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("SourceInstance", "xmlns://www.fortifysoftware.com/schema/fvdl")));
                }
                
                /// <summary>
                /// <para>
                /// Regular expression: (SourceInstance+)
                /// </para>
                /// </summary>
                public SourcesLocalType() {
                }
                
                /// <summary>
                /// <para>
                /// Occurrence: required, repeating
                /// </para>
                /// <para>
                /// Regular expression: (SourceInstance+)
                /// </para>
                /// </summary>
                public IList<xmlns.www.fortifysoftware.com.schema.fvdl.FVDL.ProgramDataLocalType.SourcesLocalType.SourceInstanceLocalType> SourceInstance {
                    get {
                        if ((this.SourceInstanceField == null)) {
                            this.SourceInstanceField = new XTypedList<SourceInstanceLocalType>(this, LinqToXsdTypeManager.Instance, XName.Get("SourceInstance", "xmlns://www.fortifysoftware.com/schema/fvdl"));
                        }
                        return this.SourceInstanceField;
                    }
                    set {
                        if ((value == null)) {
                            this.SourceInstanceField = null;
                        }
                        else {
                            if ((this.SourceInstanceField == null)) {
                                this.SourceInstanceField = XTypedList<SourceInstanceLocalType>.Initialize(this, LinqToXsdTypeManager.Instance, value, XName.Get("SourceInstance", "xmlns://www.fortifysoftware.com/schema/fvdl"));
                            }
                            else {
                                XTypedServices.SetList<SourceInstanceLocalType>(this.SourceInstanceField, value);
                            }
                        }
                    }
                }
                
                [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
                    get {
                        return localElementDictionary;
                    }
                }
                
                [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                XName IXMetaData.SchemaName {
                    get {
                        return XName.Get("Sources", "xmlns://www.fortifysoftware.com/schema/fvdl");
                    }
                }
                
                [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                SchemaOrigin IXMetaData.TypeOrigin {
                    get {
                        return SchemaOrigin.Fragment;
                    }
                }
                
                [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                ILinqToXsdTypeManager IXMetaData.TypeManager {
                    get {
                        return LinqToXsdTypeManager.Instance;
                    }
                }
                
                public override XTypedElement Clone() {
                    return XTypedServices.CloneXTypedElement<SourcesLocalType>(this);
                }
                
                private static void BuildElementDictionary() {
                    localElementDictionary.Add(XName.Get("SourceInstance", "xmlns://www.fortifysoftware.com/schema/fvdl"), typeof(SourceInstanceLocalType));
                }
                
                ContentModelEntity IXMetaData.GetContentModel() {
                    return contentModel;
                }
                
                /// <summary>
                /// <para>
                /// Regular expression: (FunctionEntry?, FunctionCall?, TaintFlags)
                /// </para>
                /// </summary>
                public partial class SourceInstanceLocalType : XTypedElement, IXMetaData {
                    
                    [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                    static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();
                    
                    [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                    private static ContentModelEntity contentModel;
                    
         public static explicit operator SourceInstanceLocalType(XElement xe) { return XTypedServices.ToXTypedElement<SourceInstanceLocalType>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
                    
                    static SourceInstanceLocalType() {
                        BuildElementDictionary();
                        contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("FunctionEntry", "xmlns://www.fortifysoftware.com/schema/fvdl")), new NamedContentModelEntity(XName.Get("FunctionCall", "xmlns://www.fortifysoftware.com/schema/fvdl")), new NamedContentModelEntity(XName.Get("TaintFlags", "xmlns://www.fortifysoftware.com/schema/fvdl")));
                    }
                    
                    /// <summary>
                    /// <para>
                    /// Regular expression: (FunctionEntry?, FunctionCall?, TaintFlags)
                    /// </para>
                    /// </summary>
                    public SourceInstanceLocalType() {
                    }
                    
                    /// <summary>
                    /// <para>
                    /// Occurrence: optional
                    /// </para>
                    /// <para>
                    /// Regular expression: (FunctionEntry?, FunctionCall?, TaintFlags)
                    /// </para>
                    /// </summary>
                    public FunctionEntryLocalType FunctionEntry {
                        get {
                            XElement x = this.GetElement(XName.Get("FunctionEntry", "xmlns://www.fortifysoftware.com/schema/fvdl"));
                            return ((FunctionEntryLocalType)(x));
                        }
                        set {
                            this.SetElement(XName.Get("FunctionEntry", "xmlns://www.fortifysoftware.com/schema/fvdl"), value);
                        }
                    }
                    
                    /// <summary>
                    /// <para>
                    /// Occurrence: optional
                    /// </para>
                    /// <para>
                    /// Regular expression: (FunctionEntry?, FunctionCall?, TaintFlags)
                    /// </para>
                    /// </summary>
                    public FunctionCallLocalType FunctionCall {
                        get {
                            XElement x = this.GetElement(XName.Get("FunctionCall", "xmlns://www.fortifysoftware.com/schema/fvdl"));
                            return ((FunctionCallLocalType)(x));
                        }
                        set {
                            this.SetElement(XName.Get("FunctionCall", "xmlns://www.fortifysoftware.com/schema/fvdl"), value);
                        }
                    }
                    
                    /// <summary>
                    /// <para>
                    /// Occurrence: required
                    /// </para>
                    /// <para>
                    /// Regular expression: (FunctionEntry?, FunctionCall?, TaintFlags)
                    /// </para>
                    /// </summary>
                    public TaintFlagsLocalType TaintFlags {
                        get {
                            XElement x = this.GetElement(XName.Get("TaintFlags", "xmlns://www.fortifysoftware.com/schema/fvdl"));
                            return ((TaintFlagsLocalType)(x));
                        }
                        set {
                            this.SetElement(XName.Get("TaintFlags", "xmlns://www.fortifysoftware.com/schema/fvdl"), value);
                        }
                    }
                    
                    /// <summary>
                    /// <para>
                    /// Occurrence: required
                    /// </para>
                    /// </summary>
                    public string ruleID {
                        get {
                            XAttribute x = this.Attribute(XName.Get("ruleID", ""));
                            return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
                        }
                        set {
                            this.SetAttribute(XName.Get("ruleID", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
                        }
                    }
                    
                    [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                    Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
                        get {
                            return localElementDictionary;
                        }
                    }
                    
                    [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                    XName IXMetaData.SchemaName {
                        get {
                            return XName.Get("SourceInstance", "xmlns://www.fortifysoftware.com/schema/fvdl");
                        }
                    }
                    
                    [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                    SchemaOrigin IXMetaData.TypeOrigin {
                        get {
                            return SchemaOrigin.Fragment;
                        }
                    }
                    
                    [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                    ILinqToXsdTypeManager IXMetaData.TypeManager {
                        get {
                            return LinqToXsdTypeManager.Instance;
                        }
                    }
                    
                    public override XTypedElement Clone() {
                        return XTypedServices.CloneXTypedElement<SourceInstanceLocalType>(this);
                    }
                    
                    private static void BuildElementDictionary() {
                        localElementDictionary.Add(XName.Get("FunctionEntry", "xmlns://www.fortifysoftware.com/schema/fvdl"), typeof(FunctionEntryLocalType));
                        localElementDictionary.Add(XName.Get("FunctionCall", "xmlns://www.fortifysoftware.com/schema/fvdl"), typeof(FunctionCallLocalType));
                        localElementDictionary.Add(XName.Get("TaintFlags", "xmlns://www.fortifysoftware.com/schema/fvdl"), typeof(TaintFlagsLocalType));
                    }
                    
                    ContentModelEntity IXMetaData.GetContentModel() {
                        return contentModel;
                    }
                    
                    /// <summary>
                    /// <para>
                    /// Regular expression: (SourceLocation, Function)
                    /// </para>
                    /// </summary>
                    public partial class FunctionEntryLocalType : XTypedElement, IXMetaData {
                        
                        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                        static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();
                        
                        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                        private static ContentModelEntity contentModel;
                        
         public static explicit operator FunctionEntryLocalType(XElement xe) { return XTypedServices.ToXTypedElement<FunctionEntryLocalType>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
                        
                        static FunctionEntryLocalType() {
                            BuildElementDictionary();
                            contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("SourceLocation", "xmlns://www.fortifysoftware.com/schema/fvdl")), new NamedContentModelEntity(XName.Get("Function", "xmlns://www.fortifysoftware.com/schema/fvdl")));
                        }
                        
                        /// <summary>
                        /// <para>
                        /// Regular expression: (SourceLocation, Function)
                        /// </para>
                        /// </summary>
                        public FunctionEntryLocalType() {
                        }
                        
                        /// <summary>
                        /// <para>
                        /// Occurrence: required
                        /// </para>
                        /// <para>
                        /// Regular expression: (SourceLocation, Function)
                        /// </para>
                        /// </summary>
                        public SourceLocationLocalType SourceLocation {
                            get {
                                XElement x = this.GetElement(XName.Get("SourceLocation", "xmlns://www.fortifysoftware.com/schema/fvdl"));
                                return ((SourceLocationLocalType)(x));
                            }
                            set {
                                this.SetElement(XName.Get("SourceLocation", "xmlns://www.fortifysoftware.com/schema/fvdl"), value);
                            }
                        }
                        
                        /// <summary>
                        /// <para>
                        /// Occurrence: required
                        /// </para>
                        /// <para>
                        /// Regular expression: (SourceLocation, Function)
                        /// </para>
                        /// </summary>
                        public FunctionLocalType Function {
                            get {
                                XElement x = this.GetElement(XName.Get("Function", "xmlns://www.fortifysoftware.com/schema/fvdl"));
                                return ((FunctionLocalType)(x));
                            }
                            set {
                                this.SetElement(XName.Get("Function", "xmlns://www.fortifysoftware.com/schema/fvdl"), value);
                            }
                        }
                        
                        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
                            get {
                                return localElementDictionary;
                            }
                        }
                        
                        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                        XName IXMetaData.SchemaName {
                            get {
                                return XName.Get("FunctionEntry", "xmlns://www.fortifysoftware.com/schema/fvdl");
                            }
                        }
                        
                        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                        SchemaOrigin IXMetaData.TypeOrigin {
                            get {
                                return SchemaOrigin.Fragment;
                            }
                        }
                        
                        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                        ILinqToXsdTypeManager IXMetaData.TypeManager {
                            get {
                                return LinqToXsdTypeManager.Instance;
                            }
                        }
                        
                        public override XTypedElement Clone() {
                            return XTypedServices.CloneXTypedElement<FunctionEntryLocalType>(this);
                        }
                        
                        private static void BuildElementDictionary() {
                            localElementDictionary.Add(XName.Get("SourceLocation", "xmlns://www.fortifysoftware.com/schema/fvdl"), typeof(SourceLocationLocalType));
                            localElementDictionary.Add(XName.Get("Function", "xmlns://www.fortifysoftware.com/schema/fvdl"), typeof(FunctionLocalType));
                        }
                        
                        ContentModelEntity IXMetaData.GetContentModel() {
                            return contentModel;
                        }
                        
                        public partial class SourceLocationLocalType : XTypedElement, IXMetaData {
                            
         public static explicit operator SourceLocationLocalType(XElement xe) { return XTypedServices.ToXTypedElement<SourceLocationLocalType>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
                            
                            public SourceLocationLocalType() {
                            }
                            
                            /// <summary>
                            /// <para>
                            /// Occurrence: required
                            /// </para>
                            /// </summary>
                            public string path {
                                get {
                                    XAttribute x = this.Attribute(XName.Get("path", ""));
                                    return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
                                }
                                set {
                                    this.SetAttribute(XName.Get("path", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
                                }
                            }
                            
                            /// <summary>
                            /// <para>
                            /// Occurrence: required
                            /// </para>
                            /// </summary>
                            public uint line {
                                get {
                                    XAttribute x = this.Attribute(XName.Get("line", ""));
                                    return XTypedServices.ParseValue<uint>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.UnsignedInt).Datatype);
                                }
                                set {
                                    this.SetAttribute(XName.Get("line", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.UnsignedInt).Datatype);
                                }
                            }
                            
                            /// <summary>
                            /// <para>
                            /// Occurrence: required
                            /// </para>
                            /// </summary>
                            public uint lineEnd {
                                get {
                                    XAttribute x = this.Attribute(XName.Get("lineEnd", ""));
                                    return XTypedServices.ParseValue<uint>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.UnsignedInt).Datatype);
                                }
                                set {
                                    this.SetAttribute(XName.Get("lineEnd", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.UnsignedInt).Datatype);
                                }
                            }
                            
                            /// <summary>
                            /// <para>
                            /// Occurrence: required
                            /// </para>
                            /// </summary>
                            public uint colStart {
                                get {
                                    XAttribute x = this.Attribute(XName.Get("colStart", ""));
                                    return XTypedServices.ParseValue<uint>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.UnsignedInt).Datatype);
                                }
                                set {
                                    this.SetAttribute(XName.Get("colStart", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.UnsignedInt).Datatype);
                                }
                            }
                            
                            /// <summary>
                            /// <para>
                            /// Occurrence: required
                            /// </para>
                            /// </summary>
                            public uint colEnd {
                                get {
                                    XAttribute x = this.Attribute(XName.Get("colEnd", ""));
                                    return XTypedServices.ParseValue<uint>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.UnsignedInt).Datatype);
                                }
                                set {
                                    this.SetAttribute(XName.Get("colEnd", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.UnsignedInt).Datatype);
                                }
                            }
                            
                            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                            XName IXMetaData.SchemaName {
                                get {
                                    return XName.Get("SourceLocation", "xmlns://www.fortifysoftware.com/schema/fvdl");
                                }
                            }
                            
                            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                            SchemaOrigin IXMetaData.TypeOrigin {
                                get {
                                    return SchemaOrigin.Fragment;
                                }
                            }
                            
                            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                            ILinqToXsdTypeManager IXMetaData.TypeManager {
                                get {
                                    return LinqToXsdTypeManager.Instance;
                                }
                            }
                            
                            public override XTypedElement Clone() {
                                return XTypedServices.CloneXTypedElement<SourceLocationLocalType>(this);
                            }
                            
                            ContentModelEntity IXMetaData.GetContentModel() {
                                return ContentModelEntity.Default;
                            }
                        }
                        
                        public partial class FunctionLocalType : XTypedElement, IXMetaData {
                            
         public static explicit operator FunctionLocalType(XElement xe) { return XTypedServices.ToXTypedElement<FunctionLocalType>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
                            
                            public FunctionLocalType() {
                            }
                            
                            /// <summary>
                            /// <para>
                            /// Occurrence: required
                            /// </para>
                            /// </summary>
                            public string name {
                                get {
                                    XAttribute x = this.Attribute(XName.Get("name", ""));
                                    return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
                                }
                                set {
                                    this.SetAttribute(XName.Get("name", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
                                }
                            }
                            
                            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                            XName IXMetaData.SchemaName {
                                get {
                                    return XName.Get("Function", "xmlns://www.fortifysoftware.com/schema/fvdl");
                                }
                            }
                            
                            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                            SchemaOrigin IXMetaData.TypeOrigin {
                                get {
                                    return SchemaOrigin.Fragment;
                                }
                            }
                            
                            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                            ILinqToXsdTypeManager IXMetaData.TypeManager {
                                get {
                                    return LinqToXsdTypeManager.Instance;
                                }
                            }
                            
                            public override XTypedElement Clone() {
                                return XTypedServices.CloneXTypedElement<FunctionLocalType>(this);
                            }
                            
                            ContentModelEntity IXMetaData.GetContentModel() {
                                return ContentModelEntity.Default;
                            }
                        }
                    }
                    
                    /// <summary>
                    /// <para>
                    /// Regular expression: (SourceLocation, Function)
                    /// </para>
                    /// </summary>
                    public partial class FunctionCallLocalType : XTypedElement, IXMetaData {
                        
                        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                        static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();
                        
                        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                        private static ContentModelEntity contentModel;
                        
         public static explicit operator FunctionCallLocalType(XElement xe) { return XTypedServices.ToXTypedElement<FunctionCallLocalType>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
                        
                        static FunctionCallLocalType() {
                            BuildElementDictionary();
                            contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("SourceLocation", "xmlns://www.fortifysoftware.com/schema/fvdl")), new NamedContentModelEntity(XName.Get("Function", "xmlns://www.fortifysoftware.com/schema/fvdl")));
                        }
                        
                        /// <summary>
                        /// <para>
                        /// Regular expression: (SourceLocation, Function)
                        /// </para>
                        /// </summary>
                        public FunctionCallLocalType() {
                        }
                        
                        /// <summary>
                        /// <para>
                        /// Occurrence: required
                        /// </para>
                        /// <para>
                        /// Regular expression: (SourceLocation, Function)
                        /// </para>
                        /// </summary>
                        public SourceLocationLocalType SourceLocation {
                            get {
                                XElement x = this.GetElement(XName.Get("SourceLocation", "xmlns://www.fortifysoftware.com/schema/fvdl"));
                                return ((SourceLocationLocalType)(x));
                            }
                            set {
                                this.SetElement(XName.Get("SourceLocation", "xmlns://www.fortifysoftware.com/schema/fvdl"), value);
                            }
                        }
                        
                        /// <summary>
                        /// <para>
                        /// Occurrence: required
                        /// </para>
                        /// <para>
                        /// Regular expression: (SourceLocation, Function)
                        /// </para>
                        /// </summary>
                        public FunctionLocalType Function {
                            get {
                                XElement x = this.GetElement(XName.Get("Function", "xmlns://www.fortifysoftware.com/schema/fvdl"));
                                return ((FunctionLocalType)(x));
                            }
                            set {
                                this.SetElement(XName.Get("Function", "xmlns://www.fortifysoftware.com/schema/fvdl"), value);
                            }
                        }
                        
                        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
                            get {
                                return localElementDictionary;
                            }
                        }
                        
                        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                        XName IXMetaData.SchemaName {
                            get {
                                return XName.Get("FunctionCall", "xmlns://www.fortifysoftware.com/schema/fvdl");
                            }
                        }
                        
                        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                        SchemaOrigin IXMetaData.TypeOrigin {
                            get {
                                return SchemaOrigin.Fragment;
                            }
                        }
                        
                        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                        ILinqToXsdTypeManager IXMetaData.TypeManager {
                            get {
                                return LinqToXsdTypeManager.Instance;
                            }
                        }
                        
                        public override XTypedElement Clone() {
                            return XTypedServices.CloneXTypedElement<FunctionCallLocalType>(this);
                        }
                        
                        private static void BuildElementDictionary() {
                            localElementDictionary.Add(XName.Get("SourceLocation", "xmlns://www.fortifysoftware.com/schema/fvdl"), typeof(SourceLocationLocalType));
                            localElementDictionary.Add(XName.Get("Function", "xmlns://www.fortifysoftware.com/schema/fvdl"), typeof(FunctionLocalType));
                        }
                        
                        ContentModelEntity IXMetaData.GetContentModel() {
                            return contentModel;
                        }
                        
                        public partial class SourceLocationLocalType : XTypedElement, IXMetaData {
                            
         public static explicit operator SourceLocationLocalType(XElement xe) { return XTypedServices.ToXTypedElement<SourceLocationLocalType>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
                            
                            public SourceLocationLocalType() {
                            }
                            
                            /// <summary>
                            /// <para>
                            /// Occurrence: required
                            /// </para>
                            /// </summary>
                            public string path {
                                get {
                                    XAttribute x = this.Attribute(XName.Get("path", ""));
                                    return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
                                }
                                set {
                                    this.SetAttribute(XName.Get("path", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
                                }
                            }
                            
                            /// <summary>
                            /// <para>
                            /// Occurrence: required
                            /// </para>
                            /// </summary>
                            public uint line {
                                get {
                                    XAttribute x = this.Attribute(XName.Get("line", ""));
                                    return XTypedServices.ParseValue<uint>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.UnsignedInt).Datatype);
                                }
                                set {
                                    this.SetAttribute(XName.Get("line", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.UnsignedInt).Datatype);
                                }
                            }
                            
                            /// <summary>
                            /// <para>
                            /// Occurrence: required
                            /// </para>
                            /// </summary>
                            public uint lineEnd {
                                get {
                                    XAttribute x = this.Attribute(XName.Get("lineEnd", ""));
                                    return XTypedServices.ParseValue<uint>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.UnsignedInt).Datatype);
                                }
                                set {
                                    this.SetAttribute(XName.Get("lineEnd", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.UnsignedInt).Datatype);
                                }
                            }
                            
                            /// <summary>
                            /// <para>
                            /// Occurrence: required
                            /// </para>
                            /// </summary>
                            public uint colStart {
                                get {
                                    XAttribute x = this.Attribute(XName.Get("colStart", ""));
                                    return XTypedServices.ParseValue<uint>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.UnsignedInt).Datatype);
                                }
                                set {
                                    this.SetAttribute(XName.Get("colStart", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.UnsignedInt).Datatype);
                                }
                            }
                            
                            /// <summary>
                            /// <para>
                            /// Occurrence: required
                            /// </para>
                            /// </summary>
                            public uint colEnd {
                                get {
                                    XAttribute x = this.Attribute(XName.Get("colEnd", ""));
                                    return XTypedServices.ParseValue<uint>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.UnsignedInt).Datatype);
                                }
                                set {
                                    this.SetAttribute(XName.Get("colEnd", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.UnsignedInt).Datatype);
                                }
                            }
                            
                            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                            XName IXMetaData.SchemaName {
                                get {
                                    return XName.Get("SourceLocation", "xmlns://www.fortifysoftware.com/schema/fvdl");
                                }
                            }
                            
                            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                            SchemaOrigin IXMetaData.TypeOrigin {
                                get {
                                    return SchemaOrigin.Fragment;
                                }
                            }
                            
                            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                            ILinqToXsdTypeManager IXMetaData.TypeManager {
                                get {
                                    return LinqToXsdTypeManager.Instance;
                                }
                            }
                            
                            public override XTypedElement Clone() {
                                return XTypedServices.CloneXTypedElement<SourceLocationLocalType>(this);
                            }
                            
                            ContentModelEntity IXMetaData.GetContentModel() {
                                return ContentModelEntity.Default;
                            }
                        }
                        
                        public partial class FunctionLocalType : XTypedElement, IXMetaData {
                            
         public static explicit operator FunctionLocalType(XElement xe) { return XTypedServices.ToXTypedElement<FunctionLocalType>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
                            
                            public FunctionLocalType() {
                            }
                            
                            /// <summary>
                            /// <para>
                            /// Occurrence: required
                            /// </para>
                            /// </summary>
                            public string name {
                                get {
                                    XAttribute x = this.Attribute(XName.Get("name", ""));
                                    return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
                                }
                                set {
                                    this.SetAttribute(XName.Get("name", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
                                }
                            }
                            
                            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                            XName IXMetaData.SchemaName {
                                get {
                                    return XName.Get("Function", "xmlns://www.fortifysoftware.com/schema/fvdl");
                                }
                            }
                            
                            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                            SchemaOrigin IXMetaData.TypeOrigin {
                                get {
                                    return SchemaOrigin.Fragment;
                                }
                            }
                            
                            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                            ILinqToXsdTypeManager IXMetaData.TypeManager {
                                get {
                                    return LinqToXsdTypeManager.Instance;
                                }
                            }
                            
                            public override XTypedElement Clone() {
                                return XTypedServices.CloneXTypedElement<FunctionLocalType>(this);
                            }
                            
                            ContentModelEntity IXMetaData.GetContentModel() {
                                return ContentModelEntity.Default;
                            }
                        }
                    }
                    
                    /// <summary>
                    /// <para>
                    /// Regular expression: (TaintFlag+)
                    /// </para>
                    /// </summary>
                    public partial class TaintFlagsLocalType : XTypedElement, IXMetaData {
                        
                        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                        private XTypedList<TaintFlagLocalType> TaintFlagField;
                        
                        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                        static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();
                        
                        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                        private static ContentModelEntity contentModel;
                        
         public static explicit operator TaintFlagsLocalType(XElement xe) { return XTypedServices.ToXTypedElement<TaintFlagsLocalType>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
                        
                        static TaintFlagsLocalType() {
                            BuildElementDictionary();
                            contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("TaintFlag", "xmlns://www.fortifysoftware.com/schema/fvdl")));
                        }
                        
                        /// <summary>
                        /// <para>
                        /// Regular expression: (TaintFlag+)
                        /// </para>
                        /// </summary>
                        public TaintFlagsLocalType() {
                        }
                        
                        /// <summary>
                        /// <para>
                        /// Occurrence: required, repeating
                        /// </para>
                        /// <para>
                        /// Regular expression: (TaintFlag+)
                        /// </para>
                        /// </summary>
                        public IList<xmlns.www.fortifysoftware.com.schema.fvdl.FVDL.ProgramDataLocalType.SourcesLocalType.SourceInstanceLocalType.TaintFlagsLocalType.TaintFlagLocalType> TaintFlag {
                            get {
                                if ((this.TaintFlagField == null)) {
                                    this.TaintFlagField = new XTypedList<TaintFlagLocalType>(this, LinqToXsdTypeManager.Instance, XName.Get("TaintFlag", "xmlns://www.fortifysoftware.com/schema/fvdl"));
                                }
                                return this.TaintFlagField;
                            }
                            set {
                                if ((value == null)) {
                                    this.TaintFlagField = null;
                                }
                                else {
                                    if ((this.TaintFlagField == null)) {
                                        this.TaintFlagField = XTypedList<TaintFlagLocalType>.Initialize(this, LinqToXsdTypeManager.Instance, value, XName.Get("TaintFlag", "xmlns://www.fortifysoftware.com/schema/fvdl"));
                                    }
                                    else {
                                        XTypedServices.SetList<TaintFlagLocalType>(this.TaintFlagField, value);
                                    }
                                }
                            }
                        }
                        
                        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
                            get {
                                return localElementDictionary;
                            }
                        }
                        
                        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                        XName IXMetaData.SchemaName {
                            get {
                                return XName.Get("TaintFlags", "xmlns://www.fortifysoftware.com/schema/fvdl");
                            }
                        }
                        
                        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                        SchemaOrigin IXMetaData.TypeOrigin {
                            get {
                                return SchemaOrigin.Fragment;
                            }
                        }
                        
                        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                        ILinqToXsdTypeManager IXMetaData.TypeManager {
                            get {
                                return LinqToXsdTypeManager.Instance;
                            }
                        }
                        
                        public override XTypedElement Clone() {
                            return XTypedServices.CloneXTypedElement<TaintFlagsLocalType>(this);
                        }
                        
                        private static void BuildElementDictionary() {
                            localElementDictionary.Add(XName.Get("TaintFlag", "xmlns://www.fortifysoftware.com/schema/fvdl"), typeof(TaintFlagLocalType));
                        }
                        
                        ContentModelEntity IXMetaData.GetContentModel() {
                            return contentModel;
                        }
                        
                        public partial class TaintFlagLocalType : XTypedElement, IXMetaData {
                            
         public static explicit operator TaintFlagLocalType(XElement xe) { return XTypedServices.ToXTypedElement<TaintFlagLocalType>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
                            
                            public TaintFlagLocalType() {
                            }
                            
                            /// <summary>
                            /// <para>
                            /// Occurrence: required
                            /// </para>
                            /// </summary>
                            public string name {
                                get {
                                    XAttribute x = this.Attribute(XName.Get("name", ""));
                                    return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
                                }
                                set {
                                    this.SetAttribute(XName.Get("name", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
                                }
                            }
                            
                            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                            XName IXMetaData.SchemaName {
                                get {
                                    return XName.Get("TaintFlag", "xmlns://www.fortifysoftware.com/schema/fvdl");
                                }
                            }
                            
                            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                            SchemaOrigin IXMetaData.TypeOrigin {
                                get {
                                    return SchemaOrigin.Fragment;
                                }
                            }
                            
                            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                            ILinqToXsdTypeManager IXMetaData.TypeManager {
                                get {
                                    return LinqToXsdTypeManager.Instance;
                                }
                            }
                            
                            public override XTypedElement Clone() {
                                return XTypedServices.CloneXTypedElement<TaintFlagLocalType>(this);
                            }
                            
                            ContentModelEntity IXMetaData.GetContentModel() {
                                return ContentModelEntity.Default;
                            }
                        }
                    }
                }
            }
            
            /// <summary>
            /// <para>
            /// Regular expression: (SinkInstance+)
            /// </para>
            /// </summary>
            public partial class SinksLocalType : XTypedElement, IXMetaData {
                
                [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                private XTypedList<SinkInstanceLocalType> SinkInstanceField;
                
                [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();
                
                [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                private static ContentModelEntity contentModel;
                
         public static explicit operator SinksLocalType(XElement xe) { return XTypedServices.ToXTypedElement<SinksLocalType>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
                
                static SinksLocalType() {
                    BuildElementDictionary();
                    contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("SinkInstance", "xmlns://www.fortifysoftware.com/schema/fvdl")));
                }
                
                /// <summary>
                /// <para>
                /// Regular expression: (SinkInstance+)
                /// </para>
                /// </summary>
                public SinksLocalType() {
                }
                
                /// <summary>
                /// <para>
                /// Occurrence: required, repeating
                /// </para>
                /// <para>
                /// Regular expression: (SinkInstance+)
                /// </para>
                /// </summary>
                public IList<xmlns.www.fortifysoftware.com.schema.fvdl.FVDL.ProgramDataLocalType.SinksLocalType.SinkInstanceLocalType> SinkInstance {
                    get {
                        if ((this.SinkInstanceField == null)) {
                            this.SinkInstanceField = new XTypedList<SinkInstanceLocalType>(this, LinqToXsdTypeManager.Instance, XName.Get("SinkInstance", "xmlns://www.fortifysoftware.com/schema/fvdl"));
                        }
                        return this.SinkInstanceField;
                    }
                    set {
                        if ((value == null)) {
                            this.SinkInstanceField = null;
                        }
                        else {
                            if ((this.SinkInstanceField == null)) {
                                this.SinkInstanceField = XTypedList<SinkInstanceLocalType>.Initialize(this, LinqToXsdTypeManager.Instance, value, XName.Get("SinkInstance", "xmlns://www.fortifysoftware.com/schema/fvdl"));
                            }
                            else {
                                XTypedServices.SetList<SinkInstanceLocalType>(this.SinkInstanceField, value);
                            }
                        }
                    }
                }
                
                [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
                    get {
                        return localElementDictionary;
                    }
                }
                
                [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                XName IXMetaData.SchemaName {
                    get {
                        return XName.Get("Sinks", "xmlns://www.fortifysoftware.com/schema/fvdl");
                    }
                }
                
                [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                SchemaOrigin IXMetaData.TypeOrigin {
                    get {
                        return SchemaOrigin.Fragment;
                    }
                }
                
                [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                ILinqToXsdTypeManager IXMetaData.TypeManager {
                    get {
                        return LinqToXsdTypeManager.Instance;
                    }
                }
                
                public override XTypedElement Clone() {
                    return XTypedServices.CloneXTypedElement<SinksLocalType>(this);
                }
                
                private static void BuildElementDictionary() {
                    localElementDictionary.Add(XName.Get("SinkInstance", "xmlns://www.fortifysoftware.com/schema/fvdl"), typeof(SinkInstanceLocalType));
                }
                
                ContentModelEntity IXMetaData.GetContentModel() {
                    return contentModel;
                }
                
                /// <summary>
                /// <para>
                /// Regular expression: (FunctionCall)
                /// </para>
                /// </summary>
                public partial class SinkInstanceLocalType : XTypedElement, IXMetaData {
                    
                    [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                    static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();
                    
                    [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                    private static ContentModelEntity contentModel;
                    
         public static explicit operator SinkInstanceLocalType(XElement xe) { return XTypedServices.ToXTypedElement<SinkInstanceLocalType>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
                    
                    static SinkInstanceLocalType() {
                        BuildElementDictionary();
                        contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("FunctionCall", "xmlns://www.fortifysoftware.com/schema/fvdl")));
                    }
                    
                    /// <summary>
                    /// <para>
                    /// Regular expression: (FunctionCall)
                    /// </para>
                    /// </summary>
                    public SinkInstanceLocalType() {
                    }
                    
                    /// <summary>
                    /// <para>
                    /// Occurrence: required
                    /// </para>
                    /// <para>
                    /// Regular expression: (FunctionCall)
                    /// </para>
                    /// </summary>
                    public FunctionCallLocalType FunctionCall {
                        get {
                            XElement x = this.GetElement(XName.Get("FunctionCall", "xmlns://www.fortifysoftware.com/schema/fvdl"));
                            return ((FunctionCallLocalType)(x));
                        }
                        set {
                            this.SetElement(XName.Get("FunctionCall", "xmlns://www.fortifysoftware.com/schema/fvdl"), value);
                        }
                    }
                    
                    /// <summary>
                    /// <para>
                    /// Occurrence: required
                    /// </para>
                    /// </summary>
                    public string ruleID {
                        get {
                            XAttribute x = this.Attribute(XName.Get("ruleID", ""));
                            return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
                        }
                        set {
                            this.SetAttribute(XName.Get("ruleID", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
                        }
                    }
                    
                    [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                    Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
                        get {
                            return localElementDictionary;
                        }
                    }
                    
                    [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                    XName IXMetaData.SchemaName {
                        get {
                            return XName.Get("SinkInstance", "xmlns://www.fortifysoftware.com/schema/fvdl");
                        }
                    }
                    
                    [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                    SchemaOrigin IXMetaData.TypeOrigin {
                        get {
                            return SchemaOrigin.Fragment;
                        }
                    }
                    
                    [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                    ILinqToXsdTypeManager IXMetaData.TypeManager {
                        get {
                            return LinqToXsdTypeManager.Instance;
                        }
                    }
                    
                    public override XTypedElement Clone() {
                        return XTypedServices.CloneXTypedElement<SinkInstanceLocalType>(this);
                    }
                    
                    private static void BuildElementDictionary() {
                        localElementDictionary.Add(XName.Get("FunctionCall", "xmlns://www.fortifysoftware.com/schema/fvdl"), typeof(FunctionCallLocalType));
                    }
                    
                    ContentModelEntity IXMetaData.GetContentModel() {
                        return contentModel;
                    }
                    
                    /// <summary>
                    /// <para>
                    /// Regular expression: (SourceLocation, Function)
                    /// </para>
                    /// </summary>
                    public partial class FunctionCallLocalType : XTypedElement, IXMetaData {
                        
                        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                        static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();
                        
                        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                        private static ContentModelEntity contentModel;
                        
         public static explicit operator FunctionCallLocalType(XElement xe) { return XTypedServices.ToXTypedElement<FunctionCallLocalType>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
                        
                        static FunctionCallLocalType() {
                            BuildElementDictionary();
                            contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("SourceLocation", "xmlns://www.fortifysoftware.com/schema/fvdl")), new NamedContentModelEntity(XName.Get("Function", "xmlns://www.fortifysoftware.com/schema/fvdl")));
                        }
                        
                        /// <summary>
                        /// <para>
                        /// Regular expression: (SourceLocation, Function)
                        /// </para>
                        /// </summary>
                        public FunctionCallLocalType() {
                        }
                        
                        /// <summary>
                        /// <para>
                        /// Occurrence: required
                        /// </para>
                        /// <para>
                        /// Regular expression: (SourceLocation, Function)
                        /// </para>
                        /// </summary>
                        public SourceLocationLocalType SourceLocation {
                            get {
                                XElement x = this.GetElement(XName.Get("SourceLocation", "xmlns://www.fortifysoftware.com/schema/fvdl"));
                                return ((SourceLocationLocalType)(x));
                            }
                            set {
                                this.SetElement(XName.Get("SourceLocation", "xmlns://www.fortifysoftware.com/schema/fvdl"), value);
                            }
                        }
                        
                        /// <summary>
                        /// <para>
                        /// Occurrence: required
                        /// </para>
                        /// <para>
                        /// Regular expression: (SourceLocation, Function)
                        /// </para>
                        /// </summary>
                        public FunctionLocalType Function {
                            get {
                                XElement x = this.GetElement(XName.Get("Function", "xmlns://www.fortifysoftware.com/schema/fvdl"));
                                return ((FunctionLocalType)(x));
                            }
                            set {
                                this.SetElement(XName.Get("Function", "xmlns://www.fortifysoftware.com/schema/fvdl"), value);
                            }
                        }
                        
                        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
                            get {
                                return localElementDictionary;
                            }
                        }
                        
                        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                        XName IXMetaData.SchemaName {
                            get {
                                return XName.Get("FunctionCall", "xmlns://www.fortifysoftware.com/schema/fvdl");
                            }
                        }
                        
                        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                        SchemaOrigin IXMetaData.TypeOrigin {
                            get {
                                return SchemaOrigin.Fragment;
                            }
                        }
                        
                        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                        ILinqToXsdTypeManager IXMetaData.TypeManager {
                            get {
                                return LinqToXsdTypeManager.Instance;
                            }
                        }
                        
                        public override XTypedElement Clone() {
                            return XTypedServices.CloneXTypedElement<FunctionCallLocalType>(this);
                        }
                        
                        private static void BuildElementDictionary() {
                            localElementDictionary.Add(XName.Get("SourceLocation", "xmlns://www.fortifysoftware.com/schema/fvdl"), typeof(SourceLocationLocalType));
                            localElementDictionary.Add(XName.Get("Function", "xmlns://www.fortifysoftware.com/schema/fvdl"), typeof(FunctionLocalType));
                        }
                        
                        ContentModelEntity IXMetaData.GetContentModel() {
                            return contentModel;
                        }
                        
                        public partial class SourceLocationLocalType : XTypedElement, IXMetaData {
                            
         public static explicit operator SourceLocationLocalType(XElement xe) { return XTypedServices.ToXTypedElement<SourceLocationLocalType>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
                            
                            public SourceLocationLocalType() {
                            }
                            
                            /// <summary>
                            /// <para>
                            /// Occurrence: required
                            /// </para>
                            /// </summary>
                            public string path {
                                get {
                                    XAttribute x = this.Attribute(XName.Get("path", ""));
                                    return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
                                }
                                set {
                                    this.SetAttribute(XName.Get("path", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
                                }
                            }
                            
                            /// <summary>
                            /// <para>
                            /// Occurrence: required
                            /// </para>
                            /// </summary>
                            public uint line {
                                get {
                                    XAttribute x = this.Attribute(XName.Get("line", ""));
                                    return XTypedServices.ParseValue<uint>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.UnsignedInt).Datatype);
                                }
                                set {
                                    this.SetAttribute(XName.Get("line", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.UnsignedInt).Datatype);
                                }
                            }
                            
                            /// <summary>
                            /// <para>
                            /// Occurrence: required
                            /// </para>
                            /// </summary>
                            public uint lineEnd {
                                get {
                                    XAttribute x = this.Attribute(XName.Get("lineEnd", ""));
                                    return XTypedServices.ParseValue<uint>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.UnsignedInt).Datatype);
                                }
                                set {
                                    this.SetAttribute(XName.Get("lineEnd", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.UnsignedInt).Datatype);
                                }
                            }
                            
                            /// <summary>
                            /// <para>
                            /// Occurrence: required
                            /// </para>
                            /// </summary>
                            public uint colStart {
                                get {
                                    XAttribute x = this.Attribute(XName.Get("colStart", ""));
                                    return XTypedServices.ParseValue<uint>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.UnsignedInt).Datatype);
                                }
                                set {
                                    this.SetAttribute(XName.Get("colStart", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.UnsignedInt).Datatype);
                                }
                            }
                            
                            /// <summary>
                            /// <para>
                            /// Occurrence: required
                            /// </para>
                            /// </summary>
                            public uint colEnd {
                                get {
                                    XAttribute x = this.Attribute(XName.Get("colEnd", ""));
                                    return XTypedServices.ParseValue<uint>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.UnsignedInt).Datatype);
                                }
                                set {
                                    this.SetAttribute(XName.Get("colEnd", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.UnsignedInt).Datatype);
                                }
                            }
                            
                            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                            XName IXMetaData.SchemaName {
                                get {
                                    return XName.Get("SourceLocation", "xmlns://www.fortifysoftware.com/schema/fvdl");
                                }
                            }
                            
                            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                            SchemaOrigin IXMetaData.TypeOrigin {
                                get {
                                    return SchemaOrigin.Fragment;
                                }
                            }
                            
                            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                            ILinqToXsdTypeManager IXMetaData.TypeManager {
                                get {
                                    return LinqToXsdTypeManager.Instance;
                                }
                            }
                            
                            public override XTypedElement Clone() {
                                return XTypedServices.CloneXTypedElement<SourceLocationLocalType>(this);
                            }
                            
                            ContentModelEntity IXMetaData.GetContentModel() {
                                return ContentModelEntity.Default;
                            }
                        }
                        
                        public partial class FunctionLocalType : XTypedElement, IXMetaData {
                            
         public static explicit operator FunctionLocalType(XElement xe) { return XTypedServices.ToXTypedElement<FunctionLocalType>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
                            
                            public FunctionLocalType() {
                            }
                            
                            /// <summary>
                            /// <para>
                            /// Occurrence: required
                            /// </para>
                            /// </summary>
                            public string name {
                                get {
                                    XAttribute x = this.Attribute(XName.Get("name", ""));
                                    return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
                                }
                                set {
                                    this.SetAttribute(XName.Get("name", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
                                }
                            }
                            
                            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                            XName IXMetaData.SchemaName {
                                get {
                                    return XName.Get("Function", "xmlns://www.fortifysoftware.com/schema/fvdl");
                                }
                            }
                            
                            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                            SchemaOrigin IXMetaData.TypeOrigin {
                                get {
                                    return SchemaOrigin.Fragment;
                                }
                            }
                            
                            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                            ILinqToXsdTypeManager IXMetaData.TypeManager {
                                get {
                                    return LinqToXsdTypeManager.Instance;
                                }
                            }
                            
                            public override XTypedElement Clone() {
                                return XTypedServices.CloneXTypedElement<FunctionLocalType>(this);
                            }
                            
                            ContentModelEntity IXMetaData.GetContentModel() {
                                return ContentModelEntity.Default;
                            }
                        }
                    }
                }
            }
        }
        
        /// <summary>
        /// <para>
        /// Regular expression: (EngineVersion, InactiveResults, RulePacks, ExpiredRulePacks, UnlicensedRulePacks, Properties+, CommandLine, Errors, MachineInfo, FilterResult, RuleInfo)
        /// </para>
        /// </summary>
        public partial class EngineDataLocalType : XTypedElement, IXMetaData {
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            private XTypedList<PropertiesLocalType> PropertiesField;
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            private static ContentModelEntity contentModel;
            
         public static explicit operator EngineDataLocalType(XElement xe) { return XTypedServices.ToXTypedElement<EngineDataLocalType>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
            
            static EngineDataLocalType() {
                BuildElementDictionary();
                contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("EngineVersion", "xmlns://www.fortifysoftware.com/schema/fvdl")), new NamedContentModelEntity(XName.Get("InactiveResults", "xmlns://www.fortifysoftware.com/schema/fvdl")), new NamedContentModelEntity(XName.Get("RulePacks", "xmlns://www.fortifysoftware.com/schema/fvdl")), new NamedContentModelEntity(XName.Get("ExpiredRulePacks", "xmlns://www.fortifysoftware.com/schema/fvdl")), new NamedContentModelEntity(XName.Get("UnlicensedRulePacks", "xmlns://www.fortifysoftware.com/schema/fvdl")), new NamedContentModelEntity(XName.Get("Properties", "xmlns://www.fortifysoftware.com/schema/fvdl")), new NamedContentModelEntity(XName.Get("CommandLine", "xmlns://www.fortifysoftware.com/schema/fvdl")), new NamedContentModelEntity(XName.Get("Errors", "xmlns://www.fortifysoftware.com/schema/fvdl")), new NamedContentModelEntity(XName.Get("MachineInfo", "xmlns://www.fortifysoftware.com/schema/fvdl")), new NamedContentModelEntity(XName.Get("FilterResult", "xmlns://www.fortifysoftware.com/schema/fvdl")), new NamedContentModelEntity(XName.Get("RuleInfo", "xmlns://www.fortifysoftware.com/schema/fvdl")));
            }
            
            /// <summary>
            /// <para>
            /// Regular expression: (EngineVersion, InactiveResults, RulePacks, ExpiredRulePacks, UnlicensedRulePacks, Properties+, CommandLine, Errors, MachineInfo, FilterResult, RuleInfo)
            /// </para>
            /// </summary>
            public EngineDataLocalType() {
            }
            
            /// <summary>
            /// <para>
            /// Occurrence: required
            /// </para>
            /// <para>
            /// Regular expression: (EngineVersion, InactiveResults, RulePacks, ExpiredRulePacks, UnlicensedRulePacks, Properties+, CommandLine, Errors, MachineInfo, FilterResult, RuleInfo)
            /// </para>
            /// </summary>
            public string EngineVersion {
                get {
                    XElement x = this.GetElement(XName.Get("EngineVersion", "xmlns://www.fortifysoftware.com/schema/fvdl"));
                    return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
                }
                set {
                    this.SetElement(XName.Get("EngineVersion", "xmlns://www.fortifysoftware.com/schema/fvdl"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
                }
            }
            
            /// <summary>
            /// <para>
            /// Occurrence: required
            /// </para>
            /// <para>
            /// Regular expression: (EngineVersion, InactiveResults, RulePacks, ExpiredRulePacks, UnlicensedRulePacks, Properties+, CommandLine, Errors, MachineInfo, FilterResult, RuleInfo)
            /// </para>
            /// </summary>
            public XTypedElement InactiveResults {
                get {
                    XElement x = this.GetElement(XName.Get("InactiveResults", "xmlns://www.fortifysoftware.com/schema/fvdl"));
                    return ((XTypedElement)(x));
                }
                set {
                    this.SetElement(XName.Get("InactiveResults", "xmlns://www.fortifysoftware.com/schema/fvdl"), value);
                }
            }
            
            /// <summary>
            /// <para>
            /// Occurrence: required
            /// </para>
            /// <para>
            /// Regular expression: (EngineVersion, InactiveResults, RulePacks, ExpiredRulePacks, UnlicensedRulePacks, Properties+, CommandLine, Errors, MachineInfo, FilterResult, RuleInfo)
            /// </para>
            /// </summary>
            public RulePacksLocalType RulePacks {
                get {
                    XElement x = this.GetElement(XName.Get("RulePacks", "xmlns://www.fortifysoftware.com/schema/fvdl"));
                    return ((RulePacksLocalType)(x));
                }
                set {
                    this.SetElement(XName.Get("RulePacks", "xmlns://www.fortifysoftware.com/schema/fvdl"), value);
                }
            }
            
            /// <summary>
            /// <para>
            /// Occurrence: required
            /// </para>
            /// <para>
            /// Regular expression: (EngineVersion, InactiveResults, RulePacks, ExpiredRulePacks, UnlicensedRulePacks, Properties+, CommandLine, Errors, MachineInfo, FilterResult, RuleInfo)
            /// </para>
            /// </summary>
            public XTypedElement ExpiredRulePacks {
                get {
                    XElement x = this.GetElement(XName.Get("ExpiredRulePacks", "xmlns://www.fortifysoftware.com/schema/fvdl"));
                    return ((XTypedElement)(x));
                }
                set {
                    this.SetElement(XName.Get("ExpiredRulePacks", "xmlns://www.fortifysoftware.com/schema/fvdl"), value);
                }
            }
            
            /// <summary>
            /// <para>
            /// Occurrence: required
            /// </para>
            /// <para>
            /// Regular expression: (EngineVersion, InactiveResults, RulePacks, ExpiredRulePacks, UnlicensedRulePacks, Properties+, CommandLine, Errors, MachineInfo, FilterResult, RuleInfo)
            /// </para>
            /// </summary>
            public XTypedElement UnlicensedRulePacks {
                get {
                    XElement x = this.GetElement(XName.Get("UnlicensedRulePacks", "xmlns://www.fortifysoftware.com/schema/fvdl"));
                    return ((XTypedElement)(x));
                }
                set {
                    this.SetElement(XName.Get("UnlicensedRulePacks", "xmlns://www.fortifysoftware.com/schema/fvdl"), value);
                }
            }
            
            /// <summary>
            /// <para>
            /// Occurrence: required, repeating
            /// </para>
            /// <para>
            /// Regular expression: (EngineVersion, InactiveResults, RulePacks, ExpiredRulePacks, UnlicensedRulePacks, Properties+, CommandLine, Errors, MachineInfo, FilterResult, RuleInfo)
            /// </para>
            /// </summary>
            public IList<xmlns.www.fortifysoftware.com.schema.fvdl.FVDL.EngineDataLocalType.PropertiesLocalType> Properties {
                get {
                    if ((this.PropertiesField == null)) {
                        this.PropertiesField = new XTypedList<PropertiesLocalType>(this, LinqToXsdTypeManager.Instance, XName.Get("Properties", "xmlns://www.fortifysoftware.com/schema/fvdl"));
                    }
                    return this.PropertiesField;
                }
                set {
                    if ((value == null)) {
                        this.PropertiesField = null;
                    }
                    else {
                        if ((this.PropertiesField == null)) {
                            this.PropertiesField = XTypedList<PropertiesLocalType>.Initialize(this, LinqToXsdTypeManager.Instance, value, XName.Get("Properties", "xmlns://www.fortifysoftware.com/schema/fvdl"));
                        }
                        else {
                            XTypedServices.SetList<PropertiesLocalType>(this.PropertiesField, value);
                        }
                    }
                }
            }
            
            /// <summary>
            /// <para>
            /// Occurrence: required
            /// </para>
            /// <para>
            /// Regular expression: (EngineVersion, InactiveResults, RulePacks, ExpiredRulePacks, UnlicensedRulePacks, Properties+, CommandLine, Errors, MachineInfo, FilterResult, RuleInfo)
            /// </para>
            /// </summary>
            public CommandLineLocalType CommandLine {
                get {
                    XElement x = this.GetElement(XName.Get("CommandLine", "xmlns://www.fortifysoftware.com/schema/fvdl"));
                    return ((CommandLineLocalType)(x));
                }
                set {
                    this.SetElement(XName.Get("CommandLine", "xmlns://www.fortifysoftware.com/schema/fvdl"), value);
                }
            }
            
            /// <summary>
            /// <para>
            /// Occurrence: required
            /// </para>
            /// <para>
            /// Regular expression: (EngineVersion, InactiveResults, RulePacks, ExpiredRulePacks, UnlicensedRulePacks, Properties+, CommandLine, Errors, MachineInfo, FilterResult, RuleInfo)
            /// </para>
            /// </summary>
            public XTypedElement Errors {
                get {
                    XElement x = this.GetElement(XName.Get("Errors", "xmlns://www.fortifysoftware.com/schema/fvdl"));
                    return ((XTypedElement)(x));
                }
                set {
                    this.SetElement(XName.Get("Errors", "xmlns://www.fortifysoftware.com/schema/fvdl"), value);
                }
            }
            
            /// <summary>
            /// <para>
            /// Occurrence: required
            /// </para>
            /// <para>
            /// Regular expression: (EngineVersion, InactiveResults, RulePacks, ExpiredRulePacks, UnlicensedRulePacks, Properties+, CommandLine, Errors, MachineInfo, FilterResult, RuleInfo)
            /// </para>
            /// </summary>
            public MachineInfoLocalType MachineInfo {
                get {
                    XElement x = this.GetElement(XName.Get("MachineInfo", "xmlns://www.fortifysoftware.com/schema/fvdl"));
                    return ((MachineInfoLocalType)(x));
                }
                set {
                    this.SetElement(XName.Get("MachineInfo", "xmlns://www.fortifysoftware.com/schema/fvdl"), value);
                }
            }
            
            /// <summary>
            /// <para>
            /// Occurrence: required
            /// </para>
            /// <para>
            /// Regular expression: (EngineVersion, InactiveResults, RulePacks, ExpiredRulePacks, UnlicensedRulePacks, Properties+, CommandLine, Errors, MachineInfo, FilterResult, RuleInfo)
            /// </para>
            /// </summary>
            public XTypedElement FilterResult {
                get {
                    XElement x = this.GetElement(XName.Get("FilterResult", "xmlns://www.fortifysoftware.com/schema/fvdl"));
                    return ((XTypedElement)(x));
                }
                set {
                    this.SetElement(XName.Get("FilterResult", "xmlns://www.fortifysoftware.com/schema/fvdl"), value);
                }
            }
            
            /// <summary>
            /// <para>
            /// Occurrence: required
            /// </para>
            /// <para>
            /// Regular expression: (EngineVersion, InactiveResults, RulePacks, ExpiredRulePacks, UnlicensedRulePacks, Properties+, CommandLine, Errors, MachineInfo, FilterResult, RuleInfo)
            /// </para>
            /// </summary>
            public RuleInfoLocalType RuleInfo {
                get {
                    XElement x = this.GetElement(XName.Get("RuleInfo", "xmlns://www.fortifysoftware.com/schema/fvdl"));
                    return ((RuleInfoLocalType)(x));
                }
                set {
                    this.SetElement(XName.Get("RuleInfo", "xmlns://www.fortifysoftware.com/schema/fvdl"), value);
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
                get {
                    return localElementDictionary;
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            XName IXMetaData.SchemaName {
                get {
                    return XName.Get("EngineData", "xmlns://www.fortifysoftware.com/schema/fvdl");
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            SchemaOrigin IXMetaData.TypeOrigin {
                get {
                    return SchemaOrigin.Fragment;
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            ILinqToXsdTypeManager IXMetaData.TypeManager {
                get {
                    return LinqToXsdTypeManager.Instance;
                }
            }
            
            public override XTypedElement Clone() {
                return XTypedServices.CloneXTypedElement<EngineDataLocalType>(this);
            }
            
            private static void BuildElementDictionary() {
                localElementDictionary.Add(XName.Get("EngineVersion", "xmlns://www.fortifysoftware.com/schema/fvdl"), typeof(string));
                localElementDictionary.Add(XName.Get("InactiveResults", "xmlns://www.fortifysoftware.com/schema/fvdl"), typeof(XTypedElement));
                localElementDictionary.Add(XName.Get("RulePacks", "xmlns://www.fortifysoftware.com/schema/fvdl"), typeof(RulePacksLocalType));
                localElementDictionary.Add(XName.Get("ExpiredRulePacks", "xmlns://www.fortifysoftware.com/schema/fvdl"), typeof(XTypedElement));
                localElementDictionary.Add(XName.Get("UnlicensedRulePacks", "xmlns://www.fortifysoftware.com/schema/fvdl"), typeof(XTypedElement));
                localElementDictionary.Add(XName.Get("Properties", "xmlns://www.fortifysoftware.com/schema/fvdl"), typeof(PropertiesLocalType));
                localElementDictionary.Add(XName.Get("CommandLine", "xmlns://www.fortifysoftware.com/schema/fvdl"), typeof(CommandLineLocalType));
                localElementDictionary.Add(XName.Get("Errors", "xmlns://www.fortifysoftware.com/schema/fvdl"), typeof(XTypedElement));
                localElementDictionary.Add(XName.Get("MachineInfo", "xmlns://www.fortifysoftware.com/schema/fvdl"), typeof(MachineInfoLocalType));
                localElementDictionary.Add(XName.Get("FilterResult", "xmlns://www.fortifysoftware.com/schema/fvdl"), typeof(XTypedElement));
                localElementDictionary.Add(XName.Get("RuleInfo", "xmlns://www.fortifysoftware.com/schema/fvdl"), typeof(RuleInfoLocalType));
            }
            
            ContentModelEntity IXMetaData.GetContentModel() {
                return contentModel;
            }
            
            /// <summary>
            /// <para>
            /// Regular expression: (RulePack+)
            /// </para>
            /// </summary>
            public partial class RulePacksLocalType : XTypedElement, IXMetaData {
                
                [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                private XTypedList<RulePackLocalType> RulePackField;
                
                [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();
                
                [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                private static ContentModelEntity contentModel;
                
         public static explicit operator RulePacksLocalType(XElement xe) { return XTypedServices.ToXTypedElement<RulePacksLocalType>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
                
                static RulePacksLocalType() {
                    BuildElementDictionary();
                    contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("RulePack", "xmlns://www.fortifysoftware.com/schema/fvdl")));
                }
                
                /// <summary>
                /// <para>
                /// Regular expression: (RulePack+)
                /// </para>
                /// </summary>
                public RulePacksLocalType() {
                }
                
                /// <summary>
                /// <para>
                /// Occurrence: required, repeating
                /// </para>
                /// <para>
                /// Regular expression: (RulePack+)
                /// </para>
                /// </summary>
                public IList<xmlns.www.fortifysoftware.com.schema.fvdl.FVDL.EngineDataLocalType.RulePacksLocalType.RulePackLocalType> RulePack {
                    get {
                        if ((this.RulePackField == null)) {
                            this.RulePackField = new XTypedList<RulePackLocalType>(this, LinqToXsdTypeManager.Instance, XName.Get("RulePack", "xmlns://www.fortifysoftware.com/schema/fvdl"));
                        }
                        return this.RulePackField;
                    }
                    set {
                        if ((value == null)) {
                            this.RulePackField = null;
                        }
                        else {
                            if ((this.RulePackField == null)) {
                                this.RulePackField = XTypedList<RulePackLocalType>.Initialize(this, LinqToXsdTypeManager.Instance, value, XName.Get("RulePack", "xmlns://www.fortifysoftware.com/schema/fvdl"));
                            }
                            else {
                                XTypedServices.SetList<RulePackLocalType>(this.RulePackField, value);
                            }
                        }
                    }
                }
                
                [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
                    get {
                        return localElementDictionary;
                    }
                }
                
                [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                XName IXMetaData.SchemaName {
                    get {
                        return XName.Get("RulePacks", "xmlns://www.fortifysoftware.com/schema/fvdl");
                    }
                }
                
                [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                SchemaOrigin IXMetaData.TypeOrigin {
                    get {
                        return SchemaOrigin.Fragment;
                    }
                }
                
                [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                ILinqToXsdTypeManager IXMetaData.TypeManager {
                    get {
                        return LinqToXsdTypeManager.Instance;
                    }
                }
                
                public override XTypedElement Clone() {
                    return XTypedServices.CloneXTypedElement<RulePacksLocalType>(this);
                }
                
                private static void BuildElementDictionary() {
                    localElementDictionary.Add(XName.Get("RulePack", "xmlns://www.fortifysoftware.com/schema/fvdl"), typeof(RulePackLocalType));
                }
                
                ContentModelEntity IXMetaData.GetContentModel() {
                    return contentModel;
                }
                
                /// <summary>
                /// <para>
                /// Regular expression: (RulePackID, SKU, Name, Version)
                /// </para>
                /// </summary>
                public partial class RulePackLocalType : XTypedElement, IXMetaData {
                    
                    [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                    static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();
                    
                    [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                    private static ContentModelEntity contentModel;
                    
         public static explicit operator RulePackLocalType(XElement xe) { return XTypedServices.ToXTypedElement<RulePackLocalType>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
                    
                    static RulePackLocalType() {
                        BuildElementDictionary();
                        contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("RulePackID", "xmlns://www.fortifysoftware.com/schema/fvdl")), new NamedContentModelEntity(XName.Get("SKU", "xmlns://www.fortifysoftware.com/schema/fvdl")), new NamedContentModelEntity(XName.Get("Name", "xmlns://www.fortifysoftware.com/schema/fvdl")), new NamedContentModelEntity(XName.Get("Version", "xmlns://www.fortifysoftware.com/schema/fvdl")));
                    }
                    
                    /// <summary>
                    /// <para>
                    /// Regular expression: (RulePackID, SKU, Name, Version)
                    /// </para>
                    /// </summary>
                    public RulePackLocalType() {
                    }
                    
                    /// <summary>
                    /// <para>
                    /// Occurrence: required
                    /// </para>
                    /// <para>
                    /// Regular expression: (RulePackID, SKU, Name, Version)
                    /// </para>
                    /// </summary>
                    public string RulePackID {
                        get {
                            XElement x = this.GetElement(XName.Get("RulePackID", "xmlns://www.fortifysoftware.com/schema/fvdl"));
                            return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
                        }
                        set {
                            this.SetElement(XName.Get("RulePackID", "xmlns://www.fortifysoftware.com/schema/fvdl"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
                        }
                    }
                    
                    /// <summary>
                    /// <para>
                    /// Occurrence: required
                    /// </para>
                    /// <para>
                    /// Regular expression: (RulePackID, SKU, Name, Version)
                    /// </para>
                    /// </summary>
                    public string SKU {
                        get {
                            XElement x = this.GetElement(XName.Get("SKU", "xmlns://www.fortifysoftware.com/schema/fvdl"));
                            return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
                        }
                        set {
                            this.SetElement(XName.Get("SKU", "xmlns://www.fortifysoftware.com/schema/fvdl"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
                        }
                    }
                    
                    /// <summary>
                    /// <para>
                    /// Occurrence: required
                    /// </para>
                    /// <para>
                    /// Regular expression: (RulePackID, SKU, Name, Version)
                    /// </para>
                    /// </summary>
                    public string Name {
                        get {
                            XElement x = this.GetElement(XName.Get("Name", "xmlns://www.fortifysoftware.com/schema/fvdl"));
                            return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
                        }
                        set {
                            this.SetElement(XName.Get("Name", "xmlns://www.fortifysoftware.com/schema/fvdl"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
                        }
                    }
                    
                    /// <summary>
                    /// <para>
                    /// Occurrence: required
                    /// </para>
                    /// <para>
                    /// Regular expression: (RulePackID, SKU, Name, Version)
                    /// </para>
                    /// </summary>
                    public string Version {
                        get {
                            XElement x = this.GetElement(XName.Get("Version", "xmlns://www.fortifysoftware.com/schema/fvdl"));
                            return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
                        }
                        set {
                            this.SetElement(XName.Get("Version", "xmlns://www.fortifysoftware.com/schema/fvdl"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
                        }
                    }
                    
                    [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                    Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
                        get {
                            return localElementDictionary;
                        }
                    }
                    
                    [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                    XName IXMetaData.SchemaName {
                        get {
                            return XName.Get("RulePack", "xmlns://www.fortifysoftware.com/schema/fvdl");
                        }
                    }
                    
                    [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                    SchemaOrigin IXMetaData.TypeOrigin {
                        get {
                            return SchemaOrigin.Fragment;
                        }
                    }
                    
                    [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                    ILinqToXsdTypeManager IXMetaData.TypeManager {
                        get {
                            return LinqToXsdTypeManager.Instance;
                        }
                    }
                    
                    public override XTypedElement Clone() {
                        return XTypedServices.CloneXTypedElement<RulePackLocalType>(this);
                    }
                    
                    private static void BuildElementDictionary() {
                        localElementDictionary.Add(XName.Get("RulePackID", "xmlns://www.fortifysoftware.com/schema/fvdl"), typeof(string));
                        localElementDictionary.Add(XName.Get("SKU", "xmlns://www.fortifysoftware.com/schema/fvdl"), typeof(string));
                        localElementDictionary.Add(XName.Get("Name", "xmlns://www.fortifysoftware.com/schema/fvdl"), typeof(string));
                        localElementDictionary.Add(XName.Get("Version", "xmlns://www.fortifysoftware.com/schema/fvdl"), typeof(string));
                    }
                    
                    ContentModelEntity IXMetaData.GetContentModel() {
                        return contentModel;
                    }
                }
            }
            
            /// <summary>
            /// <para>
            /// Regular expression: (Property+)
            /// </para>
            /// </summary>
            public partial class PropertiesLocalType : XTypedElement, IXMetaData {
                
                [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                private XTypedList<PropertyLocalType> PropertyField;
                
                [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();
                
                [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                private static ContentModelEntity contentModel;
                
         public static explicit operator PropertiesLocalType(XElement xe) { return XTypedServices.ToXTypedElement<PropertiesLocalType>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
                
                static PropertiesLocalType() {
                    BuildElementDictionary();
                    contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("Property", "xmlns://www.fortifysoftware.com/schema/fvdl")));
                }
                
                /// <summary>
                /// <para>
                /// Regular expression: (Property+)
                /// </para>
                /// </summary>
                public PropertiesLocalType() {
                }
                
                /// <summary>
                /// <para>
                /// Occurrence: required, repeating
                /// </para>
                /// <para>
                /// Regular expression: (Property+)
                /// </para>
                /// </summary>
                public IList<xmlns.www.fortifysoftware.com.schema.fvdl.FVDL.EngineDataLocalType.PropertiesLocalType.PropertyLocalType> Property {
                    get {
                        if ((this.PropertyField == null)) {
                            this.PropertyField = new XTypedList<PropertyLocalType>(this, LinqToXsdTypeManager.Instance, XName.Get("Property", "xmlns://www.fortifysoftware.com/schema/fvdl"));
                        }
                        return this.PropertyField;
                    }
                    set {
                        if ((value == null)) {
                            this.PropertyField = null;
                        }
                        else {
                            if ((this.PropertyField == null)) {
                                this.PropertyField = XTypedList<PropertyLocalType>.Initialize(this, LinqToXsdTypeManager.Instance, value, XName.Get("Property", "xmlns://www.fortifysoftware.com/schema/fvdl"));
                            }
                            else {
                                XTypedServices.SetList<PropertyLocalType>(this.PropertyField, value);
                            }
                        }
                    }
                }
                
                /// <summary>
                /// <para>
                /// Occurrence: required
                /// </para>
                /// </summary>
                public string type {
                    get {
                        XAttribute x = this.Attribute(XName.Get("type", ""));
                        return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
                    }
                    set {
                        this.SetAttribute(XName.Get("type", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
                    }
                }
                
                [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
                    get {
                        return localElementDictionary;
                    }
                }
                
                [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                XName IXMetaData.SchemaName {
                    get {
                        return XName.Get("Properties", "xmlns://www.fortifysoftware.com/schema/fvdl");
                    }
                }
                
                [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                SchemaOrigin IXMetaData.TypeOrigin {
                    get {
                        return SchemaOrigin.Fragment;
                    }
                }
                
                [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                ILinqToXsdTypeManager IXMetaData.TypeManager {
                    get {
                        return LinqToXsdTypeManager.Instance;
                    }
                }
                
                public override XTypedElement Clone() {
                    return XTypedServices.CloneXTypedElement<PropertiesLocalType>(this);
                }
                
                private static void BuildElementDictionary() {
                    localElementDictionary.Add(XName.Get("Property", "xmlns://www.fortifysoftware.com/schema/fvdl"), typeof(PropertyLocalType));
                }
                
                ContentModelEntity IXMetaData.GetContentModel() {
                    return contentModel;
                }
                
                /// <summary>
                /// <para>
                /// Regular expression: (name, value)
                /// </para>
                /// </summary>
                public partial class PropertyLocalType : XTypedElement, IXMetaData {
                    
                    [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                    static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();
                    
                    [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                    private static ContentModelEntity contentModel;
                    
         public static explicit operator PropertyLocalType(XElement xe) { return XTypedServices.ToXTypedElement<PropertyLocalType>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
                    
                    static PropertyLocalType() {
                        BuildElementDictionary();
                        contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("name", "xmlns://www.fortifysoftware.com/schema/fvdl")), new NamedContentModelEntity(XName.Get("value", "xmlns://www.fortifysoftware.com/schema/fvdl")));
                    }
                    
                    /// <summary>
                    /// <para>
                    /// Regular expression: (name, value)
                    /// </para>
                    /// </summary>
                    public PropertyLocalType() {
                    }
                    
                    /// <summary>
                    /// <para>
                    /// Occurrence: required
                    /// </para>
                    /// <para>
                    /// Regular expression: (name, value)
                    /// </para>
                    /// </summary>
                    public string name {
                        get {
                            XElement x = this.GetElement(XName.Get("name", "xmlns://www.fortifysoftware.com/schema/fvdl"));
                            return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
                        }
                        set {
                            this.SetElement(XName.Get("name", "xmlns://www.fortifysoftware.com/schema/fvdl"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
                        }
                    }
                    
                    /// <summary>
                    /// <para>
                    /// Occurrence: required
                    /// </para>
                    /// <para>
                    /// Regular expression: (name, value)
                    /// </para>
                    /// </summary>
                    public string value {
                        get {
                            XElement x = this.GetElement(XName.Get("value", "xmlns://www.fortifysoftware.com/schema/fvdl"));
                            return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
                        }
                        set {
                            this.SetElement(XName.Get("value", "xmlns://www.fortifysoftware.com/schema/fvdl"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
                        }
                    }
                    
                    [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                    Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
                        get {
                            return localElementDictionary;
                        }
                    }
                    
                    [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                    XName IXMetaData.SchemaName {
                        get {
                            return XName.Get("Property", "xmlns://www.fortifysoftware.com/schema/fvdl");
                        }
                    }
                    
                    [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                    SchemaOrigin IXMetaData.TypeOrigin {
                        get {
                            return SchemaOrigin.Fragment;
                        }
                    }
                    
                    [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                    ILinqToXsdTypeManager IXMetaData.TypeManager {
                        get {
                            return LinqToXsdTypeManager.Instance;
                        }
                    }
                    
                    public override XTypedElement Clone() {
                        return XTypedServices.CloneXTypedElement<PropertyLocalType>(this);
                    }
                    
                    private static void BuildElementDictionary() {
                        localElementDictionary.Add(XName.Get("name", "xmlns://www.fortifysoftware.com/schema/fvdl"), typeof(string));
                        localElementDictionary.Add(XName.Get("value", "xmlns://www.fortifysoftware.com/schema/fvdl"), typeof(string));
                    }
                    
                    ContentModelEntity IXMetaData.GetContentModel() {
                        return contentModel;
                    }
                }
            }
            
            /// <summary>
            /// <para>
            /// Regular expression: (Argument+)
            /// </para>
            /// </summary>
            public partial class CommandLineLocalType : XTypedElement, IXMetaData {
                
                [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                private XSimpleList<string> ArgumentField;
                
                [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();
                
                [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                private static ContentModelEntity contentModel;
                
         public static explicit operator CommandLineLocalType(XElement xe) { return XTypedServices.ToXTypedElement<CommandLineLocalType>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
                
                static CommandLineLocalType() {
                    BuildElementDictionary();
                    contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("Argument", "xmlns://www.fortifysoftware.com/schema/fvdl")));
                }
                
                /// <summary>
                /// <para>
                /// Regular expression: (Argument+)
                /// </para>
                /// </summary>
                public CommandLineLocalType() {
                }
                
                /// <summary>
                /// <para>
                /// Occurrence: required, repeating
                /// </para>
                /// <para>
                /// Regular expression: (Argument+)
                /// </para>
                /// </summary>
                public IList<string> Argument {
                    get {
                        if ((this.ArgumentField == null)) {
                            this.ArgumentField = new XSimpleList<string>(this, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype, XName.Get("Argument", "xmlns://www.fortifysoftware.com/schema/fvdl"));
                        }
                        return this.ArgumentField;
                    }
                    set {
                        if ((value == null)) {
                            this.ArgumentField = null;
                        }
                        else {
                            if ((this.ArgumentField == null)) {
                                this.ArgumentField = XSimpleList<string>.Initialize(this, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype, value, XName.Get("Argument", "xmlns://www.fortifysoftware.com/schema/fvdl"));
                            }
                            else {
                                XTypedServices.SetList<System.String>(this.ArgumentField, value);
                            }
                        }
                    }
                }
                
                [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
                    get {
                        return localElementDictionary;
                    }
                }
                
                [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                XName IXMetaData.SchemaName {
                    get {
                        return XName.Get("CommandLine", "xmlns://www.fortifysoftware.com/schema/fvdl");
                    }
                }
                
                [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                SchemaOrigin IXMetaData.TypeOrigin {
                    get {
                        return SchemaOrigin.Fragment;
                    }
                }
                
                [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                ILinqToXsdTypeManager IXMetaData.TypeManager {
                    get {
                        return LinqToXsdTypeManager.Instance;
                    }
                }
                
                public override XTypedElement Clone() {
                    return XTypedServices.CloneXTypedElement<CommandLineLocalType>(this);
                }
                
                private static void BuildElementDictionary() {
                    localElementDictionary.Add(XName.Get("Argument", "xmlns://www.fortifysoftware.com/schema/fvdl"), typeof(string));
                }
                
                ContentModelEntity IXMetaData.GetContentModel() {
                    return contentModel;
                }
            }
            
            /// <summary>
            /// <para>
            /// Regular expression: (Hostname, Username, Platform)
            /// </para>
            /// </summary>
            public partial class MachineInfoLocalType : XTypedElement, IXMetaData {
                
                [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();
                
                [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                private static ContentModelEntity contentModel;
                
         public static explicit operator MachineInfoLocalType(XElement xe) { return XTypedServices.ToXTypedElement<MachineInfoLocalType>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
                
                static MachineInfoLocalType() {
                    BuildElementDictionary();
                    contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("Hostname", "xmlns://www.fortifysoftware.com/schema/fvdl")), new NamedContentModelEntity(XName.Get("Username", "xmlns://www.fortifysoftware.com/schema/fvdl")), new NamedContentModelEntity(XName.Get("Platform", "xmlns://www.fortifysoftware.com/schema/fvdl")));
                }
                
                /// <summary>
                /// <para>
                /// Regular expression: (Hostname, Username, Platform)
                /// </para>
                /// </summary>
                public MachineInfoLocalType() {
                }
                
                /// <summary>
                /// <para>
                /// Occurrence: required
                /// </para>
                /// <para>
                /// Regular expression: (Hostname, Username, Platform)
                /// </para>
                /// </summary>
                public string Hostname {
                    get {
                        XElement x = this.GetElement(XName.Get("Hostname", "xmlns://www.fortifysoftware.com/schema/fvdl"));
                        return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
                    }
                    set {
                        this.SetElement(XName.Get("Hostname", "xmlns://www.fortifysoftware.com/schema/fvdl"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
                    }
                }
                
                /// <summary>
                /// <para>
                /// Occurrence: required
                /// </para>
                /// <para>
                /// Regular expression: (Hostname, Username, Platform)
                /// </para>
                /// </summary>
                public string Username {
                    get {
                        XElement x = this.GetElement(XName.Get("Username", "xmlns://www.fortifysoftware.com/schema/fvdl"));
                        return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
                    }
                    set {
                        this.SetElement(XName.Get("Username", "xmlns://www.fortifysoftware.com/schema/fvdl"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
                    }
                }
                
                /// <summary>
                /// <para>
                /// Occurrence: required
                /// </para>
                /// <para>
                /// Regular expression: (Hostname, Username, Platform)
                /// </para>
                /// </summary>
                public string Platform {
                    get {
                        XElement x = this.GetElement(XName.Get("Platform", "xmlns://www.fortifysoftware.com/schema/fvdl"));
                        return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
                    }
                    set {
                        this.SetElement(XName.Get("Platform", "xmlns://www.fortifysoftware.com/schema/fvdl"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
                    }
                }
                
                [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
                    get {
                        return localElementDictionary;
                    }
                }
                
                [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                XName IXMetaData.SchemaName {
                    get {
                        return XName.Get("MachineInfo", "xmlns://www.fortifysoftware.com/schema/fvdl");
                    }
                }
                
                [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                SchemaOrigin IXMetaData.TypeOrigin {
                    get {
                        return SchemaOrigin.Fragment;
                    }
                }
                
                [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                ILinqToXsdTypeManager IXMetaData.TypeManager {
                    get {
                        return LinqToXsdTypeManager.Instance;
                    }
                }
                
                public override XTypedElement Clone() {
                    return XTypedServices.CloneXTypedElement<MachineInfoLocalType>(this);
                }
                
                private static void BuildElementDictionary() {
                    localElementDictionary.Add(XName.Get("Hostname", "xmlns://www.fortifysoftware.com/schema/fvdl"), typeof(string));
                    localElementDictionary.Add(XName.Get("Username", "xmlns://www.fortifysoftware.com/schema/fvdl"), typeof(string));
                    localElementDictionary.Add(XName.Get("Platform", "xmlns://www.fortifysoftware.com/schema/fvdl"), typeof(string));
                }
                
                ContentModelEntity IXMetaData.GetContentModel() {
                    return contentModel;
                }
            }
            
            /// <summary>
            /// <para>
            /// Regular expression: (Rule+)
            /// </para>
            /// </summary>
            public partial class RuleInfoLocalType : XTypedElement, IXMetaData {
                
                [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                private XTypedList<RuleLocalType> RuleField;
                
                [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();
                
                [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                private static ContentModelEntity contentModel;
                
         public static explicit operator RuleInfoLocalType(XElement xe) { return XTypedServices.ToXTypedElement<RuleInfoLocalType>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
                
                static RuleInfoLocalType() {
                    BuildElementDictionary();
                    contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("Rule", "xmlns://www.fortifysoftware.com/schema/fvdl")));
                }
                
                /// <summary>
                /// <para>
                /// Regular expression: (Rule+)
                /// </para>
                /// </summary>
                public RuleInfoLocalType() {
                }
                
                /// <summary>
                /// <para>
                /// Occurrence: required, repeating
                /// </para>
                /// <para>
                /// Regular expression: (Rule+)
                /// </para>
                /// </summary>
                public IList<xmlns.www.fortifysoftware.com.schema.fvdl.FVDL.EngineDataLocalType.RuleInfoLocalType.RuleLocalType> Rule {
                    get {
                        if ((this.RuleField == null)) {
                            this.RuleField = new XTypedList<RuleLocalType>(this, LinqToXsdTypeManager.Instance, XName.Get("Rule", "xmlns://www.fortifysoftware.com/schema/fvdl"));
                        }
                        return this.RuleField;
                    }
                    set {
                        if ((value == null)) {
                            this.RuleField = null;
                        }
                        else {
                            if ((this.RuleField == null)) {
                                this.RuleField = XTypedList<RuleLocalType>.Initialize(this, LinqToXsdTypeManager.Instance, value, XName.Get("Rule", "xmlns://www.fortifysoftware.com/schema/fvdl"));
                            }
                            else {
                                XTypedServices.SetList<RuleLocalType>(this.RuleField, value);
                            }
                        }
                    }
                }
                
                [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
                    get {
                        return localElementDictionary;
                    }
                }
                
                [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                XName IXMetaData.SchemaName {
                    get {
                        return XName.Get("RuleInfo", "xmlns://www.fortifysoftware.com/schema/fvdl");
                    }
                }
                
                [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                SchemaOrigin IXMetaData.TypeOrigin {
                    get {
                        return SchemaOrigin.Fragment;
                    }
                }
                
                [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                ILinqToXsdTypeManager IXMetaData.TypeManager {
                    get {
                        return LinqToXsdTypeManager.Instance;
                    }
                }
                
                public override XTypedElement Clone() {
                    return XTypedServices.CloneXTypedElement<RuleInfoLocalType>(this);
                }
                
                private static void BuildElementDictionary() {
                    localElementDictionary.Add(XName.Get("Rule", "xmlns://www.fortifysoftware.com/schema/fvdl"), typeof(RuleLocalType));
                }
                
                ContentModelEntity IXMetaData.GetContentModel() {
                    return contentModel;
                }
                
                /// <summary>
                /// <para>
                /// Regular expression: (MetaInfo)
                /// </para>
                /// </summary>
                public partial class RuleLocalType : XTypedElement, IXMetaData {
                    
                    [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                    static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();
                    
                    [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                    private static ContentModelEntity contentModel;
                    
         public static explicit operator RuleLocalType(XElement xe) { return XTypedServices.ToXTypedElement<RuleLocalType>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
                    
                    static RuleLocalType() {
                        BuildElementDictionary();
                        contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("MetaInfo", "xmlns://www.fortifysoftware.com/schema/fvdl")));
                    }
                    
                    /// <summary>
                    /// <para>
                    /// Regular expression: (MetaInfo)
                    /// </para>
                    /// </summary>
                    public RuleLocalType() {
                    }
                    
                    /// <summary>
                    /// <para>
                    /// Occurrence: required
                    /// </para>
                    /// <para>
                    /// Regular expression: (MetaInfo)
                    /// </para>
                    /// </summary>
                    public MetaInfoLocalType MetaInfo {
                        get {
                            XElement x = this.GetElement(XName.Get("MetaInfo", "xmlns://www.fortifysoftware.com/schema/fvdl"));
                            return ((MetaInfoLocalType)(x));
                        }
                        set {
                            this.SetElement(XName.Get("MetaInfo", "xmlns://www.fortifysoftware.com/schema/fvdl"), value);
                        }
                    }
                    
                    /// <summary>
                    /// <para>
                    /// Occurrence: required
                    /// </para>
                    /// </summary>
                    public string id {
                        get {
                            XAttribute x = this.Attribute(XName.Get("id", ""));
                            return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
                        }
                        set {
                            this.SetAttribute(XName.Get("id", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
                        }
                    }
                    
                    [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                    Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
                        get {
                            return localElementDictionary;
                        }
                    }
                    
                    [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                    XName IXMetaData.SchemaName {
                        get {
                            return XName.Get("Rule", "xmlns://www.fortifysoftware.com/schema/fvdl");
                        }
                    }
                    
                    [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                    SchemaOrigin IXMetaData.TypeOrigin {
                        get {
                            return SchemaOrigin.Fragment;
                        }
                    }
                    
                    [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                    ILinqToXsdTypeManager IXMetaData.TypeManager {
                        get {
                            return LinqToXsdTypeManager.Instance;
                        }
                    }
                    
                    public override XTypedElement Clone() {
                        return XTypedServices.CloneXTypedElement<RuleLocalType>(this);
                    }
                    
                    private static void BuildElementDictionary() {
                        localElementDictionary.Add(XName.Get("MetaInfo", "xmlns://www.fortifysoftware.com/schema/fvdl"), typeof(MetaInfoLocalType));
                    }
                    
                    ContentModelEntity IXMetaData.GetContentModel() {
                        return contentModel;
                    }
                    
                    /// <summary>
                    /// <para>
                    /// Regular expression: (Group+)
                    /// </para>
                    /// </summary>
                    public partial class MetaInfoLocalType : XTypedElement, IXMetaData {
                        
                        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                        private XTypedList<GroupLocalType> GroupField;
                        
                        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                        static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();
                        
                        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                        private static ContentModelEntity contentModel;
                        
         public static explicit operator MetaInfoLocalType(XElement xe) { return XTypedServices.ToXTypedElement<MetaInfoLocalType>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
                        
                        static MetaInfoLocalType() {
                            BuildElementDictionary();
                            contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("Group", "xmlns://www.fortifysoftware.com/schema/fvdl")));
                        }
                        
                        /// <summary>
                        /// <para>
                        /// Regular expression: (Group+)
                        /// </para>
                        /// </summary>
                        public MetaInfoLocalType() {
                        }
                        
                        /// <summary>
                        /// <para>
                        /// Occurrence: required, repeating
                        /// </para>
                        /// <para>
                        /// Regular expression: (Group+)
                        /// </para>
                        /// </summary>
                        public IList<xmlns.www.fortifysoftware.com.schema.fvdl.FVDL.EngineDataLocalType.RuleInfoLocalType.RuleLocalType.MetaInfoLocalType.GroupLocalType> Group {
                            get {
                                if ((this.GroupField == null)) {
                                    this.GroupField = new XTypedList<GroupLocalType>(this, LinqToXsdTypeManager.Instance, XName.Get("Group", "xmlns://www.fortifysoftware.com/schema/fvdl"));
                                }
                                return this.GroupField;
                            }
                            set {
                                if ((value == null)) {
                                    this.GroupField = null;
                                }
                                else {
                                    if ((this.GroupField == null)) {
                                        this.GroupField = XTypedList<GroupLocalType>.Initialize(this, LinqToXsdTypeManager.Instance, value, XName.Get("Group", "xmlns://www.fortifysoftware.com/schema/fvdl"));
                                    }
                                    else {
                                        XTypedServices.SetList<GroupLocalType>(this.GroupField, value);
                                    }
                                }
                            }
                        }
                        
                        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
                            get {
                                return localElementDictionary;
                            }
                        }
                        
                        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                        XName IXMetaData.SchemaName {
                            get {
                                return XName.Get("MetaInfo", "xmlns://www.fortifysoftware.com/schema/fvdl");
                            }
                        }
                        
                        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                        SchemaOrigin IXMetaData.TypeOrigin {
                            get {
                                return SchemaOrigin.Fragment;
                            }
                        }
                        
                        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                        ILinqToXsdTypeManager IXMetaData.TypeManager {
                            get {
                                return LinqToXsdTypeManager.Instance;
                            }
                        }
                        
                        public override XTypedElement Clone() {
                            return XTypedServices.CloneXTypedElement<MetaInfoLocalType>(this);
                        }
                        
                        private static void BuildElementDictionary() {
                            localElementDictionary.Add(XName.Get("Group", "xmlns://www.fortifysoftware.com/schema/fvdl"), typeof(GroupLocalType));
                        }
                        
                        ContentModelEntity IXMetaData.GetContentModel() {
                            return contentModel;
                        }
                        
                        public partial class GroupLocalType : XTypedElement, IXMetaData {
                            
         public static explicit operator GroupLocalType(XElement xe) { return XTypedServices.ToXTypedElement<GroupLocalType>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
                            
                            public GroupLocalType() {
                            }
                            
                            public string TypedValue {
                                get {
                                    XElement x = this.Untyped;
                                    return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
                                }
                                set {
                                    this.SetValue(value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
                                }
                            }
                            
                            /// <summary>
                            /// <para>
                            /// Occurrence: required
                            /// </para>
                            /// </summary>
                            public string name {
                                get {
                                    XAttribute x = this.Attribute(XName.Get("name", ""));
                                    return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
                                }
                                set {
                                    this.SetAttribute(XName.Get("name", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
                                }
                            }
                            
                            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                            XName IXMetaData.SchemaName {
                                get {
                                    return XName.Get("Group", "xmlns://www.fortifysoftware.com/schema/fvdl");
                                }
                            }
                            
                            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                            SchemaOrigin IXMetaData.TypeOrigin {
                                get {
                                    return SchemaOrigin.Fragment;
                                }
                            }
                            
                            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                            ILinqToXsdTypeManager IXMetaData.TypeManager {
                                get {
                                    return LinqToXsdTypeManager.Instance;
                                }
                            }
                            
                            public override XTypedElement Clone() {
                                return XTypedServices.CloneXTypedElement<GroupLocalType>(this);
                            }
                            
                            ContentModelEntity IXMetaData.GetContentModel() {
                                return ContentModelEntity.Default;
                            }
                        }
                    }
                }
            }
        }
    }
    
    public class LinqToXsdTypeManager : ILinqToXsdTypeManager {
        
        static Dictionary<XName, System.Type> elementDictionary = new Dictionary<XName, System.Type>();
        
        private static XmlSchemaSet schemaSet;
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static LinqToXsdTypeManager typeManagerSingleton = new LinqToXsdTypeManager();
        
        static LinqToXsdTypeManager() {
            BuildElementDictionary();
        }
        
        XmlSchemaSet ILinqToXsdTypeManager.Schemas {
            get {
                if ((schemaSet == null)) {
                    XmlSchemaSet tempSet = new XmlSchemaSet();
                    System.Threading.Interlocked.CompareExchange(ref schemaSet, tempSet, null);
                }
                return schemaSet;
            }
            set {
                schemaSet = value;
            }
        }
        
        Dictionary<XName, System.Type> ILinqToXsdTypeManager.GlobalTypeDictionary {
            get {
                return XTypedServices.EmptyDictionary;
            }
        }
        
        Dictionary<XName, System.Type> ILinqToXsdTypeManager.GlobalElementDictionary {
            get {
                return elementDictionary;
            }
        }
        
        Dictionary<System.Type, System.Type> ILinqToXsdTypeManager.RootContentTypeMapping {
            get {
                return XTypedServices.EmptyTypeMappingDictionary;
            }
        }
        
        public static LinqToXsdTypeManager Instance {
            get {
                return typeManagerSingleton;
            }
        }
        
        private static void BuildElementDictionary() {
            elementDictionary.Add(XName.Get("FVDL", "xmlns://www.fortifysoftware.com/schema/fvdl"), typeof(global::xmlns.www.fortifysoftware.com.schema.fvdl.FVDL));
        }
        
        protected internal static void AddSchemas(XmlSchemaSet schemas) {
            schemas.Add(schemaSet);
        }
        
        public static System.Type GetRootType() {
            return elementDictionary[XName.Get("FVDL", "xmlns://www.fortifysoftware.com/schema/fvdl")];
        }
    }
    
    public partial class XRootNamespace {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private XDocument doc;
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private XTypedElement rootObject;
        

    public FVDL FVDL {  get {return rootObject as FVDL; } }
        
        private XRootNamespace() {
        }
        
        public XRootNamespace(FVDL root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XDocument XDocument {
            get {
                return doc;
            }
        }
        
        public static XRootNamespace Load(string xmlFile) {
            XRootNamespace root = new XRootNamespace();
            root.doc = XDocument.Load(xmlFile);
            XTypedElement typedRoot = XTypedServices.ToXTypedElement(root.doc.Root, LinqToXsdTypeManager.Instance);
            if ((typedRoot == null)) {
                throw new LinqToXsdException("Invalid root element in xml document.");
            }
            root.rootObject = typedRoot;
            return root;
        }
        
        public static XRootNamespace Load(string xmlFile, LoadOptions options) {
            XRootNamespace root = new XRootNamespace();
            root.doc = XDocument.Load(xmlFile, options);
            XTypedElement typedRoot = XTypedServices.ToXTypedElement(root.doc.Root, LinqToXsdTypeManager.Instance);
            if ((typedRoot == null)) {
                throw new LinqToXsdException("Invalid root element in xml document.");
            }
            root.rootObject = typedRoot;
            return root;
        }
        
        public static XRootNamespace Load(TextReader textReader) {
            XRootNamespace root = new XRootNamespace();
            root.doc = XDocument.Load(textReader);
            XTypedElement typedRoot = XTypedServices.ToXTypedElement(root.doc.Root, LinqToXsdTypeManager.Instance);
            if ((typedRoot == null)) {
                throw new LinqToXsdException("Invalid root element in xml document.");
            }
            root.rootObject = typedRoot;
            return root;
        }
        
        public static XRootNamespace Load(TextReader textReader, LoadOptions options) {
            XRootNamespace root = new XRootNamespace();
            root.doc = XDocument.Load(textReader, options);
            XTypedElement typedRoot = XTypedServices.ToXTypedElement(root.doc.Root, LinqToXsdTypeManager.Instance);
            if ((typedRoot == null)) {
                throw new LinqToXsdException("Invalid root element in xml document.");
            }
            root.rootObject = typedRoot;
            return root;
        }
        
        public static XRootNamespace Load(XmlReader xmlReader) {
            XRootNamespace root = new XRootNamespace();
            root.doc = XDocument.Load(xmlReader);
            XTypedElement typedRoot = XTypedServices.ToXTypedElement(root.doc.Root, LinqToXsdTypeManager.Instance);
            if ((typedRoot == null)) {
                throw new LinqToXsdException("Invalid root element in xml document.");
            }
            root.rootObject = typedRoot;
            return root;
        }
        
        public static XRootNamespace Parse(string text) {
            XRootNamespace root = new XRootNamespace();
            root.doc = XDocument.Parse(text);
            XTypedElement typedRoot = XTypedServices.ToXTypedElement(root.doc.Root, LinqToXsdTypeManager.Instance);
            if ((typedRoot == null)) {
                throw new LinqToXsdException("Invalid root element in xml document.");
            }
            root.rootObject = typedRoot;
            return root;
        }
        
        public static XRootNamespace Parse(string text, LoadOptions options) {
            XRootNamespace root = new XRootNamespace();
            root.doc = XDocument.Parse(text, options);
            XTypedElement typedRoot = XTypedServices.ToXTypedElement(root.doc.Root, LinqToXsdTypeManager.Instance);
            if ((typedRoot == null)) {
                throw new LinqToXsdException("Invalid root element in xml document.");
            }
            root.rootObject = typedRoot;
            return root;
        }
        
        public virtual void Save(string fileName) {
            doc.Save(fileName);
        }
        
        public virtual void Save(TextWriter textWriter) {
            doc.Save(textWriter);
        }
        
        public virtual void Save(XmlWriter writer) {
            doc.Save(writer);
        }
        
        public virtual void Save(TextWriter textWriter, SaveOptions options) {
            doc.Save(textWriter, options);
        }
        
        public virtual void Save(string fileName, SaveOptions options) {
            doc.Save(fileName, options);
        }
    }
    
    public partial class XRoot {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private XDocument doc;
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private XTypedElement rootObject;
        

    public global::xmlns.www.fortifysoftware.com.schema.fvdl.FVDL FVDL {  get {return rootObject as global::xmlns.www.fortifysoftware.com.schema.fvdl.FVDL; } }
        
        private XRoot() {
        }
        
        public XRoot(global::xmlns.www.fortifysoftware.com.schema.fvdl.FVDL root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XDocument XDocument {
            get {
                return doc;
            }
        }
        
        public static XRoot Load(string xmlFile) {
            XRoot root = new XRoot();
            root.doc = XDocument.Load(xmlFile);
            XTypedElement typedRoot = XTypedServices.ToXTypedElement(root.doc.Root, LinqToXsdTypeManager.Instance);
            if ((typedRoot == null)) {
                throw new LinqToXsdException("Invalid root element in xml document.");
            }
            root.rootObject = typedRoot;
            return root;
        }
        
        public static XRoot Load(string xmlFile, LoadOptions options) {
            XRoot root = new XRoot();
            root.doc = XDocument.Load(xmlFile, options);
            XTypedElement typedRoot = XTypedServices.ToXTypedElement(root.doc.Root, LinqToXsdTypeManager.Instance);
            if ((typedRoot == null)) {
                throw new LinqToXsdException("Invalid root element in xml document.");
            }
            root.rootObject = typedRoot;
            return root;
        }
        
        public static XRoot Load(TextReader textReader) {
            XRoot root = new XRoot();
            root.doc = XDocument.Load(textReader);
            XTypedElement typedRoot = XTypedServices.ToXTypedElement(root.doc.Root, LinqToXsdTypeManager.Instance);
            if ((typedRoot == null)) {
                throw new LinqToXsdException("Invalid root element in xml document.");
            }
            root.rootObject = typedRoot;
            return root;
        }
        
        public static XRoot Load(TextReader textReader, LoadOptions options) {
            XRoot root = new XRoot();
            root.doc = XDocument.Load(textReader, options);
            XTypedElement typedRoot = XTypedServices.ToXTypedElement(root.doc.Root, LinqToXsdTypeManager.Instance);
            if ((typedRoot == null)) {
                throw new LinqToXsdException("Invalid root element in xml document.");
            }
            root.rootObject = typedRoot;
            return root;
        }
        
        public static XRoot Load(XmlReader xmlReader) {
            XRoot root = new XRoot();
            root.doc = XDocument.Load(xmlReader);
            XTypedElement typedRoot = XTypedServices.ToXTypedElement(root.doc.Root, LinqToXsdTypeManager.Instance);
            if ((typedRoot == null)) {
                throw new LinqToXsdException("Invalid root element in xml document.");
            }
            root.rootObject = typedRoot;
            return root;
        }
        
        public static XRoot Parse(string text) {
            XRoot root = new XRoot();
            root.doc = XDocument.Parse(text);
            XTypedElement typedRoot = XTypedServices.ToXTypedElement(root.doc.Root, LinqToXsdTypeManager.Instance);
            if ((typedRoot == null)) {
                throw new LinqToXsdException("Invalid root element in xml document.");
            }
            root.rootObject = typedRoot;
            return root;
        }
        
        public static XRoot Parse(string text, LoadOptions options) {
            XRoot root = new XRoot();
            root.doc = XDocument.Parse(text, options);
            XTypedElement typedRoot = XTypedServices.ToXTypedElement(root.doc.Root, LinqToXsdTypeManager.Instance);
            if ((typedRoot == null)) {
                throw new LinqToXsdException("Invalid root element in xml document.");
            }
            root.rootObject = typedRoot;
            return root;
        }
        
        public virtual void Save(string fileName) {
            doc.Save(fileName);
        }
        
        public virtual void Save(TextWriter textWriter) {
            doc.Save(textWriter);
        }
        
        public virtual void Save(XmlWriter writer) {
            doc.Save(writer);
        }
        
        public virtual void Save(TextWriter textWriter, SaveOptions options) {
            doc.Save(textWriter, options);
        }
        
        public virtual void Save(string fileName, SaveOptions options) {
            doc.Save(fileName, options);
        }
    }
}
